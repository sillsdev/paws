<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE portion SYSTEM "..\Data\PAWSSKWriterDescription.dtd">
<portion>
	<section1 id="sComp">
		<secTitle>Complement Clauses</secTitle>
		<p>
			<content>There are various types of embedded clauses which are complements of main verbs. These represent the argument structure of the verb as well as its syntactic subcategorization.  Therefore, there is some degree of cross-linguistic similarity in the types of clausal complements the verbs subcategorize for.  Adjectives acting as the predicate of the sentence may also subcategorize for the various types of clausal complements.  Examples of each type of clausal complement will be given in the next section, followed by a discussion of the complementizers and their position in declarative embedded clauses.  See section </content>
			<sectionRef sec="sQues"/>
			<content> for similar discussion for questions and section </content>
			<sectionRef sec="sRelCl"/>
			<content> for relative clauses.</content>
		</p>
		<section2 id="sCompType">
			<secTitle>Types of Complement Clauses</secTitle>
			<p>
				<content>Each of the following subsections exemplifies a particular subcategorization requirement for a verb (or other category of head - see section </content>
				<sectionRef sec="sAdvCl"/>
				<content> for examples of Adverbial Clauses). </content>
			</p>
			<section3 id="sCompTypeFinite">
				<secTitle>A Finite Complement</secTitle>
				<p>
					<content>Verbs which take only a finite complement, with or without a complementizer, include the following examples in English: </content>
					<langData>I believe (that) Jill is my friend</langData>
					<content>, </content>
					<langData>Jill insists (that) she is my friend</langData>
					<content> and </content>
					<langData>I know (that) he likes me</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/finiteExample"/>
				</example>
			</section3>
			<section3 id="sCompFiniteOrNonfiniteIP">
				<secTitle>A Finite or A Nonfinite Complement</secTitle>
				<p>
					<content>Verbs which take either a finite complement, with or without a complementizer, or a nonfinite complement without a complementizer, include the following examples in English: </content>
					<langData>I expect that Joe will come to the party</langData>
					<content> and </content>
					<langData>I expect Joe to come to the party</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/finiteOrNonfiniteExample"/>
				</example>
			</section3>
			<section3 id="sCompTypeNonfiniteIP">
				<secTitle>A Nonfinite Complement</secTitle>
				<p>
					<content>Verbs which take only a nonfinite complement without a complementizer, but the subject may be overt or dropped when it is coreferent with the main clause subject, include the following examples in English: </content>
					<langData>I want to come to the party</langData>
					<content> and </content>
					<langData>I want Joe to come to the party</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/nonfiniteExample"/>
				</example>
			</section3>
			<section3 id="sCompTypeNonfiniteIPPRO">
				<secTitle>A Nonfinite Complement with a Coreferent Subject</secTitle>
				<p>
					<content>Verbs which take only a nonfinite complement without a complementizer, and the subject must be coreferent with the main clause subject and dropped, include the following examples in English: </content>
					<langData>Joe tried to come to the party</langData>
					<content> and </content>
					<langData>I tried to think of more examples</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/nonfiniteProDropExample"/>
				</example>
			</section3>
			<section3 id="sCompTypeNonfiniteCP">
				<secTitle>A Nonfinite Complement with a Complementizer</secTitle>
				<p>
					<content>Verbs which take only a nonfinite complement, but the complementizer ‘for’ is present when the embedded subject is not coreferent with the main clause subject, include the following examples in English: </content>
					<langData>Joe would hate for Sue to be at the party</langData>
					<content>, </content>
					<langData>Joe hates to dance</langData>
					<content> and </content>
					<langData>I would like to be appreciated</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/nonfiniteCPOrProDropExample"/>
				</example>
			</section3>
			<section3 id="sCompTypeObject">
				<secTitle>An Object plus a Complement Clause</secTitle>
				<p>
					<content>Verbs which take a direct object as well as either a finite or nonfinite clause complement include the following examples in English: </content>
					<langData>I will persuade Joe that he should come to the party</langData>
					<content> and </content>
					<langData>I will persuade Joe to come to the party</langData>
					<content>.</content>
				</p>
				<p>
					<content>Examples of this type in </content>
					<langName/>
					<content> include:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/DPCPExample"/>
				</example>
			</section3>

		   <section3 id="sCompRaising">
			  <secTitle>Raising Constructions</secTitle>
			  <p><content>‘Raising’ verbs seem to include all the perception verbs and copulas. These verbs take either a nonfinite complement or an adjective complement which itself has either a finite complement with a complementizer or a nonfinite complement. The main verb does not have its own subject, so the subject position is filled by the subject of the nonfinite complement, as in: </content>
				 <langData>John seemed to like the tortillas</langData><content>, </content><langData>Joe is likely to come</langData><content> and </content><langData>The weather is certain to change soon</langData>
				 <content>.  When the complement clause is finite, the subject cannot be ‘raised’, so a dummy </content><langData>it</langData><content> fills the main clause subject position in English, as in: </content>
				 <langData>It seems likely that Joe will come</langData><content> and </content><langData>It is certain that the weather will change soon</langData><content>.</content>
			  </p>
			  <p>
				 <content>Examples of this type in </content>
				 <langName/>
				 <content> include:</content>
			  </p>
			  <example>
				 <interlinear exampleLoc="comp/raisingExample"/>
			  </example>
		   </section3>

		   <section3 id="sCompCausative">
			  <secTitle>Complements of Causatives</secTitle>
			  <p><content>Syntactic causatives are made up of two clauses and have an object that also acts as the subject of the complement clause. That complement clause is always nonfinite, but does not need the nonfinite marker with some verbs in English, as in: </content>
				 <langData>My mother made me clean my room</langData><content>, while it is required with others, as in: </content><langData>The other girl caused us to break up</langData><content>.</content></p>
			  <p>
				 <content>Examples of this type in </content>
				 <langName/>
				 <content> include:</content>
			  </p>
			  <example>
				 <interlinear exampleLoc="comp/causeExample"/>
			  </example>
			  <p show="swIPCausativeNotNo"><content>See section </content><sectionRef sec="sIPCausatives"/><content> for examples of morphological causatives in </content><langName/><content>.</content>
			  </p>
		   </section3>

		   <section3 id="sCompSpeech">
			  <secTitle>Direct and Indirect Speech as Complements</secTitle>
			  <p><content>Verbs of speaking can have either direct or indirect complements. Direct quotations can be just about any sentence or interjection or greeting, such as: </content>
				 <langData>Sue said, “I will come to your house tomorrow”</langData><content> or </content><langData>Joe said, “Bye!”</langData>
			  </p>
			  <p><content>Indirect quotations as complements are more restricted. In English, some speech verbs take a finite sentence complement with or without a complementizer, and an optional prepositional phrase to express the hearer, as in: </content>
				 <langData>Sue said (to me) that she would come here tomorrow</langData><content>.  Others require the hearer to be expressed as an object plus either a finite sentential complement, as in: </content>
				 <langData>Sue told me that she would come here tomorrow</langData><content>, or a nonfinite sentential complement in which the subject must be coreferent with the main clause subject and dropped, as in: </content>
				 <langData>Sue told me to come here tomorrow</langData><content>.</content>
			  </p>
			  <p>
				 <content>Examples of this type in </content>
				 <langName/>
				 <content> include:</content>
			  </p>
			  <example>
				 <interlinear exampleLoc="comp/quotationExample"/>
			  </example>
		   </section3>

		   <section3 id="sCompTypeOther">
				<secTitle>Other Restrictions on Complement Clauses</secTitle>
				<p>
					<content>Some languages also have verbs which have other restrictions on embedded clauses, such as that the embedded verb must be in the subjunctive mood or in the perfective aspect.  Any such examples in </content>
					<langName/>
					<content> are shown here:</content>
				</p>
				<example>
					<interlinear exampleLoc="comp/otherExample"/>
				</example>
			</section3>
		</section2>
		<section2 id="sCompPos">
			<secTitle>Complementizer Position</secTitle>
			<p>
				<content>English has two complementizers which mark declarative embedded clauses, </content>
				<langData>that</langData>
				<content>  for finite clauses and </content>
				<langData>for</langData>
				<content> for nonfinite clauses.  In other languages the complementizers for embedded declarative clauses may or may not be overt, and in some languages they are clitics which are written attached to another word.</content>
			</p>
			<p>
				<content>In </content>
				<langName/>
				<content>, there is </content>
				<case element="comp" attr="comp">
				   <caseText value="no">no complementizer word or clitic for declarative embedded clauses, so all embedded clauses are simply sentences in this language.</caseText>
					<caseText value="yes">at least one complementizer for declarative embedded clauses.</caseText>
				</case>
				<content/>
				<text show="swCompYes">
					<content>  The complementizer is </content>
					<case element="comp" attr="compWord">
						<caseText value="yes">written as a separate word.</caseText>
						<caseText value="no">a clitic which attaches</caseText>
					</case>
					<content/>
					<text show="swCompWordNo">
						<content/>
						<case element="comp" attr="compCliticAttaches">
							<caseText value="edge">at the edge of the embedded clause. </caseText>
							<caseText value="head">to the verb in the embedded clause. </caseText>
						</case>
						<case element="comp" attr="compCliticPos">
							<caseText value="before">These clitic(s) is(are) proclitic(s).</caseText>
							<caseText value="after">These clitic(s) is(are) enclitic(s).</caseText>
							<caseText value="both">There are some complementizer clitics which are proclitics and some which are enclitics.</caseText>
							<caseText value="unknown">_______</caseText>
						</case>
						<content/>
					</text>
				</text>
				<content/>
				<text show="swCompWordYes">
					<content> The complementizer occurs </content>
					<case element="comp" attr="compPos">
						<caseText value="before">before</caseText>
						<caseText value="after">after</caseText>
						<caseText value="either">on either side (but not both sides) of</caseText>
						<caseText value="eitherOrBoth">on either side or on both sides of</caseText>
						<caseText value="beforeOrBoth">before or on both sides of</caseText>
						<caseText value="afterOrBoth">after or on both sides of</caseText>
						<caseText value="both">on both sides of</caseText>
						<caseText value="unknown">_______</caseText>
					</case>
					<content> the embedded clause.  </content>
					<text show="swCompEitherUnrestricted">
						<content>All of the complementizers can occur on either side of the embedded clause.</content>
					</text>
					<content/>
					<text show="swCompEitherRestricted">
						<content>There are restrictions as to which of the complementizers can occur on each side of the embedded clause.</content>
					</text>
					<content/>
				</text>
				<content/>
			</p>
		</section2>
	</section1>
	<showWhen id="swCompYes">
		<whenValue element="comp" attr="comp" value="yes"/>
	</showWhen>
	<showWhen id="swCompWordYes">
		<whenValue element="comp" attr="compWord" value="yes"/>
		<and/>
		<whenValue element="comp" attr="comp" value="yes"/>
	</showWhen>
	<showWhen id="swCompWordNo">
		<whenValue element="comp" attr="compWord" value="no"/>
		<and/>
		<whenValue element="comp" attr="comp" value="yes"/>
	</showWhen>
	<showWhen id="swCompEitherRestricted">
		<whenValue element="comp" attr="compPos" value="before" negateValue="yes"/>
		<and/>
		<whenValue element="comp" attr="compPos" value="after" negateValue="yes"/>
		<and/>
		<whenValue element="comp" attr="compEitherRestricted" value="restricted"/>
		<and/>
		<whenValue element="comp" attr="comp" value="yes"/>
	</showWhen>
	<showWhen id="swCompEitherUnrestricted">
		<whenValue element="comp" attr="compPos" value="before" negateValue="yes"/>
		<and/>
		<whenValue element="comp" attr="compPos" value="after" negateValue="yes"/>
		<and/>
		<whenValue element="comp" attr="compEitherRestricted" value="unrestricted"/>
		<and/>
		<whenValue element="comp" attr="comp" value="yes"/>
	</showWhen>

   <showWhen id="swIPCausativeNotNo">
	  <whenValue element="ip" attr="causative" value="no" negateValue="yes"/>
   </showWhen>
</portion>

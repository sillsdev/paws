<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="/" mode="dp">
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordBefore/@checked)='yes'">
<xsl:text>
rule {DP option CaseI - initial Case marker on DP, remaining DP instead of PP}
DP = Case DP_1
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;Case head type comma&gt; = -
          &lt;Case head type DP-initial&gt; = +
          &lt;DP_1 head type pronoun&gt; = -  
          &lt;DP_1 head type case-marked&gt; = -  
          &lt;DP head case&gt; &lt;= &lt;Case head case&gt;  
          &lt;DP head type relative&gt; &lt;=  -  
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = CaseI
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordAfter/@checked)='yes'">
<xsl:text>
rule {DP option CaseF - final Case marker on DP, remaining DP instead of PP}
DP = DP_1 Case
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;Case head type DP-final&gt; = +
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_1 head type pronoun&gt; = -  
          &lt;DP_1 head type case-marked&gt; = -  
          &lt;DP head type comma&gt; &lt;= &lt;Case head type comma&gt;  
          &lt;DP head case&gt; &lt;= &lt;Case head case&gt;  
          &lt;DP head type relative&gt; &lt;= -  
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = CaseF
</xsl:text>
</xsl:if>
   
     
     
     
      
      
      
      
      
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordBoth/@checked)='yes'">
<xsl:text>
rule {DP option CaseBoth - initial and final Case markers on DP, remaining DP instead of PP}
DP = Case_1 DP_1 Case_2
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;Case_1 head type DP-initial&gt; = +
          &lt;Case_2 head type DP-final&gt; = +
          &lt;Case_1 head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_1 head type pronoun&gt; = -  
          &lt;DP_1 head type case-marked&gt; = -  
          &lt;Case_2 head case&gt; = &lt;Case_1 head case&gt;  
          &lt;DP head case&gt; &lt;= &lt;Case_1 head case&gt;  
          &lt;DP head type comma&gt; &lt;= &lt;Case_2 head type comma&gt;  
          &lt;DP head type relative&gt; &lt;= -  
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = CaseBoth
</xsl:text>
</xsl:if>
      
        
        
        
         
         
         
         
      
   
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordBefore/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordBefore/@checked)='yes'">
<xsl:text>
rule {DP option NegI}
DP = Neg DP_1
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;DP head modifier&gt; = &lt;Neg&gt;
          &lt;Neg head type DP-initial&gt; = +
          &lt;Neg head type comma&gt; = -
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type prefix&gt; &lt;= &lt;Neg head type prefix&gt;
          &lt;DP option&gt; = NegI
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordAfter/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordAfter/@checked)='yes'">
<xsl:text>
rule {DP option NegF}
DP =  DP_1 Neg
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;DP head modifier&gt; = &lt;Neg&gt;
          &lt;Neg head type DP-final&gt; = +
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type suffix&gt; &lt;= &lt;Neg head type suffix&gt;
          &lt;DP head type comma&gt; &lt;= &lt;Neg head type comma&gt;
          &lt;DP option&gt; = NegF
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordBoth/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordBoth/@checked)='yes'">
<xsl:text>
rule {DP option NegBoth}
DP = Neg_1 DP_1 Neg_2
          &lt;DP head&gt; = &lt;DP_1 head&gt;
          &lt;DP head modifier&gt; = &lt;Neg_1&gt;
          &lt;Neg_1 head type DP-initial&gt; = +
          &lt;Neg_2 head type DP-final&gt; = +
          &lt;Neg_1 head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type prefix&gt; &lt;= &lt;Neg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Neg_2 head type suffix&gt;
          &lt;DP head type comma&gt; &lt;= &lt;Neg_2 head type comma&gt;
          &lt;DP option&gt; = NegBoth
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
<xsl:if test="normalize-space(//coord/@conjWord)!='no'">
<xsl:text>
rule {DP option conj - conjoined DPs}
DP = (InitConj) DP_1 Conj DP_2
          &lt;DP head&gt; = &lt;DP_2 head&gt;
          &lt;DP conjoined&gt; = +
          &lt;DP_1 conjoined&gt; = -  |limit recursion
          &lt;DP_1 head case&gt; = &lt;DP_2 head case&gt;  
          &lt;DP_2 head type relative&gt; = -  
          &lt;DP head infl polarity&gt; &lt;= &lt;Conj head infl polarity&gt;  
          &lt;DP head agr number&gt; &lt;= &lt;Conj head agr number&gt;  
          &lt;DP head type prefix&gt; &lt;= &lt;InitConj head type prefix&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;DP option&gt; = conj
</xsl:text>
</xsl:if>
   
      
   
<xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/proclitic/@checked)='yes'">
<xsl:text>
rule {DP option conjPrefix - conjoined DPs}
DP = DP_1  DP_2
          &lt;DP head&gt; = &lt;DP_2 head&gt;
          &lt;DP conjoined&gt; = +
          &lt;DP_1 conjoined&gt; = -  |limit recursion
          &lt;DP_2 head type prefix conj&gt; = +
          &lt;DP_1 head case&gt; = &lt;DP_2 head case&gt;  
          &lt;DP_2 head type relative&gt; = -  
          &lt;DP head infl polarity&gt; &lt;= &lt;DP_2 head conj head infl polarity&gt;  
          &lt;DP head agr number&gt; &lt;= &lt;DP_2 head conj head agr number&gt;  
          &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;DP option&gt; = conjPrefix
</xsl:text>
</xsl:if>
   
      
      
      
      
<xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/enclitic/@checked)='yes'">
<xsl:text>
rule {DP option conjSuffix - conjoined DPs}
DP = DP_1  DP_2
          &lt;DP head&gt; = &lt;DP_2 head&gt;
          &lt;DP conjoined&gt; = +
          &lt;DP_1 conjoined&gt; = -  |limit recursion
          &lt;DP_1 head type suffix conj&gt; = +
          &lt;DP_1 head case&gt; = &lt;DP_2 head case&gt;  
          &lt;DP_2 head type relative&gt; = -  
          &lt;DP head infl polarity&gt; &lt;= &lt;DP_1 head conj head infl polarity&gt;  
          &lt;DP head agr number&gt; &lt;= &lt;DP_1 head conj head agr number&gt;  
          &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;DP option&gt; = conjSuffix
</xsl:text>
</xsl:if>
   
      
      
      
      
<xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/attachesOther/@checked)='yes' or normalize-space(//coord/@noConj)='yes'">
<xsl:text>
rule {DP option conjNone - conjoined DPs}
DP = DP_1  DP_2
          &lt;DP head&gt; = &lt;DP_2 head&gt;
          &lt;DP conjoined&gt; = +
          &lt;DP_1 conjoined&gt; = -  |limit recursion
          &lt;DP_1 head case&gt; = &lt;DP_2 head case&gt;  
          &lt;DP_2 head type prefix conj&gt; = -
          &lt;DP_1 head type suffix conj&gt; = -
          &lt;DP_2 head type prefix topic&gt; = -
          &lt;DP_1 head type suffix topic&gt; = -
          &lt;DP_2 head type prefix focusmarked&gt; = -
          &lt;DP_1 head type suffix focusmarked&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type relative&gt; = -  
          &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;DP option&gt; = conjNone
</xsl:text>
</xsl:if>
   
      
      
      
      
      
   
<xsl:text>
rule {DP option conjListAppos - conjoined DPs, lists and appositives}
DP = DP_1  DP_2
          &lt;DP head&gt; = &lt;DP_2 head&gt;
          &lt;DP conjoined&gt; = +
          &lt;DP_1 conjoined&gt; = -                |limit recursion
          &lt;DP_1 head type noN&gt; = -
          &lt;DP_2 head type noN&gt; = -
          &lt;DP_1 head type gerund&gt; = -         | rule out gerunds 
          &lt;DP_2 head type gerund&gt; = -         | rule out gerunds
          &lt;DP_1 head type verbheaded&gt; = -     | rule out relative clauses 
          &lt;DP_2 head type verbheaded&gt; = -     | rule out relative clauses
          &lt;DP_1 head type possessive&gt; = -     | rule out possessors
          &lt;DP_2 head type possessive&gt; = -     | rule out possessors
          &lt;DP_1 head type prefix poss&gt; = -    | rule out possessors
          &lt;DP_2 head type prefix poss&gt; = -    | rule out possessors
          &lt;DP_1 head type suffix poss&gt; = -    | rule out possessors
          &lt;DP_2 head type suffix poss&gt; = -    | rule out possessors
          &lt;DP_2 head type prefix conj&gt; = -
          &lt;DP_1 head type suffix conj&gt; = -
|         &lt;DP_1 head type comma&gt; = +          | activate this constraint if/when you make comma a word-formation character
                                              | until then you will get ambiguity if you also have DP option conjNone, so deactivate one rule
          &lt;DP_1 head case&gt; = &lt;DP_2 head case&gt;  
          &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;DP head type topic&gt; &lt;= &lt;DP_1 head type topic&gt;
          &lt;DP option&gt; = conjListAppos
</xsl:text>
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes'">
<xsl:text>
rule {DP option RelCP - headless relative CP}
DP = CP
          &lt;DP head&gt; = &lt;CP head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;CP head type relative&gt; = +
          &lt;CP head type question&gt; = -
          &lt;CP head type wh&gt; = +                  | only wh relative clauses
          &lt;CP head type verbheaded&gt; = +          | to restrict recursion
          &lt;CP head fronted head type locative&gt; = -
          &lt;CP head embedded head fronted head type locative&gt; = -
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;DP option&gt; = RelCP
</xsl:text>
</xsl:if> 

    
     
     
     
    
     
     
     
     
     
     
  
     
     
     
     
     

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes'">
<xsl:text>
rule {DP option RelIP - headless relative IP}
DP = IP
          &lt;DP head&gt; = &lt;IP head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;IP head type relative&gt; = +
          &lt;IP head type suffix relative&gt; = -
          &lt;IP head type prefix relative&gt; = -
          &lt;IP head type question&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;DP option&gt; = RelIP
</xsl:text>
</xsl:if>

     
     
     
     
     
     
     
     
     
     
     

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='both'">
<xsl:text>
rule {DP option RelIPAffixes - headless relative IP with relative affixes}
DP = IP
          &lt;DP head&gt; = &lt;IP head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;IP head type relative&gt; = +
          &lt;IP head type suffix relative&gt; = +
          &lt;IP head type prefix relative&gt; = +
          &lt;IP head type question&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;DP option&gt; = RelIPAffixes
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='after'">
<xsl:text>
rule {DP option RelIPSuffix - headless relative IP with relative suffix}
DP = IP
          &lt;DP head&gt; = &lt;IP head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;IP head type relative&gt; = +
          &lt;IP head type suffix relative&gt; = +
          &lt;IP head type prefix relative&gt; = -
          &lt;IP head type question&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;DP option&gt; = RelIPSuffix
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='before'">
<xsl:text>
rule {DP option RelIPPrefix - headless relative IP with relative prefix}
DP = IP
          &lt;DP head&gt; = &lt;IP head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;IP head type relative&gt; = +
          &lt;IP head type suffix relative&gt; = -
          &lt;IP head type prefix relative&gt; = +
          &lt;IP head type question&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;DP option&gt; = RelIPPrefix
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  
  
  

  
<xsl:text>
rule {DP option IndefCP - indefinite clause}
DP = CP
          &lt;DP head&gt; = &lt;CP head&gt;
          &lt;CP head type root&gt; = -  
          &lt;CP head type relative&gt; = -
          &lt;CP head type proper&gt; = -
          &lt;CP head type question&gt; = -
          &lt;CP head type verbheaded&gt; = +          | to restrict recursion
          &lt;CP head type wh&gt; = -                  | only wh relative clauses
          &lt;CP head fronted head type definite&gt; = -
          &lt;CP head fronted head type pronoun&gt; = +
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;DP option&gt; = IndefCP
</xsl:text>    

<xsl:if test="normalize-space(//np/@partNP)='yes'">
<xsl:text>
rule {DP option Gerund - gerund (phrase) as DP}
DP = VP
          &lt;DP head&gt; = &lt;VP head&gt;
          &lt;VP head type gerund&gt; = +  
          &lt;VP head fronted&gt; = none       | gerunds do not include fronting
          &lt;DP head type wh&gt; &lt;= -      | gerunds are not wh
          &lt;DP head type proper&gt; &lt;= -  | gerunds are not vocatives
          &lt;DP head type verbheaded&gt; &lt;= + 
          &lt;DP option&gt; = Gerund
</xsl:text>
</xsl:if>  

  

  

<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBefore/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronI - interrogative indef phrase, initial}
DP = Pron Indef
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron head type wh&gt; = +
          &lt;Pron head type DP-initial&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Pron head type prefix&gt; 
          &lt;DP head infl polarity&gt; &lt;= &lt;Pron head infl polarity&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronI
</xsl:text>
</xsl:if>

    
    
    

<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntAfter/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronF - interrogative indef phrase, final}
DP = Indef Pron
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron head type wh&gt; = +
          &lt;Pron head type DP-final&gt; = +
          &lt;DP head type suffix&gt; &lt;= &lt;Pron head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= &lt;Pron head infl polarity&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronF
</xsl:text>
</xsl:if>

    
    
    

<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBoth/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronBoth - interrogative indef phrase, both}
DP = Pron_1 Indef Pron_2
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron_1 head infl polarity&gt; = positive
          &lt;Pron_2 head infl polarity&gt; = positive
          &lt;Pron_1 head type wh&gt; = +
          &lt;Pron_2 head type wh&gt; = +
          &lt;Pron_1 head type DP-initial&gt; = +
          &lt;Pron_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Pron_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Pron_2 head type suffix&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronBoth
</xsl:text>
</xsl:if>

    
    
    
  
<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBoth/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronBothNegI - interrogative indef phrase, both}
DP = Pron_1 Indef Pron_2
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron_1 head infl polarity&gt; = negative
          &lt;Pron_2 head infl polarity&gt; = positive
          &lt;Pron_1 head type wh&gt; = +
          &lt;Pron_2 head type wh&gt; = +
          &lt;Pron_1 head type DP-initial&gt; = +
          &lt;Pron_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Pron_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Pron_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= &lt;negative&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronBothNegI
</xsl:text>
</xsl:if>

    
    
    
  
<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBoth/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronBothNegF - interrogative indef phrase, both}
DP = Pron_1 Indef Pron_2
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron_1 head infl polarity&gt; = positive
          &lt;Pron_2 head infl polarity&gt; = negative
          &lt;Pron_1 head type wh&gt; = +
          &lt;Pron_2 head type wh&gt; = +
          &lt;Pron_1 head type DP-initial&gt; = +
          &lt;Pron_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Pron_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Pron_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= &lt;negative&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronBothNegF
</xsl:text>
</xsl:if>

    
    
    
  
<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBoth/@checked)='yes'">
<xsl:text>
rule {DP option IndefPronBothNegBoth - interrogative indef phrase, both}
DP = Pron_1 Indef Pron_2
          &lt;DP head&gt; = &lt;Indef head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron_1 head infl polarity&gt; = negative
          &lt;Pron_2 head infl polarity&gt; = negative
          &lt;Pron_1 head type wh&gt; = +
          &lt;Pron_2 head type wh&gt; = +
          &lt;Pron_1 head type DP-initial&gt; = +
          &lt;Pron_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Pron_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Pron_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= &lt;negative&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = IndefPronBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
  
<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBefore/@checked)='yes'">
<xsl:text>
rule {DP option QPronI - quantifier indef phrase, initial}
DP = Q N
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q head type DP-initial&gt; = +
          &lt;Q head type prefix negative&gt; - 
          &lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronI
</xsl:text>
</xsl:if>

    
    
    

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBefore/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBefore/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option QPronINeg - quantifier indef phrase, initial}
DP = Q N
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q head type DP-initial&gt; = +
          &lt;Q head type prefix negative&gt; + 
          &lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt; 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronINeg
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
  
    
    
    
    
    
    
      

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQAfter/@checked)='yes'">
<xsl:text>
rule {DP option QPronF - quantifier indef phrase, final}
DP = N Q
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q head type DP-final&gt; = +
          &lt;Q head type suffix negative&gt; = -
          &lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronF
</xsl:text>
</xsl:if>

    
    
    

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQAfter/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQAfter/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option QPronFNeg - quantifier indef phrase, final}
DP = N Q
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q head type DP-final&gt; = +
          &lt;Q head type suffix negative&gt; = +
          &lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronFNeg
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes'">
<xsl:text>
rule {DP option QPronBoth - quantifier indef phrase, both sides}
DP = Q_1 N Q_2
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q_1 head type DP-initial&gt; = +
          &lt;Q_2 head type DP-final&gt; = +
          &lt;Q_1 head type prefix negative&gt; - 
          &lt;Q_2 head type suffix negative&gt; - 
          &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt; 
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronBoth
</xsl:text>
</xsl:if>

    
    
    

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option QPronBothNegI - quantifier indef phrase, both sides}
DP = Q_1 N Q_2
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q_1 head type DP-initial&gt; = +
          &lt;Q_2 head type DP-final&gt; = +
          &lt;Q_1 head type prefix negative&gt; + 
          &lt;Q_2 head type suffix negative&gt; - 
          &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
  
    
    
    
    
    
    
      

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option QPronBothNegF - quantifier indef phrase, both sides}
DP = Q_1 N Q_2
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q_1 head type prefix negative&gt; - 
          &lt;Q_2 head type suffix negative&gt; + 
          &lt;Q_1 head type DP-initial&gt; = +
          &lt;Q_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
  
    
    
    
    
    
    
      

<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option QPronBothNegBoth - quantifier indef phrase, both sides}
DP = Q_1 N Q_2
          &lt;DP head&gt; = &lt;N head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;N head type generic&gt; = +
          &lt;Q_1 head type prefix negative&gt; + 
          &lt;Q_2 head type suffix negative&gt; + 
          &lt;Q_1 head type DP-initial&gt; = +
          &lt;Q_2 head type DP-final&gt; = +
          &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt; 
          &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt; 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type definite&gt; &lt;= -
          &lt;DP option&gt; = QPronBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
      

  
<xsl:if test="normalize-space(//pron/@poss)='yes' or normalize-space(//pron/@refl)='yes' or normalize-space(//pron/@recip)='yes'">
<xsl:text>
rule {DP option Pron - possessives, reflexives and reciprocals}
DP = Pron
          &lt;DP head&gt; = &lt;Pron head&gt;
          &lt;DP head type case-marked&gt; = -  
         {&lt;Pron head type possessive&gt; = +
         /&lt;Pron head type reflexive&gt; = +
         /&lt;Pron head type reciprocal&gt; = +
         }
          &lt;DP option&gt; = Pron
</xsl:text>
</xsl:if>
  
    
    
    
    
    
  
<xsl:if test="normalize-space(//pron/@pronMod)='no'">
<xsl:text>
rule {DP option noMod - pronoun,dem,quantifiers}
DP = {Pron / Dem / Q / Num / Deg}
          &lt;DP head&gt; = &lt;Pron head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;Pron head type possessive&gt; = -   | these use DP rule "Pron"
          &lt;Pron head type reflexive&gt; = -
          &lt;Pron head type reciprocal&gt; = - 
          &lt;DP head&gt; = &lt;Dem head&gt;
          &lt;DP head&gt; = &lt;Q head&gt;
          &lt;DP head&gt; = &lt;Num head&gt;
          &lt;DP head&gt; = &lt;Deg head&gt;
          &lt;Deg head type quantifier&gt; = +
          &lt;Dem head type wh &gt; = -           | so "which" not separate
          &lt;DP head type prefix poss&gt; = -    | can't be possessors 
          &lt;DP head type suffix poss&gt; = -    | can't be possessors 
          &lt;DP option&gt; = noMod
</xsl:text>
</xsl:if>
  
    
  
  
   
<xsl:text>
rule {DP option 0 - no Deg modifiers, not case-marked - or just on head}
DP = D'  
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP option&gt; = 0
</xsl:text>
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0negI - no Deg modifiers, not case-marked - or just on head}
DP = D'  
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0negI
</xsl:text>
</xsl:if>

    
    
    
  
    
    
      
  
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0negF - no Deg modifiers, not case-marked - or just on head}
DP = D'  
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0negF
</xsl:text>
</xsl:if>

    
    
    
  
    
    
      
  
<xsl:if test="normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0negBoth - no Deg modifiers, not case-marked - or just on head}
DP = D'  
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0negBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
  
    
    
      
    
    
  
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clp - no Deg modifiers, proclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0clp
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clpNegI - no Deg modifiers, proclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0clpNegI
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clpNegF - no Deg modifiers, proclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0clpNegF
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clpNegBoth - no Deg modifiers, proclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0clpNegBoth
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
    
    
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0cle - no Deg modifiers, enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type suffix case&gt;  | promote clitic case to phrase
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0cle
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0cleNegI - no Deg modifiers, enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type suffix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0cleNegI
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0cleNegF - no Deg modifiers, enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type suffix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0cleNegF
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0cleNegBoth - no Deg modifiers, enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = +  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head case&gt; &lt;= &lt;D' head type suffix case&gt;  | promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0cleNegBoth
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
    
    
    
    
    
    

     
     
      
      
      
      
      
    
    
    
    
    
    
   

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clBoth - no Deg modifiers, pro and enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = -  
          &lt;D' head type prefix case&gt; = &lt;D' head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP option&gt; = 0clBoth
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
      
      
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clBothNegI - no Deg modifiers, pro and enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = -  
          &lt;D' head type prefix case&gt; = &lt;D' head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0clBothNegI
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
      
      
    
    
    
    
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clBothNegF - no Deg modifiers, pro and enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = -  
          &lt;DP head type suffix negative&gt; = +  
          &lt;D' head type prefix case&gt; = &lt;D' head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0clBothNegF
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
      
      
    
    
    
    

     
     
      
      
      
      
      
      
      
    
    
    
    
   
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 0clBothNegBoth - no Deg modifiers, pro and enclitic case-marked}
DP = D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head type prefix negative&gt; = +  
          &lt;DP head type suffix negative&gt; = +  
          &lt;D' head type prefix case&gt; = &lt;D' head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;D' head type prefix case&gt;  | promote clitic case to phrase
          &lt;DP head type prefix&gt; == ~[case:none]  
          &lt;DP head type suffix&gt; == ~[case:none]  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 0clBothNegBoth
</xsl:text>
</xsl:if>
   
     
     
      
      
      
      
      
      
      
    
    
    
    
    
    

     
     
      
      
      
      
      
      
      
    
    
    
    
    
    
   

  
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes'">
<xsl:text>
rule {DP option 1 - degree modifier initial, not case-marked or just head marked}
DP = Deg D' 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-initial&gt; = +
          &lt;Deg head type prefix negative&gt; = -  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head case&gt; = &lt;DP head case&gt;
          &lt;Deg head type comma&gt; = -
          &lt;DP head type case-marked&gt; = - 
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
          &lt;DP option&gt; = 1
</xsl:text>
</xsl:if>
  
    
    
    
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1NegI - degree modifier initial, not case-marked or just head marked}
DP = Deg D' 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-initial&gt; = +
          &lt;Deg head type prefix negative&gt; = +  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head case&gt; = &lt;DP head case&gt;
          &lt;Deg head type comma&gt; = -
          &lt;DP head type case-marked&gt; = - 
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1NegI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    

    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1cl - degree modifier initial, proclitic case-marked}
DP = Deg D' 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-initial&gt; = +
          &lt;Deg head type prefix negative&gt; = -  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head case&gt; &lt;= &lt;Deg head type prefix case&gt;    |promote clitic case to phrase
          &lt;Deg head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 1cl
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1clNegI - degree modifier initial, proclitic case-marked}
DP = Deg D' 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-initial&gt; = +
          &lt;Deg head type prefix negative&gt; = +  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head case&gt; &lt;= &lt;Deg head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;Deg head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 1clNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 1q - QP modifier initial, not case-marked or just on head}
DP = QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;QP head type comma&gt; = -
          &lt;DP head type case-marked&gt; = - 
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP option&gt; = 1q
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='mo' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qNegI - QP modifier initial, not case-marked or just on head}
DP = QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;QP head type comma&gt; = -
          &lt;DP head type case-marked&gt; = - 
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 1qcl - QP modifier initial, proclitic case-marked}
DP = QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head case&gt; &lt;= &lt;QP head type prefix case&gt;  | promote clitic case
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 1qcl
</xsl:text>
</xsl:if>

     
     
     
      
      

      
      
      
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclNegI - QP modifier initial, proclitic case-marked}
DP = QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head case&gt; &lt;= &lt;QP head type prefix case&gt;  | promote clitic case
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP option&gt; = 1qclNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    


<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DP option 1qCL - Classifier QP initial, not case-marked or just head}
DP = Class QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP option&gt; = 1qCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLNegI - Classifier QP initial, not case-marked or just head}
DP = Class QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qCLNegI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLf - QP Classifier initial, not case-marked or just head}
DP = QP Class D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type prefix negative&gt; = -  
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP option&gt; = 1qCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLfNegI - QP Classifier initial, not case-marked or just head}
DP = QP Class D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;QP head type prefix negative&gt; = +  
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qCLfNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLo - QP initial, Classifier final, not case-marked or just head}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP option&gt; = 1qCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLoNegI - QP initial, Classifier final, not case-marked or just head}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qCLoNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLoNegF - QP initial, Classifier final, not case-marked or just head}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type case-marked&gt; = -  
          &lt;DP option&gt; = 1qCLoNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qCLoNegBoth - QP initial, Classifier final, not case-marked or just head}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP head type case-marked&gt; = -  
          &lt;DP option&gt; = 1qCLoNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCL - Classifier QP initial, proclitic case-marked}
DP = Class QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase  ????
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 1qclCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLNegI - Classifier QP initial, proclitic case-marked}
DP = Class QP D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase  ????
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLf - QP Classifier initial, proclitic case-marked}
DP = QP Class D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = - 
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 1qclCLf
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLfNegI - QP Classifier initial, proclitic case-marked}
DP = QP Class D'
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = + 
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLfNegI
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLop - QP initial, Classifier final, proclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 1qclCLop
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLopNegI - QP initial, Classifier final, proclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLopNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLopNegF - QP initial, Classifier final, proclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLopNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLopNegBoth - QP initial, Classifier final, proclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;QP head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLopNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLoe - QP initial, Classifier final, enclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 1qclCLoe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLoeNegI - QP initial, Classifier final, enclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLoeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLoeNegF - QP initial, Classifier final, enclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLoeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 1qclCLoeNegBoth - QP initial, Classifier final, enclitic case-marked}
DP = QP D' Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-initial&gt; = +
          &lt;QP head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt;  &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 1qclCLoeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  
  
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes'">
<xsl:text>
rule {DP option 2 - not case-marked or just head - degree modifier final}
DP = D' Deg
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-final&gt; = +
          &lt;Deg head type suffix negative&gt; = -  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
          &lt;DP option&gt; = 2
</xsl:text>
</xsl:if>

   
   
   
   
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2NegF - not case-marked or just head - degree modifier final}
DP = D' Deg
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-final&gt; = +
          &lt;Deg head type suffix negative&gt; = +  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2NegF
</xsl:text>
</xsl:if>

   
   
   
    
    
    
    
    
   
   
   
    
    
    
    
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2cl - enclitic case-marked - degree modifier final}
DP = D' Deg
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-final&gt; = +
          &lt;Deg head type suffix negative&gt; = -  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
          &lt;Deg head type suffix &gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg head type suffix case&gt;  |promote clitic case to phrase 
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2cl
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2clNegF - enclitic case-marked - degree modifier final}
DP = D' Deg
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg head type modifies_NP&gt; = +
          &lt;Deg head type DP-final&gt; = +
          &lt;Deg head type suffix negative&gt; = +  
          &lt;Deg head agr&gt; = &lt;DP head agr&gt;
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
          &lt;Deg head type suffix &gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg head type suffix case&gt;  |promote clitic case to phrase 
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2clNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
    
     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
   
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 2q - not case-marked or just head - QP modifier final}
DP = D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP option&gt; = 2q
</xsl:text>
</xsl:if>

   
   
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qNegF - not case-marked or just head - QP modifier final}
DP = D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qNegF
</xsl:text>
</xsl:if>

   
   
   
  
  
  
  
    
    
    
    
  
  
  
  
  
  
    
    
    
    
  
  
  
  
  
  
  
  
  
  
    
    
    
    
  
  
  
  
  
  
  
  
  
  
    
    
    
    

   
   
   
  
  
  
  
    
    
    
    
  
  
  
  
  
  
    
    
    
    
  
  
  
  
  
  
  
  
  
  
    
    
    
    
  
  
  
  
  
  
  
  
  
  
    
    
    
    
 
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 2qcl - enclitic case-marked - QP modifier final}
DP = D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2qcl
</xsl:text>
</xsl:if>
   
     
     
     
      
      
      
      
      
      
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
   
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclNegF - enclitic case-marked - QP modifier final}
DP = D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclNegF
</xsl:text>
</xsl:if>
   
     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
   
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 2qCL - not case-marked or just head - Classifier QP final}
DP = D' Class QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP option&gt; = 2qCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLNegF - not case-marked or just head - Classifier QP final}
DP = D' Class QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qCLNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLf - not case-marked or just head - QP Classifier final}
DP = D' QP Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP option&gt; = 2qCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLfNegF - not case-marked or just head - QP Classifier final}
DP = D' QP Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qCLfNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLo - not case-marked or just head - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP option&gt; = 2qCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLoNegI - not case-marked or just head - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qCLoNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLoNegF - not case-marked or just head - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qCLoNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qCLoNegBoth - not case-marked or just head - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head case&gt; = &lt;DP head case&gt;
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qCLoNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
 
<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCL - enclitic case-marked - Classifier QP final}
DP = D' Class QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2qclCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLNegF - enclitic case-marked - Classifier QP final}
DP = D' Class QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLf - enclitic case-marked - QP Classifier final}
DP = D' QP Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head typesuffix &gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2qclCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLfNegF - enclitic case-marked - QP Classifier final}
DP = D' QP Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head typesuffix &gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLfNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLop - proclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2qclCLop
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLopNegI - proclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLopNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLopNegF - proclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLopNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLopNegBoth - proclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLopNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLoe - enclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP option&gt; = 2qclCLoe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLoeNegI - enclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = -  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLoeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEmclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLoeNegF - enclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLoeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 2qclCLoeNegBoth - enclitic case-marked - QP final, Classifier initial}
DP = Class D' QP
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP head type modifies_NP&gt; = +
          &lt;QP head type DP-final&gt; = +
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP head type suffix negative&gt; = +  
          &lt;QP head agr&gt; = &lt;DP head agr&gt;
          &lt;QP head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP head type suffix&gt;
          &lt;QP head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP head type suffix case&gt;  |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= +  
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 2qclCLoeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

 

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3 - not case-marked or just head - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;DP option&gt; = 3
</xsl:text>
</xsl:if>
  
    
    
    
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3NegI - not case-marked or just head - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3NegI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3NegF - not case-marked or just head - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3NegF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3NegBoth - not case-marked or just head - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3NegBoth
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clp - proclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clp
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clpNegI - proclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clpNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clpNegF - proclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clpNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clpNegBoth - proclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clpNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3cle - enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3cle
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3cleNegI - enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3cleNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3cleNegF - enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3cleNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3cleNegBoth - enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Deg_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3cleNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
    
    
    
    
    
    


<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clBoth - pro and enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;Deg_1 head type prefix case&gt; = &lt;Deg_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clBothNegI - pro and enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = -  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;Deg_1 head type prefix case&gt; = &lt;Deg_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clBothNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clBothNegF - pro and enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = - 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;Deg_1 head type prefix case&gt; = &lt;Deg_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clBothNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clBothNegBoth - pro and enclitic case-marked - degree modifiers both sides}
DP = Deg_1 D' Deg_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Deg_1 head type prefix negative&gt; = + 
          &lt;Deg_2 head type suffix negative&gt; = +  
          &lt;Deg_1 head type modifies_NP&gt; = +
          &lt;Deg_2 head type modifies_NP&gt; = +
          &lt;Deg_1 head type DP-initial&gt;  = +
          &lt;Deg_2 head type DP-final&gt;    = +
          &lt;Deg_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
          &lt;Deg_1 head type prefix&gt; == ~[case:none]  
          &lt;Deg_2 head type suffix&gt; == ~[case:none]  
          &lt;Deg_1 head type prefix case&gt; = &lt;Deg_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Deg_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clBothNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
    
    
    
    
    
    


<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 3q - not case-marked or just head - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3q
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qNegI - not case-marked or just head - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qNegF - not case-marked or just head - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qNegBoth - not case-marked or just head - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 3qclp - proclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3qclp
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclpNegI - proclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclpNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclpNegF - proclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclpNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclpNegBoth - proclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclpNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 3qcle - enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3qcle
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qcleNegI - enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qcleNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qcleNegF - enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qcleNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qcleNegBoth - enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qcleNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes'">
<xsl:text>
rule {DP option 3qclBoth - pro and enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3qclBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclBothNegI - pro and enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclBothNegI
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclBothNegF - pro and enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclBothNegF
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosPrefixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosSuffixQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3qclBothNegBoth - pro and enclitic case-marked - QP modifiers both sides}
DP = QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3qclBothNegBoth
</xsl:text>
</xsl:if>

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
    
    

     
     
     
      
      
      
      
      
      
      
      
      
      
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
    
    
     
     
     
     
     
     
     
     
     
     
      
      
     
     
     
     
     
     
     
     
    
    
    
    
    
    


    
<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3CLib - not case-marked or just head - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLib
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibNegI - not case-marked or just head - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibNegF - not case-marked or just head - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibNegBoth - not case-marked or just head - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3CLia - not case-marked or just head - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLia
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiaNegI - not case-marked or just head - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiaNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiaNegF - not case-marked or just head - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiaNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiaNegBoth - not case-marked or just head - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiaNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3CLfb - not case-marked or just head - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLfb
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfbNegI - not case-marked or just head - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfbNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfbNegF - not case-marked or just head - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfbNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfbNegBoth - not case-marked or just head - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfbNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3CLfa - not case-marked or just head - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP option&gt; = 3CLfa
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfaNegI - not case-marked or just head - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfaNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfaNegF - not case-marked or just head - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfaNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLfaNegBoth - not case-marked or just head - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLfaNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfb - not case-marked or just head - QP modifiers both sides, Classifier QP botj}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLibfb
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfbNegI - not case-marked or just head - QP modifiers both sides, Classifier QP botj}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfbNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfbNegF - not case-marked or just head - QP modifiers both sides, Classifier QP botj}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfbNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfbNegBoth - not case-marked or just head - QP modifiers both sides, Classifier QP botj}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfbNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafb - not case-marked or just head - QP modifiers both sides, Classifiers internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLiafb
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafbNegI - not case-marked or just head - QP modifiers both sides, Classifiers internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiafbNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfa - not case-marked or just head- QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLibfa
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfaNegI - not case-marked or just head- QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfaNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfaNegF - not case-marked or just head- QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfaNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLibfaNegBoth - not case-marked or just head- QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLibfaNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafa - not case-marked or just head - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP option&gt; = 3CLiafa
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafaNegI - not case-marked or just head - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiafaNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafaNegF - not case-marked or just head - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiafaNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3CLiafaNegBoth - not case-marked or just head - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head case&gt; = &lt;DP head case&gt;
          &lt;QP_2 head case&gt; = &lt;DP head case&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;DP head type case-marked&gt; = -  
          &lt;DP head type prefix case&gt; = none  
          &lt;DP head type suffix case&gt; = none  
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3CLiafaNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLibp - proclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibp
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibpNegI - proclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibpNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibpNegF - proclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibpNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibpNegBoth - proclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibpNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLibe - enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibeNegI - enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibeNegF - enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibeNegBoth - enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLibBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibBothNegI - pro and enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibBothNegF - pro and enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP initial}
DP = Class QP_1 D' QP_2 
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;Class head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLiap - proclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiap
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiapNegI - proclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiapNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiapNegF - proclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiapNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiapNegBoth - proclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiapNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLiae - enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiae
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaeNegI - enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaeNegF - enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaeNegBoth - enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLiaBoth - pro and enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiaBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaBothNegI - pro and enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaBothNegF - pro and enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiaBothNegBoth - enclitic case-marked - QP modifiers both sides, QP Classifier initial}
DP = QP_1 Class D' QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiaBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfbp - proclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfbp
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbpNegI - proclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbpNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbpNegF - proclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbpNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbpNegBoth - proclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbpNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfbe - enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfbe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbeNegI - enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbeNegF - enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbeNegBoth - enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfbBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfbBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbBothNegI - pro and enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbBothNegF - pro and enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfbBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP final}
DP = QP_1 D' Class QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfbBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfap - proclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfap
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfapNegI - proclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfapNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfapNegF - proclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfapNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfapNegBoth - proclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfapNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfae - enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfae
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaeNegI - enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaeNegF - enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaeNegBoth - enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DP option 3clCLfaBoth - pro and enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLfaBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaBothNegI - pro and enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaBothNegF - pro and enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLfaBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, QP Classifier final}
DP = QP_1 D' QP_2 Class
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLfaBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbp - proclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfbp
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbpNegI - proclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbpNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbpNegF - proclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbpNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbpNegBoth - proclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbpNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbe - enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfbe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbeNegI - enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbeNegF - enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbeNegBoth - enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfbBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbBothNegI - pro and enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbBothNegF - pro and enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfbBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier QP both}
DP = Class_1 QP_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfbBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbp - proclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafbp
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbpNegI - proclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbpNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbpNegF - proclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbpNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbpNegBoth - proclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbpNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbe - enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafbe
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbeNegI - enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbeNegF - enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbeNegBoth - enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafbBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbBothNegI - pro and enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbBothNegF - pro and enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafbBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier internal to QP both}
DP = QP_1 Class_1 D' Class_2 QP_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;QP_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;QP_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;QP_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;QP_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;QP_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;QP_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafbBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfap - proclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfap
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfapNegI - proclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfapNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfapNegF - proclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfapNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfapNegBoth - proclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfapNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfae - enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfae
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaeNegI - enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaeNegF - enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaeNegBoth - enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLibfaBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaBothNegI - pro and enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaBothNegF - pro and enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLibfaBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, Classifier external to QP both}
DP = Class_1 QP_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Class_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;Class_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;Class_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLibfaBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafap - proclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafap
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafapNegI - proclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafapNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafapNegF - proclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafapNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafapNegBoth - proclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafapNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafae - enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafae
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaeNegI - enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaeNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaeNegF - enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaeNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaeNegBoth - enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;DP head case&gt; &lt;= &lt;Class_2 head type suffix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaeNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaBoth - pro and enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP option&gt; = 3clCLiafaBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaBothNegI - pro and enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = -  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaBothNegI
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaBothNegF - pro and enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = -  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaBothNegF
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    

  <xsl:if test="normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//typology/@case)!='none' and normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
rule {DP option 3clCLiafaBothNegBoth - pro and enclitic case-marked - QP modifiers both sides, QP Classifier both}
DP = QP_1 Class_1 D' QP_2 Class_2
          &lt;DP head&gt; = &lt;D' head&gt;
          &lt;QP_1 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;QP_2 head agr&gt; = &lt;DP head agr&gt;
          &lt;QP_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;QP_1 head type prefix negative&gt; = +  
          &lt;Class_2 head type suffix negative&gt; = +  
          &lt;QP_1 head type modifies_NP&gt; = +
          &lt;QP_2 head type modifies_NP&gt; = +
          &lt;QP_1 head type DP-initial&gt;  = +
          &lt;QP_2 head type DP-final&gt;    = +
          &lt;Class_1 head type comma&gt; = -
          &lt;QP_1 head type comma&gt; = -
          &lt;QP_2 head type comma&gt; = -
          &lt;D' head type comma&gt; = -
          &lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;DP head type prefix&gt; &lt;= &lt;QP_1 head type prefix&gt;
          &lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;QP_1 head type prefix&gt; == ~[case:none]  
          &lt;Class_2 head type suffix&gt; == ~[case:none]  
          &lt;QP_1 head type prefix case&gt; = &lt;Class_2 head type suffix case&gt;  | case clitics unify
          &lt;DP head case&gt; &lt;= &lt;QP_1 head type prefix case&gt;    |promote clitic case to phrase
          &lt;DP head type case-marked&gt; &lt;= + 
          &lt;DP head infl polarity&gt; &lt;= negative
          &lt;DP option&gt; = 3clCLiafaBothNegBoth
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
      
      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


  
<xsl:if test="normalize-space(//pron/@pronMod)='rel' or normalize-space(//pron/@pronMod)='part' or normalize-space(//qp/@partitive)='yes' or normalize-space(//qp/@partitive)='no'">
<xsl:text>
rule {DBar option noNRel - pronoun,dem,quantifiers which can be modified by Rel Cl only (or partitive also with NP rules}
D' = {Pron / Dem / Q / Num / Deg}
          &lt;D' head&gt; = &lt;Pron head&gt;
          &lt;D' head type case-marked&gt; = -  
          &lt;D' head type noN&gt; = +  
          &lt;Pron head type possessive&gt; = -    | these use DP rule "Pron"
          &lt;Pron head type reflexive&gt; = -
          &lt;Pron head type reciprocal&gt; = - 
          &lt;D' head&gt; = &lt;Pron head&gt;
          &lt;D' head&gt; = &lt;Dem head&gt;
          &lt;D' head&gt; = &lt;Q head&gt;
          &lt;D' head&gt; = &lt;Num head&gt;
          &lt;D' head&gt; = &lt;Deg head&gt;
          &lt;Deg head type quantifier&gt; = +
          &lt;Dem head type wh &gt; = -             | so "which" not separate 
          &lt;D' head type prefix poss&gt; = -      | can't be possessors 
          &lt;D' head type suffix poss&gt; = -      | can't be possessors
          &lt;Pron head&gt; == ~[case:genitive]     | to stop split of possessor and N
          &lt;D' option&gt; = noNRel
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
   
  
  
<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosBefore/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosBefore/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetInitial  - quantifier determiners initial}
D' = Det N'
          &lt;D' head&gt; = &lt;N' head&gt;
          &lt;Det head type DP-initial&gt; = +
          &lt;Det head agr&gt; = &lt;N' head agr&gt;
          &lt;Det head type comma&gt; = -
          &lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Det head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Det head type prefix&gt;
          &lt;D' option&gt; = QuantDetInitial
</xsl:text>
</xsl:if>
  
    
     
     
    
    
    
     
     
     
     
     
  
<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosAfter/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosAfter/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetFinal  - quantifier determiners final}
D' = N' Det
          &lt;D' head&gt; = &lt;N' head&gt;
          &lt;Det head type DP-initial&gt; = +
          &lt;Det head agr&gt; = &lt;N' head agr&gt;
          &lt;N' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Det head type comma&gt;
          &lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Det head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Det head type suffix&gt;
          &lt;D' option&gt; = QuantDetFinal
</xsl:text>
</xsl:if>
  
     
     
     
     
     
     
     
     
     
     
     
  
<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosBoth/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosBoth/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetBoth - quantifier determiners both sides}
D' = Det N' Det_1
          &lt;D' head&gt; = &lt;N' head&gt;
          &lt;Det head type DP-initial&gt; = +
          &lt;Det_1 head type DP-final&gt; = +
          &lt;Det head agr&gt; = &lt;N' head agr&gt;
          &lt;Det_1 head agr&gt; = &lt;N' head agr&gt;
          &lt;Det head type comma&gt; = -
          &lt;N' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Det_1 head type comma&gt;
          &lt;Det head type negative-polarity&gt; = &lt;Det_1 head type negative-polarity&gt;
          &lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
          &lt;Det head type wh&gt; = &lt;Det_1 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Det head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Det head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Det_1 head type suffix&gt;
          &lt;D' option&gt; = QuantDetBoth
</xsl:text>
</xsl:if>
  
     
     
     
     
     
     
     
     
     
     
     
  
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 1frel - relative clause CP final}
D' = D'_1 CP
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;CP head type relative&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type verbheaded&gt; = +          | to restrict recursion
          &lt;CP head type question&gt; = -
          &lt;CP head fronted head type locative&gt; = -
          &lt;CP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;CP head agr animacy&gt;
          &lt;D'_1 head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;D' option&gt; = 1frel
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
     
    
     
     
     
     
     
     
     
     
     
     
     
     
  
     
     
     
     
     
     
     
     
     
     
     
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 1irel - relative clause CP initial}
D' = CP D'_1
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;CP head type relative&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type verbheaded&gt; = +          | to restrict recursion
          &lt;CP head type question&gt; = -
          &lt;CP head fronted head type locative&gt; = -
          &lt;CP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;CP head agr animacy&gt;
          &lt;CP head type comma&gt; = -
          &lt;D' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;D' option&gt; = 1irel
</xsl:text>
</xsl:if>
  
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 2frel - relative clause IP final}
D' = D'_1 IP
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;IP head type relative&gt; = +
          &lt;IP head type root&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head type question&gt; = -
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;IP head agr animacy&gt;
          &lt;D'_1 head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;IP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]    
          &lt;D' option&gt; = 2frel
</xsl:text>
</xsl:if>
  
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 2irel - relative clause IP initial}
D' = IP D'_1
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;IP head type relative&gt; = +
          &lt;IP head type root&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head type question&gt; = -
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;IP head agr animacy&gt;
          &lt;IP head type comma&gt; = -
          &lt;D' head type prefix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;IP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]    
          &lt;D' option&gt; = 2irel
</xsl:text>
</xsl:if>
  
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
  
  
<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='both'">
<xsl:text>
rule {DBar option 3relAffixesObj - relative clause IP final with affixes for object relative}
D' = D'_1 IP
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;IP head type suffix relative&gt; = +
          &lt;IP head type prefix relative&gt; = +
          &lt;IP head type root&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head type question&gt; = -
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;IP head object head agr animacy&gt;
          &lt;D'_1 head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;IP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]    
          &lt;D' option&gt; = 3relAffixesObj
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='before'">
<xsl:text>
rule {DBar option 3relPrefixObj - relative clause IP final with prefix for object relative}
D' = D'_1 IP
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;IP head type suffix relative&gt; = -
          &lt;IP head type prefix relative&gt; = +
          &lt;IP head type root&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head type question&gt; = -
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;IP head object head agr animacy&gt;
          &lt;D'_1 head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;IP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]    
          &lt;D' option&gt; = 3relPrefixObj
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  

<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@relWord)!='yes' and normalize-space(//relcl/@relCliticPos)='after'">
<xsl:text>
rule {DBar option 3relSuffixObj - relative clause IP final with suffix for object relative}
D' = D'_1 IP
          &lt;D' head&gt; = &lt;D'_1 head&gt;
          &lt;D'_1 head type proper&gt; = -  | not proper noun
          &lt;D'_1 head type pronoun&gt; = -  | not pronoun
          &lt;IP head type suffix relative&gt; = +
          &lt;IP head type prefix relative&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type verbheaded&gt; = +          | to restrict recursion
          &lt;IP head type question&gt; = -
          &lt;IP head fronted head type locative&gt; = -
          &lt;IP head embedded head fronted head type locative&gt; = -
          &lt;D' head agr animacy&gt; = &lt;IP head object head agr animacy&gt;
          &lt;D'_1 head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;D' head type relative&gt; &lt;= +  | restrict rel cl in subjects/copulars
          &lt;IP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]    
          &lt;D' option&gt; = 3relSuffixObj
</xsl:text>
</xsl:if>

  
  
  
  
  
  
  

  
  
<xsl:if test="normalize-space(//np/@artAndDem)='no'">
<xsl:text>
rule {DBar option 1 - no determiners}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 1
</xsl:text>
</xsl:if>
  
    
  
<xsl:if test="normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 1poss - no determiners with possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = +
          &lt;D' option&gt; = 1poss
</xsl:text>
</xsl:if>
  
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='yes'">
<xsl:text>
rule {DBar option 2a - only articles, optional}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 2a
</xsl:text>
</xsl:if>

  
  
  
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='yes'">
<xsl:text>
rule {DBar option 2apl - only articles, optional for plural}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;D' option&gt; = 2apl
</xsl:text>
</xsl:if>

  
  
  
  
  
  
      
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2aposs - only articles, optional, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 2aposs
</xsl:text>
</xsl:if>

  
  
  
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2aplposs - only articles, optional for plural, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 2aplposs
</xsl:text>
</xsl:if>

  
  
  
  
  
  
      
  
  


<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3a - only articles, initial, required}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3a
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3asg - only articles, initial, required for singular}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3asg
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3apl - only articles, initial, optional for plural}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3apl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3aposs - only articles, initial, required, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3aposs
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3asgposs - only articles, initial, required for singular, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3asgposs
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3aplposs - only articles, initial, optional for plural, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 3aplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3b - only articles, final, required}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3b
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3bsg - only articles, final, required for singular}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3bsg
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3bpl - only articles, final, optional for plural}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3bpl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3bposs - only articles, final, required, not possessed}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3bposs
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3bsgposs - only articles, final, required for singular, not possessed}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3bsgposs
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3bplposs - only articles, final, optional for plural, not possessed}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 3bplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cwhI - only articles, both sides, required, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cwhI
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cwhF - only articles, both sides, required, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cwhF
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cwhagr - only articles, both sides, required, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cwhagr
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3csgwhI - only articles, both sides, required for singular, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgwhI
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3csgwhF - only articles, both sides, required for singular, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgwhF
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3csgwhagr - only articles, both sides, required for singular, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgwhagr
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cplwhI - only articles, both sides, optional for plural, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cplwhF - only articles, both sides, optional for plural, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cplwhagr - only articles, both sides, optional for plural, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cposswhI - only articles, both sides, required, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cposswhI
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cposswhF - only articles, both sides, required, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cposswhF
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cposswhagr - only articles, both sides, required, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cposswhagr
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3csgposswhI - only articles, both sides, required for singular, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgposswhI
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3csgposswhF - only articles, both sides, required for singular, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgposswhF
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3csgposswhagr - only articles, both sides, required for singular, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3csgposswhagr
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cplposswhI - only articles, both sides, optional for plural, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cplposswhF - only articles, both sides, optional for plural, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cplposswhagr - only articles, both sides, optional for plural, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt; = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 3cplposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 4a - only demonstratives, optional}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 4a
</xsl:text>
</xsl:if>
  
    
    
    
    
    
     
     
        
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 4apl - only demonstratives, optional for plural}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;D' option&gt; = 4apl
</xsl:text>
</xsl:if>
  
    
     
    
    
    
    
        
    
    
     
     
     
     
     
     
    
    
    
      
    
     
     
     
     
     
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 4aposs - only demonstratives, optional, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 4aposs
</xsl:text>
</xsl:if>
  
    
     
    
    
    
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 4aplposs - only demonstratives, optional for plural, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 4aplposs
</xsl:text>
</xsl:if>
  
    
     
    
    
    
    
        
    
    
  
  
  
     
     
     
    
    
    
      
    
     
     
     
    
     
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no'">
<xsl:text>
rule {DBar option 4aCL - only demonstratives, Classifier with Dem, optional}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 4aCL
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no'">
<xsl:text>
rule {DBar option 4aplCL - only demonstratives, Classifier with Dem, optional for plural}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;D' option&gt; = 4aplCL
</xsl:text>
</xsl:if>
   
      
      
      
     
     
     
     
     
      
      
      
      
      
   
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no'">
<xsl:text>
rule {DBar option 4apossCL - only demonstratives, Classifier with Dem, optional, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 4apossCL
</xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no'">
<xsl:text>
rule {DBar option 4aplpossCL - only demonstratives, Classifier with Dem, optional for plural, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 4aplpossCL
</xsl:text>
</xsl:if>

      
      
      
     
     
     
     
     
      
      
      
      
      
      
  
   

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5a - only demonstratives, initial, required}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5a
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5asg - only demonstratives, initial, required for singular}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5asg
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
        
    
    
    
    
    
    
    
    
  
  
  
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5apl - only demonstratives, initial, optional for plural}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5apl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5aposs - only demonstratives, initial, required, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5aposs
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgposs - only demonstratives, initial, required for singular, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5asgposs
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplposs - only demonstratives, initial, optional for plural, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5aplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aCL - only demonstratives and Classifier, initial, required}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head infl polarity&gt; &lt;= &lt;Class head infl polarity&gt;
          &lt;D' option&gt; = 5aCL
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5aCLf - only demonstratives and Classifier, initial, required}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5aCLf
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aCLo - only demonstratives initial and Classifier final, required}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5aCLo
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgCL - only demonstratives and Classifier, initial, required for singular}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 5asgCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgCLf - only demonstratives and Classifier, initial, required for singular}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5asgCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgCLo - only demonstratives initial and Classifier final, required for singular}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5asgCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplCL - only demonstratives and Classifier, initial, optional for plural}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 5aplCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplCLf - only demonstratives and Classifier, initial, optional for plural}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5aplCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplCLo - only demonstratives initial and Classifier final, optional for plural}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5aplCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5apossCL - only demonstratives and Classifier, initial, required, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 5apossCL
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5apossCLf - only demonstratives and Classifier, initial, required, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5apossCLf
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5apossCLo - only demonstratives initial and Classifier final, required, not possessed}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5apossCLo
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    


<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgpossCL - only demonstratives and Classifier, initial, required for singular, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 5asgpossCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgpossCLf - only demonstratives and Classifier, initial, required for singular, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5asgpossCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5asgpossCLo - only demonstratives initial and Classifier final, required for singular, not possessed}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5asgpossCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    


<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplpossCL - only demonstratives and Classifier, initial, optional for plural, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 5aplpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplpossCLf - only demonstratives and Classifier, initial, optional for plural, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 5aplpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5aplpossCLo - only demonstratives initial and Classifier final, optional for plural, not possessed}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5aplpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5b - only demonstratives, final, required}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5b
</xsl:text>
</xsl:if>

       
    
    
  
  
  
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsg - only demonstratives, final, required for singular}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsg
</xsl:text>
</xsl:if>

    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bpl - only demonstratives, final, optional for plural}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bpl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bposs - only demonstratives, final, required, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bposs
</xsl:text>
</xsl:if>

    
    
     
  
  
  
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgposs - only demonstratives, final, required for singular, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsgposs
</xsl:text>
</xsl:if>

    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplposs - only demonstratives, final, optional for plural, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bCL - only demonstratives and Classifier, final, required}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bCL
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bCLf - only demonstratives and Classifier, final, required}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bCLf
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bCLo - only demonstratives final and Classifier initial, required}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bCLo
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgCL - only demonstratives and Classifier, final, required for singular}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsgCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgCLf - only demonstratives and Classifier, final, required for singular}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bsgCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgCLo - only demonstratives final and Classifier initial, required for singular}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsgCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplCL - only demonstratives and Classifier, final, optional for plural}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bplCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplCLf - only demonstratives and Classifier, final, optional for plural}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bplCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplCLo - only demonstratives final and Classifier initial, optional for plural}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bplCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bpossCL - only demonstratives and Classifier, final, required, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bpossCL
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bpossCLf - only demonstratives and Classifier, final, required, not possessed}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bpossCLf
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bpossCLo - only demonstratives final and Classifier initial, required, not possessed}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bpossCLo
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgpossCL - only demonstratives and Classifier, final, required for singular, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsgpossCL
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgpossCLf - only demonstratives and Classifier, final, required for singular, not possessed}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bsgpossCLf
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bsgpossCLo - only demonstratives final and Classifier initial, required for singular, not possessed}
  D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bsgpossCLo
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplpossCL - only demonstratives and Classifier, final, optional for plural, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bplpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplpossCLf - only demonstratives and Classifier, final, optional for plural, not possessed}
D' = NP Dem Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5bplpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5bplpossCLo - only demonstratives final and Classifier initial, optional for plural, not possessed}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 5bplpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhI - only demonstratives, both sides, required, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhI
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhF - only demonstratives, both sides, required, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhF
</xsl:text>
</xsl:if>

    
    
     
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhagr - only demonstratives, both sides, required, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagr
</xsl:text>
</xsl:if>

    
    
     
  
  
  
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhI - only demonstratives, both sides, required for singular, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhI
</xsl:text>
</xsl:if>

    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhF - only demonstratives, both sides, required for singular, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhF
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhagr - only demonstratives, both sides, required for singular, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagr
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhI - only demonstratives, both sides, optional for plural, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhF - only demonstratives, both sides, optional for plural, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhagr - only demonstratives, both sides, optional for plural, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhI - only demonstratives, both sides, required, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhI
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhF - only demonstratives, both sides, required, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhF
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhagr - only demonstratives, both sides, required, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagr
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhI - only demonstratives, both sides, required for singular, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhI
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhF - only demonstratives, both sides, required for singular, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhF
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhagr - only demonstratives, both sides, required for singular, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagr
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhI - only demonstratives, both sides, optional for plural, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhF - only demonstratives, both sides, optional for plural, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhagr - only demonstratives, both sides, optional for plural, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhICLib - only demonstratives, both sides, required, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhICLia - only demonstratives, both sides, required, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLia
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhICLfb - only demonstratives, both sides, required, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhICLfa - only demonstratives, both sides, required, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhICLibfb - only demonstratives, both sides, required, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLibfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhICLiafb - only demonstratives, both sides, required, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLiafb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhICLibfa - only demonstratives, both sides, required, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLibfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhICLiafa - only demonstratives, both sides, required, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhICLiafa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    


<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhFCLib - only demonstratives, both sides, required, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLib
</xsl:text>
</xsl:if>

    
    
     
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhFCLia - only demonstratives, both sides, required, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLia
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhFCLfb - only demonstratives, both sides, required, wh final, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhFCLfa - only demonstratives, both sides, required, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhFCLibfb - only demonstratives, both sides, required, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLibfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhFCLiafb - only demonstratives, both sides, required, wh final, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLiafb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhFCLibfa - only demonstratives, both sides, required, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLibfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhFCLiafa - only demonstratives, both sides, required, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhFCLiafa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagrCLib - only demonstratives, both sides, required, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLib
</xsl:text>
</xsl:if>

    
    
     
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagrCLia - only demonstratives, both sides, required, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLia
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagrCLfb - only demonstratives, both sides, required, wh agree, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagrCLfa - only demonstratives, both sides, required, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhagrCLibfb - only demonstratives, both sides, required, wh agree, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLibfb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhagrCLiafb - only demonstratives, both sides, required, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLiafb
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhagrCLibfa - only demonstratives, both sides, required, wh agree, CLass Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLibfa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cwhagrCLiafa - only demonstratives, both sides, required, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cwhagrCLiafa
</xsl:text>
</xsl:if>

    
    
    
  
  
  
    
    
    
    
    
    
    
    
    
    
    

  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhICLib - only demonstratives, both sides, required for singular, wh initial, CLassifierDem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhICLia - only demonstratives, both sides, required for singular, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhICLfb - only demonstratives, both sides, required for singular, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhICLfa - only demonstratives, both sides, required for singular, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhICLibfb - only demonstratives, both sides, required for singular, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhICLiafb - only demonstratives, both sides, required for singular, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhICLibfa - only demonstratives, both sides, required for singular, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhICLiafa - only demonstratives, both sides, required for singular, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhFCLib - only demonstratives, both sides, required for singular, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhFCLia - only demonstratives, both sides, required for singular, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhFCLfb - only demonstratives, both sides, required for singular, wh final, CLassifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhFCLfa - only demonstratives, both sides, required for singular, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhFCLibfb - only demonstratives, both sides, required for singular, wh final, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhFCLiafb - only demonstratives, both sides, required for singular, wh final, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhFCLibfa - only demonstratives, both sides, required for singular, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhFCLiafa - only demonstratives, both sides, required for singular, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagrCLib - only demonstratives, both sides, required for singular, wh agree, Classifier dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagrCLia - only demonstratives, both sides, required for singular, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagrCLfb - only demonstratives, both sides, required for singular, wh agree, Classifier dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagrCLfa - only demonstratives, both sides, required for singular, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhagrCLibfb - only demonstratives, both sides, required for singular, wh agree, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhagrCLiafb - only demonstratives, both sides, required for singular, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhagrCLibfa - only demonstratives, both sides, required for singular, wh agree, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgwhagrCLiafa - only demonstratives, both sides, required for singular, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhICLib - only demonstratives, both sides, optional for plural, wh initial, CLassifierDem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhICLia - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhICLfb - only demonstratives, both sides, optional for plural, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhICLfa - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhICLibfb - only demonstratives, both sides, optional for plural, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhICLiafb - only demonstratives, both sides, optional for plural, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhICLibfa - only demonstratives, both sides, optional for plural, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhICLiafa - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhFCLib - only demonstratives, both sides, optional for plural, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhFCLia - only demonstratives, both sides, optional for plural, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhFCLfb - only demonstratives, both sides, optional for plural, wh final, CLassifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhFCLfa - only demonstratives, both sides, optional for plural, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhFCLibfb - only demonstratives, both sides, optional for plural, wh final, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhFCLiafb - only demonstratives, both sides, optional for plural, wh final, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhFCLibfa - only demonstratives, both sides, optional for plural, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhFCLiafa - only demonstratives, both sides, optional for plural, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhagrCLib - only demonstratives, both sides, optional for plural, wh agree, Classifier dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhagrCLia - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhagrCLfb - only demonstratives, both sides, optional for plural, wh agree, Classifier dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplwhagrCLfa - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhagrCLibfb - only demonstratives, both sides, optional for plural, wh agree, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhagrCLiafb - only demonstratives, both sides, optional for plural, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhagrCLibfa - only demonstratives, both sides, optional for plural, wh agree, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplwhagrCLiafa - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhICLib - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLib
</xsl:text>
</xsl:if>
  
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhICLia - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhICLfb - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhICLfa - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhICLibfb - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhICLiafb - only demonstratives, both sides, required, not possessed, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhICLibfa - only demonstratives, both sides, required, not possessed, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhICLiafa - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhFCLib - only demonstratives, both sides, required, not possessed, wh final, CLassifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
       
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhFCLia - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhFCLfb - only demonstratives, both sides, required, not possessed, wh final, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhFCLfa - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhFCLibfb - only demonstratives, both sides, required, not possessed, wh final, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhFCLiafb - only demonstratives, both sides, required, not possessed, wh final, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhFCLibfa - only demonstratives, both sides, required, not possessed, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhFCLiafa - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagrCLib - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
       
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagrCLia - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagrCLfb - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagrCLfa - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhagrCLibfb - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem both}
  D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhagrCLiafb - only demonstratives, both sides, required, not possessed, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhagrCLibfa - only demonstratives, both sides, required, not possessed, wh agree, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cposswhagrCLiafa - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhICLib - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhICLia - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhICLfb - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhICLfa - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhICLibfb - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhICLiafb - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhICLibfa - only demonstratives, both sides, required for singular, not possessed, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhICLiafa - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhFCLib - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhFCLia - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhFCLfb - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhFCLfa - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhFCLibfb - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhFCLiafb - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier NP Classifier Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhFCLibfa - only demonstratives, both sides, required for singular, not possessed, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhFCLiafa - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagrCLib - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagrCLia - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagrCLfb - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagrCLfa - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhagrCLibfb - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhagrCLiafb - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhagrCLibfa - only demonstratives, both sides, required for singular, not possessed, wh agree, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5csgposswhagrCLiafa - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5csgposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhICLib - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhICLia - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhICLfb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhICLfa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhICLibfb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhICLiafb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhICLibfa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhICLiafa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhFCLib - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhFCLia - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhFCLfb - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhFCLfa - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhFCLibfb - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhFCLiafb - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier NP Classifier Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhFCLibfa - only demonstratives, both sides, optional for plural, not possessed, wh final, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhFCLiafa - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhagrCLib - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
     
     
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhagrCLia - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhagrCLfb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cplposswhagrCLfa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhagrCLibfb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhagrCLiafb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Class NP Class Dem}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhagrCLibfa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Class Dem NP Dem Class}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 5cplposswhagrCLiafa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt; = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Class_1 head type comma&gt; = -
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 5cplposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific'">
<xsl:text>
rule {DBar option 6a - article or demonstrative, optional}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 6a
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific'">
<xsl:text>
rule {DBar option 6apl - article or demonstrative, optional for plural}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper &gt; = +
         }
          &lt;D' option&gt; = 6apl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    

    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific'">
<xsl:text>
rule {DBar option 6aposs - article or demonstrative, optional, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 6aposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific'">
<xsl:text>
rule {DBar option 6aplposs - article or demonstrative, optional for plural, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper &gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 6aplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  
    
    
    
    
    
    
    
    
        
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 6aCL - article or demonstrative, Classifier with Dem, optional}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;D' option&gt; = 6aCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 6aplCL - article or demonstrative, Classifier with Dem, optional for plural}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper &gt; = +
         }
          &lt;D' option&gt; = 6aplCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 6apossCL - article or demonstrative, Classifier with Dem, optional, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 6apossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 6aplpossCL - article or demonstrative, Classifier with Dem, optional for plural, not possessed}
D' = NP
          &lt;D' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper &gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D' option&gt; = 6aplpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
  
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7a - article or demonstrative, Art initial, required}
D' = Art  NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;Art head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7a
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7asg - article or demonstrative, Art initial, required for singular}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7asg
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7apl - article or demonstrative, Art initial, optional for plural}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7apl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7aposs - article or demonstrative, Art initial, required, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7aposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7asgposs - article or demonstrative, Art initial, required for singular, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7asgposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7aplposs - article or demonstrative, Art initial, optional for plural, not possessed}
D' = Art NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D' option&gt; = 7aplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7aDem - article or demonstrative, Dem initial, required}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgDem - article or demonstrative, Dem initial, required for singular}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7asgDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplDem - article or demonstrative, Dem initial, optional for plural}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aplDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7apossDem - article or demonstrative, Dem initial, required, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7apossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgpossDem - article or demonstrative, Dem initial, required for singular, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7asgpossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplpossDem - article or demonstrative, Dem initial, optional for plural, not possessed}
D' = Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aplpossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aCL - article or demonstrative, Class Dem initial, required}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7aCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7aCLf - article or demonstrative, Dem Class initial, required}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aCLo - article or demonstrative, Dem initial, Class final, required}
D' = Dem NP Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7aCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgCL - article or demonstrative, Class Dem initial, required for singular}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7asgCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgCLf - article or demonstrative, Dem Class initial, required for singular}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7asgCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgCLo - article or demonstrative, Dem initial, Class final, required for singular}
D' = Dem NP Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7asgCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplCL - article or demonstrative, Class Dem initial, optional for plural}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7aplCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplCLf - article or demonstrative, Dem Class initial, optional for plural}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aplCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplCLo - article or demonstrative, Dem initial, Class final, optional for plural}
D' = Dem NP Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7aplCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7apossCL - article or demonstrative, Class Dem initial, required, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7apossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7apossCLf - article or demonstrative, Dem Class initial, required, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7apossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7apossCLo - article or demonstrative, Dem initial, Class final, required, not possessed}
D' = Dem NP Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7apossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgpossCL - article or demonstrative, Class Dem initial, required for singular, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7asgpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgpossCLf - article or demonstrative, Dem Class initial, required for singular, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7asgpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7asgpossCLo - article or demonstrative, Dem initial, Class final, required for singular, not possessed}
D' = Dem NP Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7asgpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplpossCL - article or demonstrative, Class Dem initial, optional for plural, not possessed}
D' = Class Dem NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 7aplpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplpossCLf - article or demonstrative, Dem Class initial, optional for plural, not possessed}
D' = Dem Class NP
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Class head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 7aplpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7aplpossCLo - article or demonstrative, Dem initial, Class final, optional for plural, not possessed}
  D' = Dem NP Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7aplpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7b - article or demonstrative, Art final, required}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7b
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7bsg - article or demonstrative, Art final, required for singular}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7bsg
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7bpl - article or demonstrative, Art final, optional for plural}
D' = NP Art
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7bpl
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7bposs - article or demonstrative, Art final, required, not possessed}
D' = NP Art 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7bposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7bsgposs - article or demonstrative, Art final, required for singular, not possessed}
D' = NP Art 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7bsgposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7bplposs - article or demonstrative, Art final, optional for plural, not possessed}
D' = NP Art 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;NP head agr&gt;
          &lt;Art head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D' head type definite&gt; &lt;= &lt;Art head type definite&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D' option&gt; = 7bplposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bDem - article or demonstrative, Dem final, required}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgDem - article or demonstrative, Dem final, required for singular}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplDem - article or demonstrative, Dem final, optional for plural}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bpossDem - article or demonstrative, Dem final, required, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bpossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgpossDem - article or demonstrative, Dem final, required for singular, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgpossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplpossDem - article or demonstrative, Dem final, optional for plural, not possessed}
D' = NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplpossDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bCL - article or demonstrative, Class Dem final, required}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bCLf - article or demonstrative, Dem Class final, required}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bCLo - article or demonstrative, Class initial, Dem final, required}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgCL - article or demonstrative, Class Dem final, required for singular}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgCLf - article or demonstrative, Dem Class final, required for singular}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bsgCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgCLo - article or demonstrative, Class initial, Dem final, required for singular}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplCL - article or demonstrative, Class Dem final, optional for plural}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplCLf - article or demonstrative, Dem Class final, optional for plural}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bplCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplCLo - article or demonstrative, Class initial, Dem final, optional for plural}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bpossCL - article or demonstrative, Class Dem final, required, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bpossCLf - article or demonstrative, Dem Class final, required, not possessed}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bpossCLo - article or demonstrative, Class initial, Dem final, required, not possessed}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgpossCL - article or demonstrative, Class Dem final, required for singular, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgpossCLf - article or demonstrative, Dem Class final, required for singular, not possessed}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bsgpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bsgpossCLo - article or demonstrative, Class intial, Dem final, required for singular, not possessed}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bsgpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplpossCL - article or demonstrative, Class Dem final, optional for plural, not possessed}
D' = NP Class Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplpossCLf - article or demonstrative, Dem Class final, optional for plural, not possessed}
D' = NP Dem Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7bplpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7bplpossCLo - article or demonstrative, Class intial, Dem final, optional for plural, not possessed}
D' = Class NP Dem
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 7bplpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cwhI - article or demonstrative, Art both sides, required, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cwhF - article or demonstrative, Art both sides, required, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cwhagr - article or demonstrative, Art both sides, required, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7csgwhI - article or demonstrative, Art both sides, required for singular, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7csgwhF - article or demonstrative, Art both sides, required for singular, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7csgwhagr - article or demonstrative, Art both sides, required for singular, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cplwhI - article or demonstrative, Art both sides, optional for plural, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cplwhF - article or demonstrative, Art both sides, optional for plural, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cplwhagr - article or demonstrative, Art both sides, optional for plural, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cposswhI - article or demonstrative, Art both sides, required, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cposswhF - article or demonstrative, Art both sides, required, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cposswhagr - article or demonstrative, Art both sides, required, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7csgposswhI - article or demonstrative, Art both sides, required for singular, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7csgposswhF - article or demonstrative, Art both sides, required for singular, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7csgposswhagr - article or demonstrative, Art both sides, required for singular, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cplposswhI - article or demonstrative, Art both sides, optional for plural, not possessed, wh initial}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cplposswhF - article or demonstrative, Art both sides, optional for plural, not possessed, wh final}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cplposswhagr - article or demonstrative, Art both sides, optional for plural, not possessed, wh agree}
D' = Art_1 NP Art_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_1 head case&gt; = &lt;NP head case&gt;
          &lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
          &lt;Art_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
  

  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhIDem - article or demonstrative, Dem both sides, required, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhFDem - article or demonstrative, Dem both sides, required, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhagrDem - article or demonstrative, Dem both sides, required, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhIDem - article or demonstrative, Dem both sides, required for singular, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhFDem - article or demonstrative, Dem both sides, required for singular, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhagrDem - article or demonstrative, Dem both sides, required for singular, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhIDem - article or demonstrative, Dem both sides, optional for plural, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhFDem - article or demonstrative, Dem both sides, optional for plural, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhagrDem - article or demonstrative, Dem both sides, optional for plural, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhIDem - article or demonstrative, Dem both sides, required, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhFDem - article or demonstrative, Dem both sides, required, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhagrDem - article or demonstrative, Dem both sides, required, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhIDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhFDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhagrDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhIDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhIDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhFDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhagrDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree}
D' = Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrDem
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhICLib - article or demonstrative, Dem both sides, required, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhICLia - article or demonstrative, Dem both sides, required, wh initial, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhICLfb - article or demonstrative, Dem both sides, required, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhICLfa - article or demonstrative, Dem both sides, required, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhICLibfb - article or demonstrative, Dem both sides, required, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhICLiafb - article or demonstrative, Dem both sides, required, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhICLibfa - article or demonstrative, Dem both sides, required, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhICLiafa - article or demonstrative, Dem both sides, required, wh initial, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFCLib - article or demonstrative, Dem both sides, required, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFCLia - article or demonstrative, Dem both sides, required, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFCLfb - article or demonstrative, Dem both sides, required, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFCLfa - article or demonstrative, Dem both sides, required, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhFCLibfb - article or demonstrative, Dem both sides, required, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhFCLiafb - article or demonstrative, Dem both sides, required, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhFCLibfa - article or demonstrative, Dem both sides, required, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhFCLiafa - article or demonstrative, Dem both sides, required, wh final, Dem Class Dboth}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrCLib - article or demonstrative, Dem both sides, required, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrCLia - article or demonstrative, Dem both sides, required, wh agree, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrCLfb - article or demonstrative, Dem both sides, required, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrCLfa - article or demonstrative, Dem both sides, required, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhagrCLibfb - article or demonstrative, Dem both sides, required, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhagrCLiafb - article or demonstrative, Dem both sides, required, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhagrCLibfa - article or demonstrative, Dem both sides, required, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cwhagrCLiafa - article or demonstrative, Dem both sides, required, wh agree, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhICLib - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhICLia - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhICLfb - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhICLfa - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhICLibfb - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhICLiafb - article or demonstrative, Dem both sides, required for singular, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhICLibfa - article or demonstrative, Dem both sides, required for singular, wh initial, Class external to Dem both}
  D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhICLiafa - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFCLib - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFCLia - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFCLfb - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFCLfa - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhFCLibfb - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhFCLiafb - article or demonstrative, Dem both sides, required for singular, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhFCLibfa - article or demonstrative, Dem both sides, required for singular, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhFCLiafa - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrCLib - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrCLia - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrCLfb - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrCLfa - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhagrCLibfb - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhagrCLiafb - article or demonstrative, Dem both sides, required for singular, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhagrCLibfa - article or demonstrative, Dem both sides, required for singular, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgwhagrCLiafa - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhICLib - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhICLia - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhICLfb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhICLfa - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhICLibfb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhICLiafb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhICLibfa - article or demonstrative, Dem both sides, optional for plural, wh initial, Class external to Dem both}
  D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhICLiafa - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhFCLib - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhFCLia - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhFCLfb - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhFCLfa - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhFCLibfb - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhFCLiafb - article or demonstrative, Dem both sides, optional for plural, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhFCLibfa - article or demonstrative, Dem both sides, optional for plural, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhFCLiafa - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhagrCLib - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhagrCLia - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhagrCLfb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplwhagrCLfa - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhagrCLibfb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhagrCLiafb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhagrCLibfa - article or demonstrative, Dem both sides, optional for plural, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplwhagrCLiafa - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhICLib - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhICLia - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhICLfb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhICLfa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhICLibfb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhICLiafb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class internal to Dem both}
  D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhICLibfa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhICLiafa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFCLib - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFCLia - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFCLfb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFCLfa - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhFCLibfb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhFCLiafb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhFCLibfa - article or demonstrative, Dem both sides, required, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhFCLiafa - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLib - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem Initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLia - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class Initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLfb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLfa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLibfb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLiafb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLibfa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cposswhagrCLiafa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class final}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhICLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhICLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhICLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhICLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class 
&lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhICLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhICLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhICLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhICLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFCLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFCLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_2 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFCLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFCLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhFCLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhFCLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhFCLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhFCLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrCLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrCLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrCLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrCLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhagrCLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhagrCLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhagrCLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7csgposswhagrCLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class final}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7csgposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhICLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhICLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class final}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhICLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhICLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class final}
D' = Dem_1 NP Dem_2 Class 
&lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhICLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhICLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhICLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhICLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class final}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhFCLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhFCLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_2 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhFCLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhFCLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class final}
D' = Dem_1 NP Dem_2 Class 
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhFCLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhFCLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhFCLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhFCLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhagrCLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhagrCLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class initial}
D' = Dem_1 Class NP Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhagrCLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem final}
D' = Dem_1 NP Class Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cplposswhagrCLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class final}
D' = Dem_1 NP Dem_2 Class
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhagrCLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhagrCLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 NP Class_2 Dem_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhagrCLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 7cplposswhagrCLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class final}
D' = Dem_1 Class_1 NP Dem_2 Class_2
          &lt;D' head&gt; = &lt;NP head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; = &lt;NP head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; = &lt;NP head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 7cplposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8aD - demonstratives, optional}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;D' option&gt; = 8aD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8aplD - demonstratives, optional for plural}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D' option&gt; = 8aplD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8aDposs - demonstratives, optional, not possessed}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D' option&gt; = 8aDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8aplDposs - demonstratives, optional for plural, not possessed}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D' option&gt; = 8aplDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 8aDCL - Class with demonstratives, optional}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;D' option&gt; = 8aDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 8aplDCL - Class with demonstratives, optional for plural}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D' option&gt; = 8aplDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 8aDpossCL - Class with demonstratives, optional, not possessed}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D' option&gt; = 8aDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no'">
<xsl:text>
rule {DBar option 8aplDpossCL - Class with demonstratives, optional for plural, not possessed}
D' = D''
          &lt;D' head&gt; = &lt;D'' head&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D' option&gt; = 8aplDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
  
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dD - demonstratives before, required}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgD - demonstratives before, required for singular}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dsgD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplD - demonstratives before, optional for plural}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dplD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDposs - demonstratives before, required, not possessed}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDposs - demonstratives before, required for singular, not possessed}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dsgDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDposs - demonstratives before, optional for plural, not possessed}
D' = Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dplDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDCL - Class demonstratives before, required}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDCLf - demonstratives Class before, required}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDCLo - demonstratives before, Class final, required}
D' = Dem D'' Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDCL - Class demonstratives before, required for singular}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dsgDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDCLf - demonstratives Class before, required for singular}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dsgDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDCLo - demonstratives before, Class final, required for singular}
D' = Dem D'' Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dsgDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDCL - Class demonstratives before, optional for plural}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dplDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDCLf - demonstratives Class before, optional for plural}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dplDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDCLo - demonstratives before, Class final, optional for plural}
D' = Dem D'' Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dplDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDpossCL - Class demonstratives before, required, not possessed}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDpossCLf - demonstratives Class before, required, not possessed}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dDpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dDpossCLo - demonstratives before, Class final, required, not possessed}
D' = Dem D'' Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dDpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDpossCL - Class demonstratives before, required for singular, not possessed}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dsgDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDpossCLf - demonstratives Class before, required for singular, not possessed}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dsgDpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dsgDpossCLo - demonstratives before, Class final, required for singular, not possessed}
D' = Dem D'' Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dsgDpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDpossCL - Class demonstratives before, optional for plural, not possessed}
D' = Class Dem D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' option&gt; = 8dplDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDpossCLf - demonstratives Class before, optional for plural, not possessed}
D' = Dem Class D''
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' option&gt; = 8dplDpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8dplDpossCLo - demonstratives before, Class final, optional for plural, not possessed}
D' = Dem D'' Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8dplDpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eD - demonstratives after, required}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgD - demonstratives after, required for singular}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplD - demonstratives after, optional for plural}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8epossD - demonstratives after, required, not possessed}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8epossD
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDposs - demonstratives after, required for singular, not possessed}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDposs - demonstratives after, optional for plural, not possessed}
D' = D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplDposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eDCL - Class demonstratives after, required}
D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eDCLf - demonstratives Class after, required}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8eDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eDCLo - Class before, demonstratives after, required}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDCL - Class demonstratives after, required for singular}
D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDCLf - demonstratives Class after, required for singular}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8esgDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDCLo - Class before, demonstratives after, required for singular}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDCL - Class demonstratives after, optional for plural}
  D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDCLf - demonstratives Class after, optional for plural}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8eplDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDCLo - Class before, demonstratives after, optional for plural}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8epossDCL - Class demonstratives after, required, not possessed}
D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8epossDCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8epossDCL - demonstratives Class after, required, not possessed}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8epossDCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8epossDCLo - Class before, demonstratives after, required, not possessed}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8epossDCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDpossCL - Class demonstratives after, required for singular, not possessed}
D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDpossCLf - demonstratives Class after, required for singular, not possessed}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8esgDpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8esgDpossCLo - Class before, demonstratives after, required for singular, not possessed}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8esgDpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDpossCL - Class demonstratives after, optional for plural, not possessed}
D' = D'' Class Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplDpossCL
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDpossCLf - demonstratives Class after, optional for plural, not possessed}
D' = D'' Dem Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Dem head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8eplDpossCLf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8eplDpossCLo - Class before, demonstratives after, optional for plural, not possessed}
D' = Class D'' Dem
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;D'' head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
          &lt;D' option&gt; = 8eplDpossCLo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
  
  
    
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhI - demonstratives both sides, both required, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhF - demonstratives both sides, both required, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhagr - demonstratives both sides, both required, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhI - demonstratives both sides, both required for singular, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhF - demonstratives both sides, both required for singular, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhagr - demonstratives both sides, both required for singular, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhI - demonstratives both sides, both optional for plural, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhF - demonstratives both sides, both optional for plural, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhagr - demonstratives both sides, both optional for plural, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhI - demonstratives both sides, both required, not possessed, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhF - demonstratives both sides, both required, not possessed, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhagr - demonstratives both sides, both required, not possessed, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhI - demonstratives both sides, both required for singular, not possessed, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhF - demonstratives both sides, both required for singular, not possessed, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhagr - demonstratives both sides, both required for singular, not possessed, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhI - demonstratives both sides, both optional for plural, not possessed, wh initial}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhI
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhF - demonstratives both sides, both optional for plural, not possessed, wh final}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhF
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosPrefixDem/@checked)='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosSuffixDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhagr - demonstratives both sides, both optional for plural, not possessed, wh agree}
D' = Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagr
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhICLib - demonstratives both sides, both required, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhICLia - demonstratives both sides, both required, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhICLfb - demonstratives both sides, both required, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhICLfa - demonstratives both sides, both required, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhICLibfb - demonstratives both sides, both required, wh initial, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhICLiafb - demonstratives both sides, both required, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhICLibfa - demonstratives both sides, both required, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhICLiafa - demonstratives both sides, both required, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhFCLib - demonstratives both sides, both required, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhFCLia - demonstratives both sides, both required, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhFCLfb - demonstratives both sides, both required, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhFCLfa - demonstratives both sides, both required, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhFCLibfb - demonstratives both sides, both required, wh final, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhFCLiafb - demonstratives both sides, both required, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhFCLibfa - demonstratives both sides, both required, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhFCLiafa - demonstratives both sides, both required, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagrCLib - demonstratives both sides, both required, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagrCLia - demonstratives both sides, both required, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagrCLfb - demonstratives both sides, both required, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagrCLfa - demonstratives both sides, both required, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhagrCLibfb - demonstratives both sides, both required, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhagrCLiafb - demonstratives both sides, both required, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhagrCLibfa - demonstratives both sides, both required, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDwhagrCLiafa - demonstratives both sides, both required, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhICLib - demonstratives both sides, both required for singular, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhICLia - demonstratives both sides, both required for singular, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhICLfb - demonstratives both sides, both required for singular, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhICLfa - demonstratives both sides, both required for singular, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhICLibfb - demonstratives both sides, both required for singular, wh initial, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhICLiafb - demonstratives both sides, both required for singular, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhICLibfa - demonstratives both sides, both required for singular, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhICLiafa - demonstratives both sides, both required for singular, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhFCLib - demonstratives both sides, both required for singular, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhFCLia - demonstratives both sides, both required for singular, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhFCLfb - demonstratives both sides, both required for singular, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhFCLfa - demonstratives both sides, both required for singular, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhFCLibfb - demonstratives both sides, both required for singular, wh final, Class Dem both}
  D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhFCLiafb - demonstratives both sides, both required for singular, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhFCLibfa - demonstratives both sides, both required for singular, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhFCLiafa - demonstratives both sides, both required for singular, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLib - demonstratives both sides, both required for singular, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLia - demonstratives both sides, both required for singular, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLfb - demonstratives both sides, both required for singular, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLfa - demonstratives both sides, both required for singular, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLibfb - demonstratives both sides, both required for singular, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLiafb - demonstratives both sides, both required for singular, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLibfa - demonstratives both sides, both required for singular, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLiafa - demonstratives both sides, both required for singular, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhICLib - demonstratives both sides, both optional for plural, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhICLia - demonstratives both sides, both optional for plural, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhICLfb - demonstratives both sides, both optional for plural, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhICLfa - demonstratives both sides, both optional for plural, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhICLibfb - demonstratives both sides, both optional for plural, wh initial, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhICLiafb - demonstratives both sides, both optional for plural, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhICLibfa - demonstratives both sides, both optional for plural, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhICLiafa - demonstratives both sides, both optional for plural, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhFCLib - demonstratives both sides, both optional for plural, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhFCLia - demonstratives both sides, both optional for plural, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhFCLfb - demonstratives both sides, both optional for plural, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhFCLfa - demonstratives both sides, both optional for plural, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhFCLibfb - demonstratives both sides, both optional for plural, wh final, Class Dem both}
  D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhFCLiafb - demonstratives both sides, both optional for plural, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhFCLibfa - demonstratives both sides, both optional for plural, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhFCLiafa - demonstratives both sides, both optional for plural, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhagrCLib - demonstratives both sides, both optional for optional, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhagrCLia - demonstratives both sides, both optional for plural, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhagrCLfb - demonstratives both sides, both optional for plural, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDwhagrCLfa - demonstratives both sides, both optional for plural, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhagrCLibfb - demonstratives both sides, both optional for plural, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhagrCLiafb - demonstratives both sides, both optional for plural, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhagrCLibfa - demonstratives both sides, both optional for plural, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDwhagrCLiafa - demonstratives both sides, both optional for plural, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDwhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhICLib - demonstratives both sides, both required, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhICLia - demonstratives both sides, both required, not possessed, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhICLfb - demonstratives both sides, both required, not possessed, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhICLfa - demonstratives both sides, both required, not possessed, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhICLibfb - demonstratives both sides, both required, not possessed, wh initial, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhICLiafb - demonstratives both sides, both required, not possessed, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhICLibfa - demonstratives both sides, both required, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhICLiafa - demonstratives both sides, both required, not possessed, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhFCLib - demonstratives both sides, both required, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhFCLia - demonstratives both sides, both required, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhFCLfb - demonstratives both sides, both required, not possessed, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhFCLfa - demonstratives both sides, both required, not possessed, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhFCLibfb - demonstratives both sides, both required, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhFCLiafb - demonstratives both sides, both required, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhFCLibfa - demonstratives both sides, both required, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhFCLiafa - demonstratives both sides, both required, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagrCLib - demonstratives both sides, both required, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagrCLia - demonstratives both sides, both required, not possessed, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagrCLfb - demonstratives both sides, both required, not possessed, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagrCLfa - demonstratives both sides, both required, not possessed, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhagrCLibfb - demonstratives both sides, both required, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhagrCLiafb - demonstratives both sides, both required, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhagrCLibfa - demonstratives both sides, both required, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)!='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fDposswhagrCLiafa - demonstratives both sides, both required, not possessed, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fDposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhICLib - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhICLia - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhICLfb - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhICLfa - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhICLibfb - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem initial both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhICLiafb - demonstratives both sides, both required for singular, not possessed, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhICLibfa - demonstratives both sides, both required for singular, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhICLiafa - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLib - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLia - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLfb - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLfa - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLibfb - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLiafb - demonstratives both sides, both required for singular, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLibfa - demonstratives both sides, both required for singular, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLiafa - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLib - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLia - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLfb - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLfa - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLibfb - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLiafb - demonstratives both sides, both required for singular, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLibfa - demonstratives both sides, both required for singular, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLiafa - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
          &lt;D'' head agr number&gt; = singular
          &lt;D'' head type mass&gt; = -
          &lt;D'' head type proper&gt; = -
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fsgDposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhICLib - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhICLia - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhICLfb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhICLfa - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class final}
D' = Dem_1 D'' Dem_2 Class
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhICLibfb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem initial both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhICLiafb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhICLibfa - demonstratives both sides, both optional for plural, not possessed, wh initial, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhICLiafa - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = + 
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhICLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhFCLib - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhFCLia - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhFCLfb - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhFCLfa - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhFCLibfb - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhFCLiafb - demonstratives both sides, both optional for plural, not possessed, wh final, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhFCLibfa - demonstratives both sides, both optional for plural, not possessed, wh final, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhFCLiafa - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhFCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLib - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLib
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLia - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class initial}
D' = Dem_1 Class D'' Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLia
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLfb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem final}
D' = Dem_1 D'' Class Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLfa - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class final}
D' = Dem_1 D'' Dem_2 Class 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLibfb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem both}
D' = Class_1 Dem_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLibfb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLiafb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class internal to Dem both}
D' = Dem_1 Class_1 D'' Class_2 Dem_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;Class_2 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLiafb
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLibfa - demonstratives both sides, both optional for plural, not possessed, wh agree, Class external to Dem both}
D' = Class_1 Dem_1 D'' Dem_2 Class_2
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLibfa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@demPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 8fplDposswhagrCLiafa - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class both}
D' = Dem_1 Class_1 D'' Dem_2 Class_2 
          &lt;D' head&gt; = &lt;D'' head&gt;
          &lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
          &lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
          &lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
          &lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
          &lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
         {&lt;D'' head agr number&gt; = plural
         /&lt;D'' head type mass&gt; = +
         /&lt;D'' head type proper&gt; = +
         }
          &lt;D'' head type possessed&gt; = -       
          &lt;Dem_1 head type DP-initial&gt; = +
          &lt;Dem_2 head type DP-final&gt;   = +
          &lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
          &lt;Dem_1 head type comma&gt; = -
          &lt;Dem_2 head type comma&gt; = -
          &lt;Class_1 head type comma&gt; = -
          &lt;D'' head type comma&gt; = -
          &lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
          &lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
          &lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
          &lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
          &lt;D' option&gt; = 8fplDposswhagrCLiafa
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
    
    
    
    
    
    
    
    
    
    
  


<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8aA - articles, optional}
D'' = NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;D'' option&gt; = 8aA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8aplA - articles, optional for plural}
D'' = NP
          &lt;D'' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;D'' option&gt; = 8aplA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8aAposs - articles, optional, not possessed}
D'' = NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;D'' option&gt; = 8aAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8apAposs - articles, optional for plural, not possessed}
D'' = NP
          &lt;D'' head&gt; = &lt;NP head&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;D'' option&gt; = 8apAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
        
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8dA - articles before, required}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8dsgA - articles before, required for singular}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dsgA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8dplA - articles before, optional for plural}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dplA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8dAposs - articles before, required, not possessed}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8dsgAposs - articles before, required for singular, not possessed}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dsgAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8dplAposs - articles before, optional for plural, not possessed}
D'' = Art NP
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art head type comma&gt; = -
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
          &lt;D'' option&gt; = 8dplAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8eA - articles after, required}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8eA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8esgA - articles after, required for singular}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8esgA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8eplA - articles after, optional for plural}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8eplA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8eAposs - articles after, required, not possessed}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8eAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8esgAposs - articles after, required for singular, not possessed}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8esgAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8eplAposs - articles after, optional for plural, not possessed}
D'' = NP Art
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
          &lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
          &lt;D'' option&gt; = 8eplAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  

<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8fA - articles both sides, both required}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8fsgA - articles both sides, both required for singular}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fsgA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8fplA - articles both sides, both optional for plural}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fplA
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)!='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8fAposs - articles both sides, both required, not possessed}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8fsgAposs - articles both sides, both required for singular, not possessed}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
          &lt;NP head agr number&gt; = singular
          &lt;NP head type mass&gt; = -
          &lt;NP head type proper&gt; = -
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fsgAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)!='no' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@artPl)='yes' and normalize-space(//np/@agreeNumber)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8fplAposs - articles both sides, both optional for plural, not possessed}
D'' = Art_1 NP Art_2
          &lt;D'' head&gt; = &lt;NP head&gt;
          &lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_1 head case&gt; = &lt;D'' head case&gt;
          &lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
          &lt;Art_2 head case&gt; = &lt;D'' head case&gt;
         {&lt;NP head agr number&gt; = plural
         /&lt;NP head type mass&gt; = +
         /&lt;NP head type proper&gt; = +
         }
          &lt;NP head type possessed&gt; = -       
          &lt;Art_1 head type DP-initial&gt; = +
          &lt;Art_2 head type DP-final&gt;   = +
          &lt;Art_1 head type comma&gt; = -
          &lt;NP head type comma&gt; = -
          &lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
          &lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
          &lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
          &lt;D'' option&gt; = 8fplAposs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
        
    
    
  
  
</xsl:template>
</xsl:stylesheet>

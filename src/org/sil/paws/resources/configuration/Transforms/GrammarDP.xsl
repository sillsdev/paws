<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="/" mode="dp">
   <xsl:if test="normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordBefore/@checked)='yes'">
<xsl:text>
      rule {DP option CaseI - initial Case marker on DP, remaining DP instead of PP}
      DP = Case DP_1
      &lt;DP head&gt; = &lt;DP_1 head&gt;
      &lt;Case head type comma&gt; = -
      &lt;Case head type DP-initial&gt; = +
      &lt;DP_1 head type pronoun&gt; = -  
      &lt;DP_1 head type case-marked&gt; = -  
      &lt;DP head case&gt; &lt;= &lt;Case head case&gt;  
      &lt;DP head type relative&gt; &lt;=  -  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = CaseI
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      <xsl:if test="normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordAfter/@checked)='yes'">
<xsl:text>
      rule {DP option CaseF - final Case marker on DP, remaining DP instead of PP}
      DP = DP_1 Case
      &lt;DP head&gt; = &lt;DP_1 head&gt;
      &lt;Case head type DP-final&gt; = +
      &lt;DP_1 head type comma&gt; = -
      &lt;DP_1 head type pronoun&gt; = -  
      &lt;DP_1 head type case-marked&gt; = -  
      &lt;DP head type comma&gt; &lt;= &lt;Case head type comma&gt;  
      &lt;DP head case&gt; &lt;= &lt;Case head case&gt;  
      &lt;DP head type relative&gt; &lt;= -  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = CaseF
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      <xsl:if test="normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='no' and normalize-space(//np/caseWordBoth/@checked)='yes'">
<xsl:text>
         rule {DP option CaseBoth - initial and final Case markers on DP, remaining DP instead of PP}
         DP = Case_1 DP_1 Case_2
         &lt;DP head&gt; = &lt;DP_1 head&gt;
         &lt;Case_1 head type DP-initial&gt; = +
         &lt;Case_2 head type DP-final&gt; = +
         &lt;Case_1 head type comma&gt; = -
         &lt;DP_1 head type comma&gt; = -
         &lt;DP_1 head type pronoun&gt; = -  
         &lt;DP_1 head type case-marked&gt; = -  
         &lt;DP head type comma&gt; &lt;= &lt;Case_2 head type comma&gt;  
         &lt;DP head case&gt; &lt;= &lt;Case_1 head case&gt;  
         &lt;Case_2 head case&gt; &lt;= &lt;Case_1 head case&gt;  
         &lt;DP head type relative&gt; &lt;= -  
         &lt;DP head type case-marked&gt; &lt;= +  
         &lt;DP option&gt; = CaseBoth
      </xsl:text>
</xsl:if>
      
         
         
         
         
         
      
   
   <xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordBefore/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordBefore/@checked)='yes'">
<xsl:text>
      rule {DP option NegI}
      DP = Neg DP_1
      &lt;DP head&gt; = &lt;DP_1 head&gt;
      &lt;DP head modifier&gt; = &lt;Neg&gt;
      &lt;Neg head type DP-initial&gt; = +
      &lt;Neg head type comma&gt; = -
      &lt;DP head infl polarity&gt; &lt;= negative
      &lt;DP head type prefix&gt; &lt;= &lt;Neg head type prefix&gt;
      &lt;DP option&gt; = NegI
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordAfter/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordAfter/@checked)='yes'">
<xsl:text>
      rule {DP option NegF}
      DP =  DP_1 Neg
      &lt;DP head&gt; = &lt;DP_1 head&gt;
      &lt;DP head modifier&gt; = &lt;Neg&gt;
      &lt;Neg head type DP-final&gt; = +
      &lt;DP_1 head type comma&gt; = -
      &lt;DP head infl polarity&gt; &lt;= negative
      &lt;DP head type suffix&gt; &lt;= &lt;Neg head type suffix&gt;
      &lt;DP head type comma&gt; &lt;= &lt;Neg head type comma&gt;
      &lt;DP option&gt; = NegF
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//neg/@npDegreeNeg)='yes' and normalize-space(//neg/npDegreeNegWordBoth/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegWordBoth/@checked)='yes'">
<xsl:text>
      rule {DP option NegBoth}
      DP = Neg_1 DP_1 Neg_2
      &lt;DP head&gt; = &lt;DP_1 head&gt;
      &lt;DP head modifier&gt; = &lt;Neg_1&gt;
      &lt;Neg_1 head type DP-initial&gt; = +
      &lt;Neg_2 head type DP-final&gt; = +
      &lt;Neg_1 head type comma&gt; = -
      &lt;DP_1 head type comma&gt; = -
      &lt;DP head infl polarity&gt; &lt;= negative
      &lt;DP head type prefix&gt; &lt;= &lt;Neg_1 head type prefix&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Neg_2 head type suffix&gt;
      &lt;DP head type comma&gt; &lt;= &lt;Neg_2 head type comma&gt;
      &lt;DP option&gt; = NegBoth
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegProclitic/@checked)='yes'">
<xsl:text>
		rule {DP option NegProclitic}
		DP =  DP_1
		&lt;DP head&gt; = &lt;DP_1 head&gt;
		&lt;DP head infl polarity&gt; &lt;= negative
		&lt;DP_1 head type prefix negative&gt; &lt;= +
		&lt;DP option&gt; = NegProclitic
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//neg/@npDegreeNeg)='no' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes' or normalize-space(//neg/@npDegreeNeg)='some' and normalize-space(//neg/npDegreeNegEnclitic/@checked)='yes'">
<xsl:text>
		rule {DP option NegEnclitic}
		DP =  DP_1
		&lt;DP head&gt; = &lt;DP_1 head&gt;
		&lt;DP head infl polarity&gt; &lt;= negative
		&lt;DP_1 head type suffix negative&gt; &lt;= +
		&lt;DP option&gt; = NegEnclitic
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//neg/@npDegree)='no' and normalize-space(//neg/npDegreeTypeProclitic/@checked)='yes' or normalize-space(//neg/@npDegree)='some' and normalize-space(//neg/npDegreeTypeProclitic/@checked)='yes'">
<xsl:text>
		rule {DP option QProclitic}
		DP =  DP_1
		&lt;DP head&gt; = &lt;DP_1 head&gt;
		&lt;DP_1 head type prefix quantifier&gt; &lt;= +
		&lt;DP option&gt; = QProclitic
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//neg/@npDegree)='no' and normalize-space(//neg/npDegreeTypeEnclitic/@checked)='yes' or normalize-space(//neg/@npDegree)='some' and normalize-space(//neg/npDegreeTypeEnclitic/@checked)='yes'">
<xsl:text>
		rule {DP option QEnclitic}
		DP =  DP_1
		&lt;DP head&gt; = &lt;DP_1 head&gt;
		&lt;DP_1 head type suffix quantifier&gt; &lt;= +
		&lt;DP option&gt; = QEnclitic
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	
      <xsl:if test="normalize-space(//coord/@conjWord)!='no'">
<xsl:text>
rule {DP option conj - conjoined DPs}
DP = (InitConj) DP_1 Conj DP_2
	&lt;DP head&gt; = &lt;DP_2 head&gt;
	&lt;DP conjoined&gt; = +
	&lt;DP_1 conjoined&gt; = -	|limit recursion
	&lt;DP_2 head type relative&gt; = -  
	&lt;DP head infl polarity&gt; &lt;= &lt;Conj head infl polarity&gt;  
	&lt;DP head agr number&gt; &lt;= &lt;Conj head agr number&gt;  
	&lt;DP option&gt; = conj
</xsl:text>
</xsl:if>
   
      
   
   <xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/proclitic/@checked)='yes'">
<xsl:text>
      rule {DP option conjPrefix - conjoined DPs}
      DP = DP_1  DP_2
      &lt;DP head&gt; = &lt;DP_2 head&gt;
      &lt;DP conjoined&gt; = +
      &lt;DP_1 conjoined&gt; = -	|limit recursion
      &lt;DP_2 head type prefix conj&gt; = +
      &lt;DP_2 head type relative&gt; = -  
      &lt;DP head infl polarity&gt; &lt;= &lt;DP_2 head conj head infl polarity&gt;  
      &lt;DP head agr number&gt; &lt;= &lt;DP_2 head conj head agr number&gt;  
      &lt;DP option&gt; = conjPrefix
   </xsl:text>
</xsl:if>
   
      
      
      
      
   <xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/enclitic/@checked)='yes'">
<xsl:text>
      rule {DP option conjSuffix - conjoined DPs}
      DP = DP_1  DP_2
      &lt;DP head&gt; = &lt;DP_2 head&gt;
      &lt;DP conjoined&gt; = +
      &lt;DP_1 conjoined&gt; = -	|limit recursion
      &lt;DP_1 head type suffix conj&gt; = +
      &lt;DP_2 head type relative&gt; = -  
      &lt;DP head infl polarity&gt; &lt;= &lt;DP_1 head conj head infl polarity&gt;  
      &lt;DP head agr number&gt; &lt;= &lt;DP_1 head conj head agr number&gt;  
      &lt;DP option&gt; = conjSuffix
   </xsl:text>
</xsl:if>
   
      
      
      
      
   <xsl:if test="normalize-space(//coord/@conjWord)!='yes' and normalize-space(//coord/attachesOther/@checked)='yes' or normalize-space(//coord/@noConj)='yes'">
<xsl:text>
      rule {DP option conjNone - conjoined DPs}
      DP = DP_1  DP_2
      &lt;DP head&gt; = &lt;DP_2 head&gt;
      &lt;DP conjoined&gt; = +
      &lt;DP_1 conjoined&gt; = -	|limit recursion
      &lt;DP_2 head type prefix conj&gt; = -
      &lt;DP_1 head type suffix conj&gt; = -
      &lt;DP_1 head type comma&gt; = -
      &lt;DP_2 head type relative&gt; = -  
      &lt;DP option&gt; = conjNone
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   
   <xsl:text>
      rule {DP option conjListAppos - conjoined DPs, lists and appositives}
      DP = DP_1  DP_2
      &lt;DP head&gt; = &lt;DP_2 head&gt;
      &lt;DP conjoined&gt; = +
      &lt;DP_1 conjoined&gt; = -	|limit recursion
      &lt;DP_2 head type prefix conj&gt; = -
      &lt;DP_1 head type suffix conj&gt; = -
|      &lt;DP_1 head type comma&gt; = +         | activate this constraint if/when you make comma a word-formation character
                                                                               | until then you will get ambiguity if you also have DP option conjNone, so deactivate one rule
      &lt;DP_2 head type relative&gt; = -  
     &lt;DP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
      &lt;DP option&gt; = conjListAppos
   </xsl:text>
   <xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes'">
<xsl:text>
rule {DP option RelCP - headless relative CP}
DP = CP
	&lt;DP head&gt; = &lt;CP head&gt;
	&lt;DP head type case-marked&gt; = -  
	&lt;CP head type relative&gt; = +
	&lt;CP head type verbheaded&gt; = +          | to restrict recursion
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP option&gt; = RelCP
</xsl:text>
</xsl:if>
	
		
	   
	   
	   
		
	   
	   
	   
	   
	   
	   
	
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/@headless)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes'">
<xsl:text>
rule {DP option RelIP - headless relative IP}
DP = IP
	&lt;DP head&gt; = &lt;IP head&gt;
	&lt;DP head type case-marked&gt; = -  
	&lt;IP head type relative&gt; = +
	&lt;IP head type verbheaded&gt; = +          | to restrict recursion
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP option&gt; = RelIP
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	

	<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBefore/@checked)='yes'">
<xsl:text>
		rule {DP option IndefPronI - interrogative indef phrase, initial}
		DP = Pron Indef
		&lt;DP head&gt; = &lt;Indef head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;Pron head type wh&gt; = +
		&lt;Pron head type DP-initial&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;Pron head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;Indef head type suffix&gt; 
		&lt;DP option&gt; = IndefPronI
	</xsl:text>
</xsl:if>
	
		
		
		
	
	<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntAfter/@checked)='yes'">
<xsl:text>
		rule {DP option IndefPronF - interrogative indef phrase, final}
		DP = Indef Pron
		&lt;DP head&gt; = &lt;Indef head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;Pron head type wh&gt; = +
		&lt;Pron head type DP-final&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;Indef head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;Pron head type suffix&gt; 
		&lt;DP option&gt; = IndefPronF
	</xsl:text>
</xsl:if>
	
		
		
		
	
	<xsl:if test="normalize-space(//pron/indefIntPhrase/@checked)='yes' and normalize-space(//pron/indefTypeIntBoth/@checked)='yes'">
<xsl:text>
		rule {DP option IndefPronBoth - interrogative indef phrase, both}
		DP = Pron_1 Indef Pron_2
		&lt;DP head&gt; = &lt;Indef head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;Pron_1 head type wh&gt; = +
		&lt;Pron_2 head type wh&gt; = +
		&lt;Pron_1 head type DP-initial&gt; = +
		&lt;Pron_2 head type DP-final&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;Pron_1 head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;Pron_2 head type suffix&gt; 
		&lt;DP option&gt; = IndefPronBoth
	</xsl:text>
</xsl:if>
	
		
		
		
		
	<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBefore/@checked)='yes'">
<xsl:text>
		rule {DP option QPronI - quantifier indef phrase, initial}
		DP = Q N
		&lt;DP head&gt; = &lt;N head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;N head type generic&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;N head type suffix&gt; 
		&lt;DP option&gt; = QPronI
	</xsl:text>
</xsl:if>
	
		
		
		
	
	<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQAfter/@checked)='yes'">
<xsl:text>
		rule {DP option QPronF - quantifier indef phrase, final}
		DP = N Q
		&lt;DP head&gt; = &lt;N head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;N head type generic&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;N head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt; 
		&lt;DP option&gt; = QPronF
	</xsl:text>
</xsl:if>
	
		
		
		
	
	<xsl:if test="normalize-space(//pron/indefQPhrase/@checked)='yes' and normalize-space(//pron/indefTypeQPQBoth/@checked)='yes'">
<xsl:text>
		rule {DP option QPronBoth - quantifier indef phrase, both sides}
		DP = Q_1 N Q_2
		&lt;DP head&gt; = &lt;N head&gt;
		&lt;DP head type case-marked&gt; = -  
		&lt;N head type generic&gt; = +
		&lt;Q_1 head type DP-initial&gt; = +
		&lt;Q_2 head type DP-final&gt; = +
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt; 
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt; 
		&lt;DP option&gt; = QPronBoth
	</xsl:text>
</xsl:if>
	
		
		
		
	
	
	
	<xsl:if test="normalize-space(//pron/@poss)='yes' or normalize-space(//pron/@refl)='yes' or normalize-space(//pron/@recip)='yes'">
<xsl:text>
rule {DP option Pron - possessives, reflexives and reciprocals}
DP = Pron
	&lt;DP head&gt; = &lt;Pron head&gt;
	&lt;DP head type case-marked&gt; = -  
	{&lt;Pron head type possessive&gt; = +
        	/&lt;Pron head type reflexive&gt; = +
        	/&lt;Pron head type reciprocal&gt; = +
        	}
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP option&gt; = Pron
</xsl:text>
</xsl:if>
	
		
		
		
		
		
	
	<xsl:if test="normalize-space(//pron/@pronMod)='no'">
<xsl:text>
rule {DP option noMod - pronoun,dem,quantifiers}
DP = {Pron / Dem / Q / Num / Deg}
            &lt;DP head&gt; = &lt;Pron head&gt;
            &lt;DP head type case-marked&gt; = -  
            &lt;Pron head type possessive&gt; = -  
	&lt;Pron head type reflexive&gt; = -
	&lt;Pron head type reciprocal&gt; = - 
	&lt;DP head&gt; = &lt;Dem head&gt;
	&lt;DP head&gt; = &lt;Q head&gt;
	&lt;DP head&gt; = &lt;Num head&gt;
	&lt;DP head&gt; = &lt;Deg head&gt;
	&lt;Deg head type quantifier&gt; = +
	&lt;Dem head type wh &gt; = -		
	&lt;DP head type prefix poss&gt; = -  
	&lt;DP head type suffix poss&gt; = -  
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP option&gt; = noMod
</xsl:text>
</xsl:if>
	
		
	
   
	<xsl:text>
rule {DP option 0 - no Deg modifiers, not case-marked}
DP = {D' / D''}
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none  
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 0
</xsl:text>
   <xsl:if test="normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' or normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes'">
<xsl:text>
      rule {DP option 0head - no Deg modifiers, head case-marked}
      DP = {D' / D''}
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;DP head type case-marked&gt; = -  
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= +
      &lt;DP option&gt; = 0head
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' or normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
      rule {DP option 0cl - no Deg modifiers, clitic case-marked}
      DP = {D' / D''}
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;DP head type case-marked&gt; = -  
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt; &lt;=  &lt;DP head type case&gt;  |promote clitic case to phrase 
      &lt;DP head type case-marked&gt; &lt;= +
      &lt;DP option&gt; = 0cl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
   

	
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes'">
<xsl:text>
rule {DP option 1 - degree modifier initial, not case-marked}
DP = Deg {D' / D''}
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;Deg head type modifies_NP&gt; = +
	&lt;Deg head type DP-initial&gt; = +
	&lt;Deg head agr&gt; = &lt;DP head agr&gt;
	&lt;Deg head case&gt; = &lt;DP head case&gt;
	&lt;Deg head type comma&gt; = -
	&lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none 
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 1
</xsl:text>
</xsl:if>
	
		
		
		
	
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes'">
<xsl:text>
      rule {DP option 1head - degree modifier initial, head case-marked}
      DP = Deg {D' / D''}
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Deg head type modifies_NP&gt; = +
      &lt;Deg head type DP-initial&gt; = +
      &lt;Deg head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg head case&gt; = &lt;DP head case&gt;
      &lt;Deg head type comma&gt; = -
      &lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= + 
      &lt;DP option&gt; = 1head
   </xsl:text>
</xsl:if>
   
      
      
      

      
      
      
      
      
   	
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
		rule {DP option 1cl - degree modifier initial, clitic case-marked}
		DP = Deg {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Deg head type modifies_NP&gt; = +
		&lt;Deg head type DP-initial&gt; = +
		&lt;Deg head agr&gt; = &lt;DP head agr&gt;
		&lt;Deg head case&gt; = &lt;DP head case&gt;
		&lt;Deg head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Deg head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt;  &lt;= &lt;DP head case&gt;  |promote clitic case to phrase  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 1cl
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
		rule {DP option 1q - Q modifier initial, not case-marked}
		DP = Q {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none 
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 1q
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
		rule {DP option 1qhead - Q modifier initial, head case-marked}
		DP = Q {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 1qhead
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
      rule {DP option 1qcl - Q modifier initial, clitic case-marked}
      DP = Q {D' / D''}
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Q head type modifies_NP&gt; = +
      &lt;Q head type DP-initial&gt; = +
      &lt;Q head agr&gt; = &lt;DP head agr&gt;
      &lt;Q head case&gt; = &lt;DP head case&gt;
      &lt;Q head type comma&gt; = -
      &lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt;  &lt;= &lt;DP head case&gt;  |promote clitic case to phrase  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 1qcl
   </xsl:text>
</xsl:if>
   
      
      
      

      
      
      
      
      
   	
   	
   	
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   

	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
 rule {DP option 1qCL - Classifier Q initial, not case-marked}
 DP = Class Q {D' / D''}
 &lt;DP head&gt; = &lt;D' head&gt;
 &lt;DP head&gt; = &lt;D'' head&gt;
 &lt;Q head type modifies_NP&gt; = +
 &lt;Q head type DP-initial&gt; = +
 &lt;Q head agr&gt; = &lt;DP head agr&gt;
 &lt;Q head agr class&gt; = &lt;Class head agr class&gt;
 &lt;Q head case&gt; = &lt;DP head case&gt;
 &lt;Q head type comma&gt; = -
 &lt;Class head type comma&gt; = -
 &lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
 &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
 &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
 &lt;DP head type case&gt; = none  
 &lt;DP head case&gt; = none 
 &lt;DP head type case-marked&gt; = -  
 &lt;DP option&gt; = 1qCL
 </xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes'">
<xsl:text>
		rule {DP option 1qCLf - Q Classifier initial, not case-marked}
		DP = Q Class {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none 
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 1qCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 1qCLo - Q initial, Classifier final, not case-marked}
		DP = Q {D' / D''} Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none 
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 1qCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 1qheadCL - Classifier Q initial, head case-marked}
		DP = Class Q {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 1qheadCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes'">
<xsl:text>
		rule {DP option 1qheadCLf - Q Classifier initial, head case-marked}
		DP = Q Class {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 1qheadCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 1qheadCLo - Q initial, Classifier final, head case-marked}
		DP = Q {D' / D''} Class 
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 1qheadCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 1qclCL - Classifier Q initial, clitic case-marked}
		DP = Class Q {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt;  &lt;= &lt;DP head case&gt;  |promote clitic case to phrase  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 1qclCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes'">
<xsl:text>
		rule {DP option 1qclCLf - Q Classifier initial, clitic case-marked}
		DP = Q Class {D' / D''}
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt;  &lt;= &lt;DP head case&gt;  |promote clitic case to phrase  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 1qclCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBefore/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 1qclCLo - Q initial, Classifier final, clitic case-marked}
		DP = Q {D' / D''} Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-initial&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase 
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt;  &lt;= &lt;DP head case&gt;  |promote clitic case to phrase  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 1qclCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes'">
<xsl:text>
rule {DP option 2 - not case-marked - degree modifier final}
DP = {D' / D''} Deg
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;Deg head type modifies_NP&gt; = +
	&lt;Deg head type DP-final&gt; = +
	&lt;Deg head agr&gt; = &lt;DP head agr&gt;
	&lt;Deg head case&gt; = &lt;DP head case&gt;
	&lt;D' head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
	&lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none  
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 2
</xsl:text>
</xsl:if>

   
   
   
	 
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes'">
<xsl:text>
      rule {DP option 2head - head case-marked - degree modifier final}
      DP = {D' / D''} Deg
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Deg head type modifies_NP&gt; = +
      &lt;Deg head type DP-final&gt; = +
      &lt;Deg head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg head case&gt; = &lt;DP head case&gt;
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 2head
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
      rule {DP option 2cl - clitic case-marked - degree modifier final}
      DP = {D' / D''} Deg
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Deg head type modifies_NP&gt; = +
      &lt;Deg head type DP-final&gt; = +
      &lt;Deg head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg head case&gt; = &lt;DP head case&gt;
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Deg head type comma&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Deg head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt; &lt;= &lt;DP head type case&gt;  |promote clitic case to phrase
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 2cl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
      
      
      
      
      
      
      
      
      
   
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
rule {DP option 2q - not case-marked - Q modifier final}
DP = {D' / D''} Q
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;Q head type modifies_NP&gt; = +
	&lt;Q head type DP-final&gt; = +
	&lt;Q head agr&gt; = &lt;DP head agr&gt;
	&lt;Q head case&gt; = &lt;DP head case&gt;
	&lt;D' head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
	&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none  
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 2q
</xsl:text>
</xsl:if>

   
   
   
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
 
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
      rule {DP option 2qhead - head case-marked - Q modifier final}
      DP = {D' / D''} Q
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Q head type modifies_NP&gt; = +
      &lt;Q head type DP-final&gt; = +
      &lt;Q head agr&gt; = &lt;DP head agr&gt;
      &lt;Q head case&gt; = &lt;DP head case&gt;
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 2qhead
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
      rule {DP option 2qcl - clitic case-marked - Q modifier final}
      DP = {D' / D''} Q
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Q head type modifies_NP&gt; = +
      &lt;Q head type DP-final&gt; = +
      &lt;Q head agr&gt; = &lt;DP head agr&gt;
      &lt;Q head case&gt; = &lt;DP head case&gt;
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt; &lt;= &lt;DP head type case&gt;  |promote clitic case to phrase
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 2qcl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
 
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 2qCL - not case-marked - Classifier Q final}
		DP = {D' / D''} Class Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 2qCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	 
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qCLf - not case-marked - Q Classifier final}
		DP = {D' / D''} Q Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 2qCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	 
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qCLo - not case-marked - Q final, Classifier initial}
		DP = Class {D' / D''} Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 2qCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	 
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 2qheadCL - head case-marked - Classifier Q final}
		DP = {D' / D''} Class Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qheadCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qheadCLf - head case-marked - Q Classifier final}
		DP = {D' / D''} Q Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qheadCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qheadCLo - head case-marked - Q final, Classifier initial}
		DP = Class {D' / D''} Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qheadCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 2qclCL - clitic case-marked - Classifier Q final}
		DP = {D' / D''} Class Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;  |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qclCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qclCLf - clitic case-marked - Q Classifier final}
		DP = {D' / D''} Q Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Q head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;  |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qclCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosAfter/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 2qclCLo - clitic case-marked - Q final, Classifier initial}
		DP = Class {D' / D''} Q
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q head type modifies_NP&gt; = +
		&lt;Q head type DP-final&gt; = +
		&lt;Q head agr&gt; = &lt;DP head agr&gt;
		&lt;Q head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q head case&gt; = &lt;DP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;  |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 2qclCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes'">
<xsl:text>
rule {DP option 3 - not case-marked - degree modifiers both sides}
DP = Deg_1 {D' / D''} Deg_2
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
	&lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
	&lt;Deg_1 head case&gt; = &lt;DP head case&gt;
	&lt;Deg_2 head case&gt; = &lt;DP head case&gt;
	&lt;Deg_1 head type modifies_NP&gt; = +
	&lt;Deg_2 head type modifies_NP&gt; = +
	&lt;Deg_1 head type DP-initial&gt;  = +
	&lt;Deg_2 head type DP-final&gt;    = +
	&lt;Deg_1 head type comma&gt; = -
	&lt;D' head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
	&lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
	&lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none  
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 3
</xsl:text>
</xsl:if>
	
		
		
		
	
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes'">
<xsl:text>
      rule {DP option 3head - head case-marked  - degree modifiers both sides}
      DP = Deg_1 {D' / D''} Deg_2
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
      &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
      &lt;Deg_1 head type modifies_NP&gt; = +
      &lt;Deg_2 head type modifies_NP&gt; = +
      &lt;Deg_1 head type DP-initial&gt;  = +
      &lt;Deg_2 head type DP-final&gt;    = +
      &lt;Deg_1 head type comma&gt; = -
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
      &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 3head
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes'">
<xsl:text>
      rule {DP option 3cl - clitic case-marked - degree modifiers both sides}
      DP = Deg_1 {D' / D''} Deg_2
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Deg_1 head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg_1 head case&gt; = &lt;DP head case&gt;
      &lt;Deg_2 head agr&gt; = &lt;DP head agr&gt;
      &lt;Deg_2 head case&gt; = &lt;DP head case&gt;
      &lt;Deg_1 head type modifies_NP&gt; = +
      &lt;Deg_2 head type modifies_NP&gt; = +
      &lt;Deg_1 head type DP-initial&gt;  = +
      &lt;Deg_2 head type DP-final&gt;    = +
      &lt;Deg_1 head type comma&gt; = -
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Deg_2 head type comma&gt;
      &lt;DP head type prefix&gt; &lt;= &lt;Deg_1 head type prefix&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Deg_2 head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
      &lt;DP head type case-marked&gt; &lt;= + 
      &lt;DP option&gt; = 3cl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
      
      
      
      
      
      
      
      
      
   

	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
rule {DP option 3q - not case-marked - Q modifiers both sides}
DP = Q_1 {D' / D''} Q_2
	&lt;DP head&gt; = &lt;D' head&gt;
	&lt;DP head&gt; = &lt;D'' head&gt;
	&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
	&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
	&lt;Q_1 head case&gt; = &lt;DP head case&gt;
	&lt;Q_2 head case&gt; = &lt;DP head case&gt;
	&lt;Q_1 head type modifies_NP&gt; = +
	&lt;Q_2 head type modifies_NP&gt; = +
	&lt;Q_1 head type DP-initial&gt;  = +
	&lt;Q_2 head type DP-final&gt;    = +
	&lt;Q_1 head type comma&gt; = -
	&lt;D' head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
	&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
	&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
	&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
	&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
	&lt;DP head type case&gt; = none  
	&lt;DP head case&gt; = none  
	&lt;DP head type case-marked&gt; = -  
	&lt;DP option&gt; = 3q
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
      rule {DP option 3qhead - head case-marked  - Q modifiers both sides}
      DP = Q_1 {D' / D''} Q_2
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
      &lt;Q_1 head case&gt; = &lt;DP head case&gt;
      &lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
      &lt;Q_2 head case&gt; = &lt;DP head case&gt;
      &lt;Q_1 head type modifies_NP&gt; = +
      &lt;Q_2 head type modifies_NP&gt; = +
      &lt;Q_1 head type DP-initial&gt;  = +
      &lt;Q_2 head type DP-final&gt;    = +
      &lt;Q_1 head type comma&gt; = -
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
      &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type case&gt; = none  
      &lt;DP head&gt; == ~[case:none]  
      &lt;DP head type case-marked&gt; &lt;= +  
      &lt;DP option&gt; = 3qhead
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)='yes' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no'">
<xsl:text>
      rule {DP option 3qcl - clitic case-marked - Q modifiers both sides}
      DP = Q_1 {D' / D''} Q_2
      &lt;DP head&gt; = &lt;D' head&gt;
      &lt;DP head&gt; = &lt;D'' head&gt;
      &lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
      &lt;Q_1 head case&gt; = &lt;DP head case&gt;
      &lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
      &lt;Q_2 head case&gt; = &lt;DP head case&gt;
      &lt;Q_1 head type modifies_NP&gt; = +
      &lt;Q_2 head type modifies_NP&gt; = +
      &lt;Q_1 head type DP-initial&gt;  = +
      &lt;Q_2 head type DP-final&gt;    = +
      &lt;Q_1 head type comma&gt; = -
      &lt;D' head type comma&gt; = -
      &lt;D'' head type comma&gt; = -
      &lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
      &lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
      &lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
      &lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
      &lt;DP head type&gt; == ~[case:none]  
      &lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
      &lt;DP head type case-marked&gt; &lt;= + 
      &lt;DP option&gt; = 3qcl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3CLib - not case-marked - Q modifiers both sides, Classifier Q initial}
		DP = Class Q_1 {D' / D''} Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLib
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3CLia - not case-marked - Q modifiers both sides, Q Classifier initial}
		DP = Q_1 Class {D' / D''} Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3CLfb - not case-marked - Q modifiers both sides, Classifier Q final}
		DP = Q_1 {D' / D''} Class Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3CLfa - not case-marked - Q modifiers both sides, Q Classifier final}
		DP = Q_1 {D' / D''} Q_2 Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3CLibfb - not case-marked - Q modifiers both sides, Classifier Q botj}
		DP = Class_1 Q_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3CLiafb - not case-marked - Q modifiers both sides, Classifiers internal to Q both}
		DP = Q_1 Class_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3CLibfa - not case-marked - Q modifiers both sides, Classifier external to Q both}
		DP = Class_1 Q_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3CLiafa - not case-marked - Q modifiers both sides, Q Classifier both}
		DP = Q_1 Class_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head case&gt; = none  
		&lt;DP head type case-marked&gt; = -  
		&lt;DP option&gt; = 3CLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3headCLib - head case-marked  - Q modifiers both sides, Classifier Q initial}
		DP = Class Q_1 {D' / D''} Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLib
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3headCLia - head case-marked  - Q modifiers both sides, Q Classifier initial}
		DP = Q_1 Class {D' / D''} Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3headCLfb - head case-marked  - Q modifiers both sides, Classifier Q final}
		DP = Q_1 {D' / D''} Class Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3headCLfa - head case-marked  - Q modifiers both sides, Q Classifier final}
		DP = Q_1 {D' / D''} Q_2 Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3headCLibfb - head case-marked  - Q modifiers both sides, Classifier Q both}
		DP = Class_1 Q_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3headCLiafb - head case-marked  - Q modifiers both sides, Classifier internal to Q both}
		DP = Q_1 Class_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3headCLibfa - head case-marked  - Q modifiers both sides, Classifier external to Q both}
		DP = Class_1 Q_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesPrefix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesSuffix/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3headCLiafa - head case-marked  - Q modifiers both sides, Q Classifier both}
		DP = Q_1 Class_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type case&gt; = none  
		&lt;DP head&gt; == ~[case:none]  
		&lt;DP head type case-marked&gt; &lt;= +  
		&lt;DP option&gt; = 3headCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3clCLib - clitic case-marked - Q modifiers both sides, Classifier Q initial}
		DP = Class Q_1 {D' / D''} Q_2 
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLib
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3clCLia - clitic case-marked - Q modifiers both sides, Q Classifier initial}
		DP = Q_1 Class {D' / D''} Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3clCLfb - clitic case-marked - Q modifiers both sides, Classifier Q final}
		DP = Q_1 {D' / D''} Class Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DP option 3clCLfa - clitic case-marked - Q modifiers both sides, QClassifier final}
		DP = Q_1 {D' / D''} Q_2 Class
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3clCLibfb - clitic case-marked - Q modifiers both sides, Classifier Q both}
		DP = Class_1 Q_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterNBeforeQ/@checked)='yes'">
<xsl:text>
		rule {DP option 3clCLiafb - clitic case-marked - Q modifiers both sides, Classifier internal to Q both}
		DP = Q_1 Class_1 {D' / D''} Class_2 Q_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Q_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Q_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Q_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3clCLibfa - clitic case-marked - Q modifiers both sides, Classifier external to Q both}
		DP = Class_1 Q_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes' or normalize-space(//qp/@npDegree)!='no' and normalize-space(//qp/npDegreePosBoth/@checked)='yes' and normalize-space(//np/@caseN)='yes' and normalize-space(//np/@caseWord)!='yes' and normalize-space(//np/caseAttachesEnclitic/@checked)='yes' and normalize-space(//np/caseAttachesProclitic/@checked)='yes' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresent)!='no' and normalize-space(//np/classifierSpecificPosAfterQBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DP option 3clCLiafa - clitic case-marked - Q modifiers both sides, Q Classifier both}
		DP = Q_1 Class_1 {D' / D''} Q_2 Class_2
		&lt;DP head&gt; = &lt;D' head&gt;
		&lt;DP head&gt; = &lt;D'' head&gt;
		&lt;Q_1 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Q_1 head case&gt; = &lt;DP head case&gt;
		&lt;Q_2 head agr&gt; = &lt;DP head agr&gt;
		&lt;Q_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Q_2 head case&gt; = &lt;DP head case&gt;
		&lt;Q_1 head type modifies_NP&gt; = +
		&lt;Q_2 head type modifies_NP&gt; = +
		&lt;Q_1 head type DP-initial&gt;  = +
		&lt;Q_2 head type DP-final&gt;    = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Q_1 head type comma&gt; = -
		&lt;Q_2 head type comma&gt; = -
		&lt;D' head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;DP head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;DP head type prefix&gt; &lt;= &lt;Q_1 head type prefix&gt;
		&lt;DP head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;DP head type&gt; &lt;= &lt;DP head type prefix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; &lt;= &lt;DP head type suffix&gt;  |promote clitic values to phrase
		&lt;DP head type&gt; == ~[case:none]  
		&lt;DP head case&gt; &lt;= &lt;DP head type case&gt;    |promote clitic case to phrase
		&lt;DP head type case-marked&gt; &lt;= + 
		&lt;DP option&gt; = 3clCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//pron/@pronMod)='rel' or normalize-space(//pron/@pronMod)='part' or normalize-space(//qp/@partitive)='yes' or normalize-space(//qp/@partitive)='no'">
<xsl:text>
		rule {DBar option noNRel - pronoun,dem,quantifiers which can be modified by Rel Cl only (or partitive also with NP rules}
		D' = {Pron / Dem / Q / Num / Deg}
		&lt;D' head&gt; = &lt;Pron head&gt;
		&lt;D' head type case-marked&gt; = -  
		&lt;Pron head type possessive&gt; = -  
		&lt;Pron head type reflexive&gt; = -
		&lt;Pron head type reciprocal&gt; = - 
		&lt;D' head&gt; = &lt;Dem head&gt;
		&lt;D' head&gt; = &lt;Q head&gt;
		&lt;D' head&gt; = &lt;Num head&gt;
		&lt;D' head&gt; = &lt;Deg head&gt;
		&lt;Deg head type quantifier&gt; = +
		&lt;Dem head type wh &gt; = -		
		&lt;D' head type prefix poss&gt; = -  
		&lt;D' head type suffix poss&gt; = -  
		&lt;D' option&gt; = noNRel
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	
	
	<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosBefore/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosBefore/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetInitial  - quantifier determiners initial}
D' = Det N'
	&lt;D' head&gt; = &lt;N' head&gt;
	&lt;Det head type DP-initial&gt; = +
	&lt;Det head agr&gt; = &lt;N' head agr&gt;
	&lt;Det head type comma&gt; = -
	&lt;D' head infl polarity&gt; &lt;= &lt;Det head infl polarity&gt; |polarity from Det
	&lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Det head type prefix&gt;
	&lt;D' option&gt; = QuantDetInitial
</xsl:text>
</xsl:if>
	
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosAfter/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosAfter/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetFinal  - quantifier determiners final}
D' = N' Det
	&lt;D' head&gt; = &lt;N' head&gt;
	&lt;Det head type DP-initial&gt; = +
	&lt;Det head agr&gt; = &lt;N' head agr&gt;
	&lt;N' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Det head type comma&gt;
	&lt;D' head infl polarity&gt; &lt;= &lt;Det head infl polarity&gt; |polarity from Det
	&lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Det head type suffix&gt;
	&lt;D' option&gt; = QuantDetFinal
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='yes' and normalize-space(//qp/determinerPosBoth/@checked)='yes' or normalize-space(//qp/@determinerType)!='no' and normalize-space(//qp/@determiner)='some' and normalize-space(//qp/determinerPosBoth/@checked)='yes'">
<xsl:text>
rule {DBar option QuantDetBoth  - quantifier determiners both sides}
D' = Det N' Det_1
	&lt;D' head&gt; = &lt;N' head&gt;
	&lt;Det head type DP-initial&gt; = +
	&lt;Det_1 head type DP-final&gt; = +
	&lt;Det head agr&gt; = &lt;N' head agr&gt;
	&lt;Det_1 head agr&gt; = &lt;N' head agr&gt;
	&lt;Det head type comma&gt; = -
	&lt;N' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Det_1 head type comma&gt;
	&lt;D' head infl polarity&gt; &lt;= &lt;Det head infl polarity&gt; |polarity from Det
	&lt;D' head infl polarity&gt; &lt;= &lt;Det_1 head infl polarity&gt;  |or polarity from Det_1
	&lt;D' head type negative-polarity&gt; &lt;= &lt;Det head type negative-polarity&gt;
	&lt;D' head type negative-polarity&gt; &lt;= &lt;Det_1 head type negative-polarity&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Det head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Det_1 head type suffix&gt;
	&lt;D' option&gt; = QuantDetBoth
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	
   <xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 1frel - relative clause CP final}
D' = D'_1 CP
	&lt;D' head&gt; = &lt;D'_1 head&gt;
	&lt;CP head type relative&gt; = +
	&lt;CP head type verbheaded&gt; = +          | to restrict recursion
	&lt;CP head type question&gt; = -
	&lt;D' head agr animacy&gt; = &lt;CP head agr animacy&gt;
	&lt;D'_1 head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;D' head type relative&gt; &lt;= +	| restrict rel cl in subjects/copulars
	&lt;D' option&gt; = 1frel
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
	   
	   
		
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPComp/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeCPWh/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 1irel - relative clause CP initial}
D' = CP D'_1
	&lt;D' head&gt; = &lt;D'_1 head&gt;
	&lt;CP head type relative&gt; = +
	&lt;CP head type verbheaded&gt; = +          | to restrict recursion
	&lt;CP head type question&gt; = -
	&lt;D' head agr animacy&gt; = &lt;CP head agr animacy&gt;
	&lt;CP head type comma&gt; = -
	&lt;D' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;D' head type relative&gt; &lt;= +	| restrict rel cl in subjects/copulars
	&lt;D' option&gt; = 1irel
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='after' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 2frel - relative clause IP final}
D' = D'_1 IP
	&lt;D' head&gt; = &lt;D'_1 head&gt;
	&lt;IP head type relative&gt; = +
	&lt;IP head type verbheaded&gt; = +          | to restrict recursion
	&lt;D' head agr animacy&gt; = &lt;IP head agr animacy&gt;
	&lt;D'_1 head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;D' head type relative&gt; &lt;= +	| restrict rel cl in subjects/copulars
	&lt;D' option&gt; = 2frel
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIPRel/@checked)='yes' and normalize-space(//relcl/@clausePos)='either' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='before' or normalize-space(//relcl/@exist)='yes' and normalize-space(//relcl/relTypeIP/@checked)='yes' and normalize-space(//relcl/@clausePos)='either'">
<xsl:text>
rule {DBar option 2irel - relative clause IP initial}
D' = IP D'_1
	&lt;D' head&gt; = &lt;D'_1 head&gt;
	&lt;IP head type relative&gt; = +
	&lt;IP head type verbheaded&gt; = +          | to restrict recursion
	&lt;D' head agr animacy&gt; = &lt;IP head agr animacy&gt;
	&lt;IP head type comma&gt; = -
	&lt;D' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;D' head type relative&gt; &lt;= +	| restrict rel cl in subjects/copulars
	&lt;D' option&gt; = 2irel
</xsl:text>
</xsl:if>
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='no'">
<xsl:text>
rule {DBar option 1 - no determiners}
D' = NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;D' option&gt; = 1
</xsl:text>
</xsl:if>
	
		
	
	<xsl:if test="normalize-space(//np/@possCooccur)!='yes'">
<xsl:text>
rule {DBar option 1poss - no determiners with possessed}
D' = NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;NP head type possessed&gt; = +
	&lt;D' option&gt; = 1poss
</xsl:text>
</xsl:if>
	
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 2a - only articles, initial, optional}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 2a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 2apl - only articles, initial, optional for plural}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;Art head type comma&gt; = -
        	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 2apl
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2aposs - only articles, initial, optional, not possessed}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 2aposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2aplposs - only articles, initial, optional for plural, not possessed}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 2aplposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 2b - only articles, final, optional}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 2b
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 2bpl - only articles, final, optional for plural}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;NP head type comma&gt; = -
        	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
        	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 2bpl
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2bposs - only articles, final, optional, not possessed}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 2bposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 2bplposs - only articles, final, optional for plural, not possessed}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 2bplposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 2cwhI - only articles, both sides, optional, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 2cwhF - only articles, both sides, optional, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 2cwhagr - only articles, both sides, optional, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
                                          final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 2cplwhI - only articles, both sides, optional for plural, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cplwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 2cplwhF - only articles, both sides, optional for plural, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cplwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 2cplwhagr - only articles, both sides, optional for plural, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                                                                                 final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 2cplwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 2cposswhI - only articles, both sides, optional, not possessed, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 2cposswhF - only articles, both sides, optional, not possessed, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 2cposswhagr - only articles, both sides, optional, not possessed, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 2cplposswhI - only articles, both sides, optional for plural, not possessed, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cplposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 2cplposswhF - only articles, both sides, optional for plural, not possessed, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cplposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 2cplposswhagr - only articles, both sides, optional for plural, not possessed, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 2cplposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3a - only articles, initial, required}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 3a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3asg - only articles, initial, required for singular}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 3asg
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3aposs - only articles, initial, required, not possessed}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 3aposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBefore/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3asgposs - only articles, initial, required for singular, not possessed}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 3asgposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3b - only articles, final, required}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 3b
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 3bsg - only articles, final, required for singular}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 3bsg
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/@artPos)='after' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3bposs - only articles, final, required, not possessed}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 3bposs
</xsl:text>
</xsl:if>
	
		
		
		
		
	   
	   
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyAfter/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 3bsgposs - only articles, final, required for singular, not possessed}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 3bsgposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cwhI - only articles, both sides, required, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3cwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cwhF - only articles, both sides, required, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3cwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cwhagr - only articles, both sides, required, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3cwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3csgwhI - only articles, both sides, required for singular, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3csgwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3csgwhF - only articles, both sides, required for singular, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3csgwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3csgwhagr - only articles, both sides, required for singular, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 3csgwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3cposswhI - only articles, both sides, required, not possessed, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3cposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3cposswhF - only articles, both sides, required, not possessed, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3cposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3cposswhagr - only articles, both sides, required, not possessed, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3cposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='before'">
<xsl:text>
rule {DBar option 3csgposswhI - only articles, both sides, required for singular, not possessed, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3csgposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='after'">
<xsl:text>
rule {DBar option 3csgposswhF - only articles, both sides, required for singular, not possessed, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3csgposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='article' and normalize-space(//np/artOnlyBoth/@checked)='yes' and normalize-space(//np/@artRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whArtPos)='agree'">
<xsl:text>
rule {DBar option 3csgposswhagr - only articles, both sides, required for singular, not possessed, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt; = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 3csgposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
	

   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4a - only demonstratives, initial, optional}
D' = (Dem) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 4a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	      
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4apl - only demonstratives, initial, optional for plural}
D' = (Dem) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;Dem head type comma&gt; = -
        	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 4apl
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4aposs - only demonstratives, initial, optional, not possessed}
D' = (Dem) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 4aposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4aplposs - only demonstratives, initial, optional for plural, not possessed}
D' = (Dem) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
 	&lt;Dem head case&gt; = &lt;NP head case&gt;
       	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 4aplposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	
	
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	  
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aCL - only demonstratives, Classifier Dem, initial, optional}
      D' = (Class Dem) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4aCL
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aCLf - only demonstratives, Dem Classifier, initial, optional}
      D' = (Dem Class) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4aCLf
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aCLo - only demonstratives, Dem initial,  Classifier final, optional}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 4aCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aCLoOpt - only demonstratives, Dem initial,  Classifier final, optional}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4aCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aplCL - only demonstratives, Classifier Dem, initial, optional for plural}
      D' = (Class Dem) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;Class head type comma&gt; = -
      &lt;Dem head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4aplCL
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aplCLf - only demonstratives, Dem Classifier, initial, optional for plural}
      D' = (Dem Class) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;Class head type comma&gt; = -
      &lt;Dem head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4aplCLf
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aplCLo - only demonstratives, Dem initial, Classifier final, optional for plural}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 4aplCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aplCLoOpt - only demonstratives, Dem initial, Classifier final, optional for plural}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4aplCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
      rule {DBar option 4apossCL - only demonstratives, Classifier Dem, initial, optional, not possessed}
      D' = (Class Dem) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;NP head type possessed&gt; = -       
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
      &lt;D' option&gt; = 4apossCL
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
      rule {DBar option 4apossCLf - only demonstratives, Dem Classifier, initial, optional, not possessed}
      D' = (Dem Class) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;NP head type possessed&gt; = -       
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
      &lt;D' option&gt; = 4apossCLf
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4apossCLo - only demonstratives, Dem initial, Classifier final, optional, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4apossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4apossCLoOpt - only demonstratives, Dem initial, Classifier final, optional, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4apossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aplpossCL - only demonstratives, Classifier Dem, initial, optional for plural, not possessed}
      D' = (Class Dem) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type possessed&gt; = -       
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
      &lt;D' option&gt; = 4aplpossCL
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
      rule {DBar option 4aplpossCLf - only demonstratives, Dem Classifier, initial, optional for plural, not possessed}
      D' = (Dem Class) NP
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type possessed&gt; = -       
      &lt;Dem head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
      &lt;D' option&gt; = 4aplpossCLf
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aplpossCLo - only demonstratives, Dem initial, Classifier final, optional for plural, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4aplpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4aplpossCLoOpt - only demonstratives, Dem initial, Classifier final, optional for plural, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;D' option&gt; = 4aplpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
      rule {DBar option 4b - only demonstratives, final, optional}
      D' = NP (Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;NP head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4b
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
      rule {DBar option 4bpl - only demonstratives, final, optional for plural}
      D' = NP (Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4bpl
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
      rule {DBar option 4bposs - only demonstratives, final, optional, not possessed}
      D' = NP (Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;NP head type possessed&gt; = -       
      &lt;NP head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' option&gt; = 4bposs
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
      rule {DBar option 4bplposs - only demonstratives, final, optional for plural, not possessed}
      D' = NP (Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type possessed&gt; = -       
      &lt;NP head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' option&gt; = 4bplposs
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 4bCL - only demonstratives, Dem Classifier, final, optional}
D' = NP (Dem Class)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;Dem head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 4bCL
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bCLb - only demonstratives, Classifier Dem, final, optional}
		D' = NP (Class Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 4bCLb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bCLo - only demonstratives, Classifier initial, Dem final, optional}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 4bCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bCLoOpt - only demonstratives, Classifier initial, Dem final, optional}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4bCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 4bplCL - only demonstratives, Dem Classifier, final, optional for plural}
D' = NP (Dem Class)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
       	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;NP head type comma&gt; = -
        	&lt;Dem head type comma&gt; = -
        	&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
        	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 4bplCL
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
      rule {DBar option 4bplCLb - only demonstratives, Classifier Dem, final, optional for plural}
      D' = NP (Class Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
      &lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
      &lt;D' option&gt; = 4bplCLb
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bplCLo - only demonstratives, Classifier initial, Dem, final, optional for plural}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 4bplCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bplCLoOpt - only demonstratives, Classifier initial, Dem, final, optional for plural}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4bplCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
      rule {DBar option 4bpossCL - only demonstratives, Dem Classifier, final, optional, not possessed}
      D' = NP (Dem Class)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      &lt;NP head type possessed&gt; = -       
      &lt;NP head type comma&gt; = -
      &lt;Dem head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
      &lt;D' option&gt; = 4bpossCL
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
rule {DBar option 4bpossCLb - only demonstratives, Classifier Dem, final, optional, not possessed}
D' = NP (Class Dem)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 4bpossCLb
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bpossCLo - only demonstratives, Classifier initial, Dem, final, optional, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 4bpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bpossCLoOpt - only demonstratives, Classifier initial, Dem, final, optional, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4bpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
rule {DBar option 4bplpossCL - only demonstratives, Dem Classifier, final, optional for plural, not possessed}
D' = NP (Dem Class)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;Dem head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
	&lt;D' option&gt; = 4bplpossCL
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
	   
	   
	   
	   
	   
	   
	
   <xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
      rule {DBar option 4bplpossCLb - only demonstratives, Classifier Dem, final, optional for plural, not possessed}
      D' = NP (Class Dem)
      &lt;D' head&gt; = &lt;NP head&gt;
      &lt;Dem head agr&gt; = &lt;NP head agr&gt;
      &lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
      &lt;Dem head case&gt; = &lt;NP head case&gt;
      {&lt;NP head agr number&gt; = plural
      /&lt;NP head type mass&gt; = +
      /&lt;NP head type proper&gt; = +
      }
      &lt;NP head type possessed&gt; = -       
      &lt;NP head type comma&gt; = -
      &lt;Class head type comma&gt; = -
      &lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
      &lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
      &lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
      &lt;D' option&gt; = 4bplpossCLb
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bplpossCLo - only demonstratives, Classifier initial, Dem final, optional for plural, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 4bplpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4bplpossCLoOpt - only demonstratives, Classifier initial, Dem final, optional for plural, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 4bplpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhI - only demonstratives, both sides, optional, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhF - only demonstratives, both sides, optional, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhagr - only demonstratives, both sides, optional, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhI - only demonstratives, both sides, optional for plural, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhF - only demonstratives, both sides, optional for plural, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhagr - only demonstratives, both sides, optional for plural, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhI - only demonstratives, both sides, optional, not possessed, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhF - only demonstratives, both sides, optional, not possessed, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhagr - only demonstratives, both sides, optional, not possessed, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhI - only demonstratives, both sides, optional for plural, not possessed, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhF - only demonstratives, both sides, optional for plural, not possessed, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhagr - only demonstratives, both sides, optional for plural, not possessed, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
		<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhICLib - only demonstratives, both sides, optional, wh initial, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhICLia - only demonstratives, both sides, optional, wh initial, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhICLfb - only demonstratives, both sides, optional, wh initial, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhICLfa - only demonstratives, both sides, optional, wh initial, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhICLibfb - only demonstratives, both sides, optional, wh initial, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr&gt; = &lt;Class_1 head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr&gt; = &lt;Class_2 head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhICLiafb - only demonstratives, both sides, optional, wh initial, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhICLibfa - only demonstratives, both sides, optional, wh initial, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhICLiafa - only demonstratives, both sides, optional, wh initial, Dem Class NP Dem Class}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhFCLib - only demonstratives, both sides, optional, wh final, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhFCLia - only demonstratives, both sides, optional, wh final, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhFCLfb - only demonstratives, both sides, optional, wh final, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhFCLfa - only demonstratives, both sides, optional, wh final, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhFCLibfb - only demonstratives, both sides, optional, wh final, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhFCLiafb - only demonstratives, both sides, optional, wh final, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhFCLibfa - only demonstratives, both sides, optional, wh final, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhFCLiafa - only demonstratives, both sides, optional, wh final, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cwhagrCLib - only demonstratives, both sides, optional, wh agree, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhagrCLia - only demonstratives, both sides, optional, wh agree, Dem Clasifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhagrCLfb - only demonstratives, both sides, optional, wh agree, CLassifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cwhagrCLfa - only demonstratives, both sides, optional, wh agree, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhagrCLibfb - only demonstratives, both sides, optional, wh agree, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhagrCLiafb - only demonstratives, both sides, optional, wh agree, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhagrCLibfa - only demonstratives, both sides, optional, wh agree, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cwhagrCLiafa - only demonstratives, both sides, optional, wh agree, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhICLib - only demonstratives, both sides, optional for plural, wh initial, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhICLia - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhICLfb - only demonstratives, both sides, optional for plural, wh initial, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhICLfa - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhICLibfb - only demonstratives, both sides, optional for plural, wh initial, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhICLiafb - only demonstratives, both sides, optional for plural, wh initial, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhICLibfa - only demonstratives, both sides, optional for plural, wh initial, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhICLiafa - only demonstratives, both sides, optional for plural, wh initial, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhFCLib - only demonstratives, both sides, optional for plural, wh final, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhFCib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhFCLia - only demonstratives, both sides, optional for plural, wh final, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhFCLfb - only demonstratives, both sides, optional for plural, wh final, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhFCLfa - only demonstratives, both sides, optional for plural, wh final, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhFCLibfb - only demonstratives, both sides, optional for plural, wh final, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhFCLiafb - only demonstratives, both sides, optional for plural, wh final, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhFCLibfa - only demonstratives, both sides, optional for plural, wh final, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhFCLiafa - only demonstratives, both sides, optional for plural, wh final, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplwhagrCLib - only demonstratives, both sides, optional for plural, wh agree, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 4cplwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhagrCLia - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhagrCLfb - only demonstratives, both sides, optional for plural, wh agree, CLassifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplwhagrCLfa - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhagrCLibfb - only demonstratives, both sides, optional for plural, wh agree, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhagrCLiafb - only demonstratives, both sides, optional for plural, wh agree, Dem Class NP CLass Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhagrCLibfa - only demonstratives, both sides, optional for plural, wh agree, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplwhagrCLiafa - only demonstratives, both sides, optional for plural, wh agree, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 4cplwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhICLib - only demonstratives, both sides, optional, not possessed, wh initial, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhICLia - only demonstratives, both sides, optional, not possessed, wh initial, Del Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhICLfb - only demonstratives, both sides, optional, not possessed, wh initial, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhICLfa - only demonstratives, both sides, optional, not possessed, wh initial, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhICLibfb - only demonstratives, both sides, optional, not possessed, wh initial, CLassifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhICLiafb - only demonstratives, both sides, optional, not possessed, wh initial, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhICLibfa - only demonstratives, both sides, optional, not possessed, wh initial, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhICLiafa - only demonstratives, both sides, optional, not possessed, wh initial, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhFCLib - only demonstratives, both sides, optional, not possessed, wh final, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhFCLia - only demonstratives, both sides, optional, not possessed, wh final, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhFCLfb - only demonstratives, both sides, optional, not possessed, wh final, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhFCLfa - only demonstratives, both sides, optional, not possessed, wh final, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhFCLibfb - only demonstratives, both sides, optional, not possessed, wh final, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhFCLiafb - only demonstratives, both sides, optional, not possessed, wh final, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhFCLibfa - only demonstratives, both sides, optional, not possessed, wh final, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhFCLiafa - only demonstratives, both sides, optional, not possessed, wh final, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cposswhagrCLib - only demonstratives, both sides, optional, not possessed, wh agree, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhagrCLia - only demonstratives, both sides, optional, not possessed, wh agree, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhagrCLfb - only demonstratives, both sides, optional, not possessed, wh agree, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cposswhagrCLfa - only demonstratives, both sides, optional, not possessed, wh agree, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhagrCLibfb - only demonstratives, both sides, optional, not possessed, wh agree, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhagrCLiafb - only demonstratives, both sides, optional, not possessed, wh agree, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhagrCLibfa - only demonstratives, both sides, optional, not possessed, wh agree, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cposswhagrCLiafa - only demonstratives, both sides, optional, not possessed, wh agree, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhICLib - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhICLia - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhICLfb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhICLfa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhIClfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhICLibfb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhICLiafb - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhICLibfa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhICLiafa - only demonstratives, both sides, optional for plural, not possessed, wh initial, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhFCLib - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhFCLia - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhFCLfb - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhFCLfa - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhFCLibfb - only demonstratives, both sides, optional for plural, not possessed, wh final, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhFCLiafb - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhFCLibfa - only demonstratives, both sides, optional for plural, not possessed, wh final, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhFCLiafa - only demonstratives, both sides, optional for plural, not possessed, wh final, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 4cplposswhagrCLib - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 4cplposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLia - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLfb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLfa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLibfb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Classifier Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLiafb - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Class NP Class Dem}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLibfa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Class Dem NP Dem Class}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 4cplposswhagrCLiafa - only demonstratives, both sides, optional for plural, not possessed, wh agree, Dem Classifier both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper&gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 4cplposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   

	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5a - only demonstratives, initial, required}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5a
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5asg - only demonstratives, initial, required for singular}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5asg
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5aposs - only demonstratives, initial, required, not possessed}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 5aposs
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5asgposs - only demonstratives, initial, required for singular, not possessed}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 5asgposs
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5aCL - only demonstratives and Classifier, initial, required}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5aCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 5aCLf - only demonstratives and Classifier, initial, required}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5aCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5aCLo - only demonstratives initial and Classifier final, required}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5aCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgCL - only demonstratives and Classifier, initial, required for singular}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5asgCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgCLf - only demonstratives and Classifier, initial, required for singular}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5asgCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgCLo - only demonstratives initial and Classifier final, required for singular}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5asgCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5apossCL - only demonstratives and Classifier, initial, required, not possessed}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 5apossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 5apossCLf - only demonstratives and Classifier, initial, required, not possessed}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 5apossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5apossCLo - only demonstratives initial and Classifier final, required, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5apossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgpossCL - only demonstratives and Classifier, initial, required for singular, not possessed}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 5asgpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgpossCLf - only demonstratives and Classifier, initial, required for singular, not possessed}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 5asgpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBefore/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5asgpossCLo - only demonstratives initial and Classifier final, required for singular, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5asgpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	

	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5b - only demonstratives, final, required}
D' = NP Dem
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 5b
</xsl:text>
</xsl:if>
	
	   	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5bsg - only demonstratives, final, required for singular}
D' = NP Dem
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 5bsg
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5bposs - only demonstratives, final, required, not possessed}
D' = NP Dem
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 5bposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5bsgposs - only demonstratives, final, required for singular, not possessed}
D' = NP Dem
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 5bsgposs
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bCL - only demonstratives and Classifier, final, required}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bCLf - only demonstratives and Classifier, final, required}
		D' = NP Dem Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bCLo - only demonstratives final and Classifier initial, required}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgCL - only demonstratives and Classifier, final, required for singular}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bsgCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgCLf - only demonstratives and Classifier, final, required for singular}
		D' = NP Dem Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bsgCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgCLo - only demonstratives final and Classifier initial, required for singular}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 5bsgCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bpossCL - only demonstratives and Classifier, final, required, not possessed}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 5bpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bpossCLf - only demonstratives and Classifier, final, required, not possessed}
		D' = NP Dem Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5bpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bpossCLo - only demonstratives final and Classifier initial, required, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 5bpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgpossCL - only demonstratives and Classifier, final, required for singular, not possessed}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 5bsgpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgpossCLf - only demonstratives and Classifier, final, required for singular, not possessed}
		D' = NP Dem Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5bsgpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyAfter/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5bsgpossCLo - only demonstratives final and Classifier initial, required for singular, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 5bsgpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhI - only demonstratives, both sides, required, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhF - only demonstratives, both sides, required, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagr - only demonstratives, both sides, required, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhI - only demonstratives, both sides, required for singular, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhF - only demonstratives, both sides, required for singular, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagr - only demonstratives, both sides, required for singular, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhI - only demonstratives, both sides, required, not possessed, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhF - only demonstratives, both sides, required, not possessed, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagr - only demonstratives, both sides, required, not possessed, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhI - only demonstratives, both sides, required for singular, not possessed, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhI
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhF - only demonstratives, both sides, required for singular, not possessed, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhF
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='yes' or normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)='yes' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagr - only demonstratives, both sides, required for singular, not possessed, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhagr
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	


	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhICLib - only demonstratives, both sides, required, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhICLia - only demonstratives, both sides, required, wh initial, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhICLfb - only demonstratives, both sides, required, wh initial, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhICLfa - only demonstratives, both sides, required, wh initial, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhICLibfb - only demonstratives, both sides, required, wh initial, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhICLiafb - only demonstratives, both sides, required, wh initial, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhICLibfa - only demonstratives, both sides, required, wh initial, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhICLiafa - only demonstratives, both sides, required, wh initial, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhFCLib - only demonstratives, both sides, required, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhFCLia - only demonstratives, both sides, required, wh final, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhFCLfb - only demonstratives, both sides, required, wh final, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhFCLfa - only demonstratives, both sides, required, wh final, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhFCLibfb - only demonstratives, both sides, required, wh final, CLass Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhFCLiafb - only demonstratives, both sides, required, wh final, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhFCLibfa - only demonstratives, both sides, required, wh final, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhFCLiafa - only demonstratives, both sides, required, wh final, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cwhagrCLib - only demonstratives, both sides, required, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5cwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhagrCLia - only demonstratives, both sides, required, wh agree, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhagrCLfb - only demonstratives, both sides, required, wh agree, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cwhagrCLfa - only demonstratives, both sides, required, wh agree, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhagrCLibfb - only demonstratives, both sides, required, wh agree, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhagrCLiafb - only demonstratives, both sides, required, wh agree, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhagrCLibfa - only demonstratives, both sides, required, wh agree, CLass Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cwhagrCLiafa - only demonstratives, both sides, required, wh agree, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5cwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhICLib - only demonstratives, both sides, required for singular, wh initial, CLassifierDem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhICLia - only demonstratives, both sides, required for singular, wh initial, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhICLfb - only demonstratives, both sides, required for singular, wh initial, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhICLfa - only demonstratives, both sides, required for singular, wh initial, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhICLibfb - only demonstratives, both sides, required for singular, wh initial, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhICLiafb - only demonstratives, both sides, required for singular, wh initial, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhICLibfa - only demonstratives, both sides, required for singular, wh initial, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhICLiafa - only demonstratives, both sides, required for singular, wh initial, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhFCLib - only demonstratives, both sides, required for singular, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhFCLia - only demonstratives, both sides, required for singular, wh final, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhFCLfb - only demonstratives, both sides, required for singular, wh final, CLassifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhFCLfa - only demonstratives, both sides, required for singular, wh final, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhFCLibfb - only demonstratives, both sides, required for singular, wh final, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhFCLiafb - only demonstratives, both sides, required for singular, wh final, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhFCLibfa - only demonstratives, both sides, required for singular, wh final, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhFCLiafa - only demonstratives, both sides, required for singular, wh final, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgwhagrCLib - only demonstratives, both sides, required for singular, wh agree, Classifier dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 5csgwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhagrCLia - only demonstratives, both sides, required for singular, wh agree, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhagrCLfb - only demonstratives, both sides, required for singular, wh agree, Classifier dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgwhagrCLfa - only demonstratives, both sides, required for singular, wh agree, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhagrCLibfb - only demonstratives, both sides, required for singular, wh agree, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhagrCLiafb - only demonstratives, both sides, required for singular, wh agree, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhagrCLibfa - only demonstratives, both sides, required for singular, wh agree, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgwhagrCLiafa - only demonstratives, both sides, required for singular, wh agree, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 5csgwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhICLib - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhICLia - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhICLfb - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhICLfa - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhICLibfb - only demonstratives, both sides, required, not possessed, wh initial, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhICLiafb - only demonstratives, both sides, required, not possessed, wh initial, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhICLibfa - only demonstratives, both sides, required, not possessed, wh initial, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhICLiafa - only demonstratives, both sides, required, not possessed, wh initial, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhFCLib - only demonstratives, both sides, required, not possessed, wh final, CLassifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhFCLia - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhFCLfb - only demonstratives, both sides, required, not possessed, wh final, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhFCLfa - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhFCLibfb - only demonstratives, both sides, required, not possessed, wh final, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhFCLiafb - only demonstratives, both sides, required, not possessed, wh final, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhFCLibfa - only demonstratives, both sides, required, not possessed, wh final, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhFCLiafa - only demonstratives, both sides, required, not possessed, wh final, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5cposswhagrCLib - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5cposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhagrCLia - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhagrCLfb - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5cposswhagrCLfa - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhagrCLibfb - only demonstratives, both sides, required, not possessed, wh agree, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhagrCLiafb - only demonstratives, both sides, required, not possessed, wh agree, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhagrCLibfa - only demonstratives, both sides, required, not possessed, wh agree, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5cposswhagrCLiafa - only demonstratives, both sides, required, not possessed, wh agree, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5cposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhICLib - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhICLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhICLia - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhICLfb - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhICLfa - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhICLibfb - only demonstratives, both sides, required for singular, not possessed, wh initial, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhICLiafb - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhICLibfa - only demonstratives, both sides, required for singular, not possessed, wh initial, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhICLiafa - only demonstratives, both sides, required for singular, not possessed, wh initial, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhFCLib - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhFCLia - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhFCLfb - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhFCLfa - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhFCLibfb - only demonstratives, both sides, required for singular, not possessed, wh final, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhFCLiafb - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier NP Classifier Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhFCLibfa - only demonstratives, both sides, required for singular, not possessed, wh final, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhFCLiafa - only demonstratives, both sides, required for singular, not possessed, wh final, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 5csgposswhagrCLib - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt; = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 5csgposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
	   
	   
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLia - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLfb - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLfa - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLibfb - only demonstratives, both sides, required for singular, not possessed, wh agree, Classifier Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLiafb - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Class NP Class Dem}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLibfa - only demonstratives, both sides, required for singular, not possessed, wh agree, Class Dem NP Dem Class}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='demonstrative' and normalize-space(//np/demOnlyBoth/@checked)='yes' and normalize-space(//np/@demRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDem)!='no' and normalize-space(//np/classifierSpecificDemPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 5csgposswhagrCLiafa - only demonstratives, both sides, required for singular, not possessed, wh agree, Dem Classifier both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; = &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; = &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; = &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt; = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 5csgposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 6a - article or demonstrative, article initial, optional}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 6a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 6apl - article or demonstrative, article initial, optional for plural}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
        	&lt;Art head type comma&gt; = -
        	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 6apl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 6aposs - article or demonstrative, article initial, optional, not possessed}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 6aposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 6aplposs - article or demonstrative, article initial, optional for plural, not possessed}
D' = (Art) NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 6aplposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6aDem - article or demonstrative, Dem initial, optional}
		D' = (Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6aplDem - article or demonstrative, Dem initial, optional for plural}
		D' = (Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aplDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6apossDem - article or demonstrative, Dem initial, optional, not possessed}
		D' = (Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 6apossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6aplpossDem - article or demonstrative, Dem initial, optional for plural, not possessed}
		D' = (Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 6aplpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aCL - article or demonstrative, Classifier Dem initial, optional}
		D' = (Class Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aCLf - article or demonstrative, Dem Classifier initial, optional}
		D' = (Dem Class) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aCLo - article or demonstrative initial, optional, Classifier final}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aCLoOpt - article or demonstrative initial, optional, Classifier final}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6aCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplCL - article or demonstrative, Classifier Dem initial, optional for plural}
		D' = (Class Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aplCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplCLf - article or demonstrative, Dem Classifier initial, optional for plural}
		D' = (Dem Class) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aplCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplCLo - article or demonstrative, Dem initial, Classifier final, optional for plural}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6aplCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplCLoOpt - article or demonstrative, Dem initial, Classifier final, optional for plural}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6aplCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6apossCL - article or demonstrative, Classifier Dem initial, optional, not possessed}
		D' = (Class Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 6apossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 6apossCLf - article or demonstrative, Dem Classifier initial, optional, not possessed}
		D' = (Dem Class) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 6apossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6apossCLo - article or demonstrative, Dem initial, Classifier final, optional, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6apossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6apossCLoOpt - article or demonstrative, Dem initial, Classifier final, optional, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6apossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplpossCL - article or demonstrative, Classifier Dem initial, optional for plural, not possessed}
		D' = (Class Dem) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 6aplpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplpossCLf - article or demonstrative, Dem Classifier initial, optional for plural, not possessed}
		D' = (Dem Class) NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 6aplpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplpossCLo - article or demonstrative, Dem initial, Classifier final, optional for plural, not possessed}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6aplpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6aplpossCLoOpt - article or demonstrative, Dem initial, Classifier final, optional for plural, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6aplpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 6b - article or demonstrative, Art final, optional}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 6b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 6bpl - article or demonstrative, Art final, optional for plural}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
        	&lt;NP head type comma&gt; = -
        	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
        	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 6bpl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 6bposs - article or demonstrative, Art final, optional, not possessed}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 6bposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 6bplposs - article or demonstrative, Art final, optional for plural, not possessed}
D' = NP (Art)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 6bplposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6bDem - article or demonstrative, Dem final, optional}
		D' = NP (Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6bplDem - article or demonstrative, Dem final, optional for plural}
		D' = NP (Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bplDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6bpossDem - article or demonstrative, Dem final, optional, not possessed}
		D' = NP (Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6bplpossDem - article or demonstrative, Dem final, optional for plural, not possessed}
		D' = NP (Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bplpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bCL - article or demonstrative, Classifier Dem final, optional}
		D' = NP (Class Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bCLf - article or demonstrative, Dem Classifier final, optional}
		D' = NP (Dem Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bCLo - article or demonstrative, Dem final, Classifier initial, optional}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bCLoOpt - article or demonstrative, Dem final, Classifier initial, optional}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6bCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplCL - article or demonstrative, Classifier Dem final, optional for plural}
		D' = NP (Class Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bplCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplCLf - article or demonstrative, Dem Classifier final, optional for plural}
		D' = NP (Dem Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bplCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplCLo - article or demonstrative, Dem final, Classifier initial, optional for plural}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 6bplCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplCLoOpt - article or demonstrative, Dem final, Classifier initial, optional for plural}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6bplCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bpossCL - article or demonstrative, Classifier Dem final, optional, not possessed}
		D' = NP (Class Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bpossCLf - article or demonstrative, Dem Classifier final, optional, not possessed}
		D' = NP (Dem Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6bpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bpossCLo - article or demonstrative, Dem final, Classifier initial, optional, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bpossCLoOpt - article or demonstrative, Dem final, Classifier initial, optional, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6bpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplpossCL - article or demonstrative, Classifier Dem final, optional for plural, not possessed}
		D' = NP (Class Dem)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bplpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplpossCLf - article or demonstrative, Dem Classifier final, optional for plural, not possessed}
		D' = NP (Dem Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6bplpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplpossCLo - article or demonstrative, Dem final, Classifier initial, optional for plural, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 6bplpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6bplpossCLoOpt - article or demonstrative, Dem final, Classifier initial, optional for plural, not possessed}
		D' = NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;D' option&gt; = 6bplpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 6cwhI - article or demonstrative, article both sides, optional, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 6cwhF - article or demonstrative, Art both sides, optional, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 6cwhagr - article or demonstrative, Art both sides, optional, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 6cplwhI - article or demonstrative, Art both sides, optional for plural, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 6cplwhF - article or demonstrative, Art both sides, optional for plural, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 6cplwhagr - article or demonstrative, Art both sides, optional for plural, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 6cposswhI - article or demonstrative, Art both sides, optional, not possessed, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 6cposswhF - article or demonstrative, Art both sides, optional, not possessed, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 6cposswhagr - article or demonstrative, Art both sides, optional, not possessed, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 6cplposswhI - article or demonstrative, Art both sides, optional for plural, not possessed, wh initial}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 6cplposswhF - article or demonstrative, Art both sides, optional for plural, not possessed, wh final}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 6cplposswhagr - article or demonstrative, Art both sides, optional for plural, not possessed, wh agree}
D' = (Art_1) NP (Art_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhIDem - article or demonstrative, Dem both sides, optional, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhFDem - article or demonstrative, Dem both sides, optional, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhagrDem - article or demonstrative, Dem both sides, optional, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhIDem - article or demonstrative, Dem both sides, optional for plural, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhFDem - article or demonstrative, Dem both sides, optional for plural, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhagrDem - article or demonstrative, Dem both sides, optional for plural, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhIDem - article or demonstrative, Dem both sides, optional, not possessed, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhFDem - article or demonstrative, Dem both sides, optional, not possessed, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhagrDem - article or demonstrative, Dem both sides, optional, not possessed, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhIDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhFDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhagrDem - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree}
D' = (Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhICLib - article or demonstrative, Dem both sides, optional, wh initial, Classifier Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhICLia - article or demonstrative, Dem both sides, optional, wh initial, Dem Classifier initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhICLfb - article or demonstrative, Dem both sides, optional, wh initial, Classifier Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhICLfa - article or demonstrative, Dem both sides, optional, wh initial, Dem Classifier final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhICLibfb - article or demonstrative, Dem both sides, optional, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhICLiafb - article or demonstrative, Dem both sides, optional, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhICLibfa - article or demonstrative, Dem both sides, optional, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhICLiafa - article or demonstrative, Dem both sides, optional, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhFCLib - article or demonstrative, Dem both sides, optional, wh final, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhFCLia - article or demonstrative, Dem both sides, optional, wh final, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhFCLfb - article or demonstrative, Dem both sides, optional, wh final, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhFCLfa - article or demonstrative, Dem both sides, optional, wh final, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhFCLibfb - article or demonstrative, Dem both sides, optional, wh final, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhFCLiafb - article or demonstrative, Dem both sides, optional, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhFCLibfa - article or demonstrative, Dem both sides, optional, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhFCLiafa - article or demonstrative, Dem both sides, optional, wh final, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cwhagrCLib - article or demonstrative, Dem both sides, optional, wh agree, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhagrCLia - article or demonstrative, Dem both sides, optional, wh agree, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhagrCLfb - article or demonstrative, Dem both sides, optional, wh agree, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cwhagrCLfa - article or demonstrative, Dem both sides, optional, wh agree, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhagrCLibfb - article or demonstrative, Dem both sides, optional, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhagrCLiafb - article or demonstrative, Dem both sides, optional, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_2) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhagrCLibfa - article or demonstrative, Dem both sides, optional, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cwhagrCLiafa - article or demonstrative, Dem both sides, optional, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhICLib - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhICLia - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhICLfb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhICLfa - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhICLibfb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhICLiafb - article or demonstrative, Dem both sides, optional for plural, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhICLibfa - article or demonstrative, Dem both sides, optional for plural, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhICLiafa - article or demonstrative, Dem both sides, optional for plural, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhFCLib - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhFCLia - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhFCLfb - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhFCLfa - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhFCLibfb - article or demonstrative, Dem both sides, optional for plural, wh final, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhFCLiafb - article or demonstrative, Dem both sides, optional for plural, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhFCLibfa - article or demonstrative, Dem both sides, optional for plural, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhFCLiafa - article or demonstrative, Dem both sides, optional for plural, wh final, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplwhagrCLib - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 6cplwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhagrCLia - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhagrCLfb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplwhagrCLfa - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhagrCLibfb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhagrCLiafb - article or demonstrative, Dem both sides, optional for plural, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhagrCLibfa - article or demonstrative, Dem both sides, optional for plural, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplwhagrCLiafa - article or demonstrative, Dem both sides, optional for plural, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 6cplwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhICLib - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhICLia - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhICLfb - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhICLfa - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhICLibfb - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhICLiafb - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhICLibfa - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhICLiafa - article or demonstrative, Dem both sides, optional, not possessed, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhFCLib - article or demonstrative, Dem both sides, optional, not possessed, wh final, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhFCLia - article or demonstrative, Dem both sides, optional, not possessed, wh final, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhFCLfb - article or demonstrative, Dem both sides, optional, not possessed, wh final, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhFCLfa - article or demonstrative, Dem both sides, optional, not possessed, wh final, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhFCLibfb - article or demonstrative, Dem both sides, optional, not possessed, wh final, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhFCLiafb - article or demonstrative, Dem both sides, optional, not possessed, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhFCLibfa - article or demonstrative, Dem both sides, optional, not possessed, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhFCLiafa - article or demonstrative, Dem both sides, optional, not possessed, wh final, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cposswhagrCLib - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhagrCLia - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhagrCLfb - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cposswhagrCLfa - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhagrCLibfb - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhagrCLiafb - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhagrCLibfa - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cposswhagrCLiafa - article or demonstrative, Dem both sides, optional, not possessed, wh agree, Dem Class both}
		D' = (Dem_1 Class_2) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhICLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhICLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhICLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhICLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhICLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhICLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhICLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhICLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhFCLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhFCLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhFCLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhFCLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhFCLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhFCLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhFCLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhFCLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh final, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 6cplposswhagrCLib - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem initial}
D' = (Class Dem_1) NP (Dem_2)
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper &gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Class head type comma&gt; = -
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 6cplposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLia - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class initial}
		D' = (Dem_1 Class) NP (Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem final}
		D' = (Dem_1) NP (Class Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class final}
		D' = (Dem_1) NP (Dem_2 Class)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLibfb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLiafb - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) NP (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLibfa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 6cplposswhagrCLiafa - article or demonstrative, Dem both sides, optional for plural, not possessed, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) NP (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		{&lt;NP head agr number&gt; = plural
		/&lt;NP head type mass&gt; = +
		/&lt;NP head type proper &gt; = +
		}
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Class_1 head type comma&gt; = -
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 6cplposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7a - article or demonstrative, Art initial, required}
D' = Art  NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 7a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7asg - article or demonstrative, Art initial, required for singular}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 7asg
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7aposs - article or demonstrative, Art initial, required, not possessed}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 7aposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7asgposs - article or demonstrative, Art initial, required for singular, not possessed}
D' = Art NP
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D' option&gt; = 7asgposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7aDem - article or demonstrative, Dem initial, required}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7aDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7asgDem - article or demonstrative, Dem initial, required for singular}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7asgDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7apossDem - article or demonstrative, Dem initial, required, not possessed}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 7apossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7asgpossDem - article or demonstrative, Dem initial, required for singular, not possessed}
		D' = Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 7asgpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7aCL - article or demonstrative, Class Dem initial, required}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7aCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 7aCLf - article or demonstrative, Dem Class initial, required}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7aCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7aCLo - article or demonstrative, Dem initial, Class final, required}
		D' = Dem NP Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7aCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgCL - article or demonstrative, Class Dem initial, required for singular}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7asgCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgCLf - article or demonstrative, Dem Class initial, required for singular}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7asgCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgCLo - article or demonstrative, Dem initial, Class final, required for singular}
		D' = Dem NP Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7asgCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7apossCL - article or demonstrative, Class Dem initial, required, not possessed}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 7apossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 7apossCLf - article or demonstrative, Dem Class initial, required, not possessed}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 7apossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7apossCLo - article or demonstrative, Dem initial, Class final, required, not possessed}
		D' = Dem NP Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7apossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgpossCL - article or demonstrative, Class Dem initial, required for singular, not possessed}
		D' = Class Dem NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 7asgpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgpossCLf - article or demonstrative, Dem Class initial, required for singular, not possessed}
		D' = Dem Class NP
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Class head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 7asgpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBefore/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7asgpossCLo - article or demonstrative, Dem initial, Class final, required for singular, not possessed}
		D' = Dem NP Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7asgpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7b - article or demonstrative, Art final, required}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 7b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBar option 7bsg - article or demonstrative, Art final, required for singular}
D' = NP Art
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 7bsg
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7bposs - article or demonstrative, Art final, required, not possessed}
D' = NP Art 
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 7bposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBar option 7bsgposs - article or demonstrative, Art final, required for singular, not possessed}
D' = NP Art 
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;NP head agr&gt;
	&lt;Art head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D' option&gt; = 7bsgposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7bDem - article or demonstrative, Dem final, required}
		D' = NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7bsgDem - article or demonstrative, Dem final, required for singular}
		D' = NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bsgDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7bpossDem - article or demonstrative, Dem final, required, not possessed}
		D' = NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7bsgpossDem - article or demonstrative, Dem final, required for singular, not possessed}
		D' = NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bsgpossDem
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bCL - article or demonstrative, Class Dem final, required}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bCLf - article or demonstrative, Dem Class final, required}
		D' = NP Dem Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bCLo - article or demonstrative, Class initial, Dem final, required}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgCL - article or demonstrative, Class Dem final, required for singular}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bsgCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgCLf - article or demonstrative, Dem Class final, required for singular}
		D' = NP Dem Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bsgCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgCLo - article or demonstrative, Class initial, Dem final, required for singular}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 7bsgCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
		<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bpossCL - article or demonstrative, Class Dem final, required, not possessed}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bpossCLf - article or demonstrative, Dem Class final, required, not possessed}
		D' = NP Dem Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7bpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bpossCLo - article or demonstrative, Class initial, Dem final, required, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgpossCL - article or demonstrative, Class Dem final, required for singular, not possessed}
		D' = NP Class Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bsgpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgpossCLf - article or demonstrative, Dem Class final, required for singular, not possessed}
		D' = NP Dem Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7bsgpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosAfter/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7bsgpossCLo - article or demonstrative, Class intial, Dem final, required for singular, not possessed}
		D' = Class NP Dem
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;NP head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 7bsgpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cwhI - article or demonstrative, Art both sides, required, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cwhF - article or demonstrative, Art both sides, required, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cwhagr - article or demonstrative, Art both sides, required, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7csgwhI - article or demonstrative, Art both sides, required for singular, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7csgwhF - article or demonstrative, Art both sides, required for singular, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7csgwhagr - article or demonstrative, Art both sides, required for singular, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7cposswhI - article or demonstrative, Art both sides, required, not possessed, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7cposswhF - article or demonstrative, Art both sides, required, not possessed, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7cposswhagr - article or demonstrative, Art both sides, required, not possessed, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before'">
<xsl:text>
rule {DBar option 7csgposswhI - article or demonstrative, Art both sides, required for singular, not possessed, wh initial}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after'">
<xsl:text>
rule {DBar option 7csgposswhF - article or demonstrative, Art both sides, required for singular, not possessed, wh final}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree'">
<xsl:text>
rule {DBar option 7csgposswhagr - article or demonstrative, Art both sides, required for singular, not possessed, wh agree}
D' = Art_1 NP Art_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_1 head case&gt; = &lt;NP head case&gt;
	&lt;Art_2 head agr&gt; = &lt;NP head agr&gt;
	&lt;Art_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type wh&gt; = &lt;Art_2 head type wh&gt;
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Art_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhIDem - article or demonstrative, Dem both sides, required, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFDem - article or demonstrative, Dem both sides, required, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrDem - article or demonstrative, Dem both sides, required, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhIDem - article or demonstrative, Dem both sides, required for singular, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFDem - article or demonstrative, Dem both sides, required for singular, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrDem - article or demonstrative, Dem both sides, required for singular, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhIDem - article or demonstrative, Dem both sides, required, not possessed, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFDem - article or demonstrative, Dem both sides, required, not possessed, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDem - article or demonstrative, Dem both sides, required, not possessed, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhIDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhIDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh final}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhFDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrDem - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree}
D' = Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhagrDem
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhICLib - article or demonstrative, Dem both sides, required, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhICLia - article or demonstrative, Dem both sides, required, wh initial, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhICLfb - article or demonstrative, Dem both sides, required, wh initial, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhICLfa - article or demonstrative, Dem both sides, required, wh initial, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhICLibfb - article or demonstrative, Dem both sides, required, wh initial, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhICLiafb - article or demonstrative, Dem both sides, required, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhICLibfa - article or demonstrative, Dem both sides, required, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhICLiafa - article or demonstrative, Dem both sides, required, wh initial, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhFCLib - article or demonstrative, Dem both sides, required, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhFCLia - article or demonstrative, Dem both sides, required, wh final, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhFCLfb - article or demonstrative, Dem both sides, required, wh final, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhFCLfa - article or demonstrative, Dem both sides, required, wh final, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhFCLibfb - article or demonstrative, Dem both sides, required, wh final, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhFCLiafb - article or demonstrative, Dem both sides, required, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhFCLibfa - article or demonstrative, Dem both sides, required, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhFCLiafa - article or demonstrative, Dem both sides, required, wh final, Dem Class Dboth}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cwhagrCLib - article or demonstrative, Dem both sides, required, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7cwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhagrCLia - article or demonstrative, Dem both sides, required, wh agree, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhagrCLfb - article or demonstrative, Dem both sides, required, wh agree, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cwhagrCLfa - article or demonstrative, Dem both sides, required, wh agree, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhagrCLibfb - article or demonstrative, Dem both sides, required, wh agree, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhagrCLiafb - article or demonstrative, Dem both sides, required, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhagrCLibfa - article or demonstrative, Dem both sides, required, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cwhagrCLiafa - article or demonstrative, Dem both sides, required, wh agree, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7cwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhICLib - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhICLia - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhICLfb - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhICLfa - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhICLibfb - article or demonstrative, Dem both sides, required for singular, wh initial, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhICLiafb - article or demonstrative, Dem both sides, required for singular, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhICLibfa - article or demonstrative, Dem both sides, required for singular, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhICLiafa - article or demonstrative, Dem both sides, required for singular, wh initial, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhFCLib - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhFCLia - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhFCLfb - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhFCLfa - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhFCLibfb - article or demonstrative, Dem both sides, required for singular, wh final, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhFCLiafb - article or demonstrative, Dem both sides, required for singular, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhFCLibfa - article or demonstrative, Dem both sides, required for singular, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhFCLiafa - article or demonstrative, Dem both sides, required for singular, wh final, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgwhagrCLib - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 7csgwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhagrCLia - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhagrCLfb - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgwhagrCLfa - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhagrCLibfb - article or demonstrative, Dem both sides, required for singular, wh agree, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhagrCLiafb - article or demonstrative, Dem both sides, required for singular, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhagrCLibfa - article or demonstrative, Dem both sides, required for singular, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgwhagrCLiafa - article or demonstrative, Dem both sides, required for singular, wh agree, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 7csgwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhICLib - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhICLia - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhICLfb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhICLfa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhICLibfb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhICLiafb - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhICLibfa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhICLiafa - article or demonstrative, Dem both sides, required, not possessed, wh initial, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Art_1 head type DP-initial&gt; = +
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhFCLib - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhFCLia - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhFCLfb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhFCLfa - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class final}
		D' = Dem_1 NP Dem_2 Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhFCLibfb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhFCLiafb - article or demonstrative, Dem both sides, required, not possessed, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhFCLibfa - article or demonstrative, Dem both sides, required, not possessed, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhFCLiafa - article or demonstrative, Dem both sides, required, not possessed, wh final, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7cposswhagrDemCLib - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem Initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7cposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLia - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class Initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLfb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLfa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLibfb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLiafb - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhagrDemCLibfa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7cposswhagrCLiafa - article or demonstrative, Dem both sides, required, not possessed, wh agree, Dem Class final}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7cposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhICLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhICLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhICLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhICLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
		D' = Dem_1 NP Dem_2 Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhICLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhICLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhICLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhICLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh initial, Dem Class final}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhFCLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhFCLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_2 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhFCLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhFCLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class final}
		D' = Dem_1 NP Dem_2 Class 
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhFCLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhFCLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhFCLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhFCLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh final, Dem Class both}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 7csgposswhagrCLib - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 NP Dem_2
	&lt;D' head&gt; = &lt;NP head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
	&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 7csgposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLia - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class initial}
		D' = Dem_1 Class NP Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem final}
		D' = Dem_1 NP Class Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class final}
		D' = Dem_1 NP Dem_2 Class
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLibfb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class Dem both}
		D' = Class_1 Dem_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLiafb - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 NP Class_2 Dem_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLibfa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='no' and normalize-space(//np/demOrArtPosBoth/@checked)='yes' and normalize-space(//np/@demOrArtRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 7csgposswhagrCLiafa - article or demonstrative, Dem both sides, required for singular, not possessed, wh agree, Dem Class final}
		D' = Dem_1 Class_1 NP Dem_2 Class_2
		&lt;D' head&gt; = &lt;NP head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; = &lt;NP head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;NP head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; = &lt;NP head case&gt;
		&lt;NP head agr number&gt; = singular
		&lt;NP head type mass&gt; = -
		&lt;NP head type proper&gt; = -
		&lt;NP head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;NP head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 7csgposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8aD - demonstratives before, optional}
D' = (Dem) D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8aD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8aplD - demonstratives before, optional for plural}
D' = (Dem) D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
        	&lt;Dem head type comma&gt; = -
        	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8aplD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8aDposs - demonstratives before, optional, not possessed}
D' = (Dem) D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 8aDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8aplDposs - demonstratives before, optional for plural, not possessed}
D' = (Dem) D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 8aplDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDCL - Class demonstratives before, optional}
		D' = (Class Dem) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDCLf - demonstratives Class before, optional}
		D' = (Dem Class) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDCLo - demonstratives before, Class final, optional}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDCLoOpt - demonstratives before, Class final, optional}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8aDCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDCL - Class demonstratives before, optional for plural}
		D' = (Class Dem) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aplDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDCLf - demonstratives Class before, optional for plural}
		D' = (Dem Class) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aplDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDCLo - demonstratives before Class final, optional for plural}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8aplDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDCLoOpt - demonstratives before Class final, optional for plural}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8aplDCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDpossCL - Class demonstratives before, optional, not possessed}
		D' = (Class Dem) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 8aDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDpossCLf - demonstratives Class before, optional, not possessed}
		D' = (Dem Class) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 8aDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDpossCLo - demonstratives before Class final, optional, not possessed}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8aDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aDpossCLoOpt - demonstratives before Class final, optional, not possessed}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8aDpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDpossCL - Class demonstratives before, optional for plural, not possessed}
		D' = (Class Dem) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 8aplDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDpossCLf - demonstratives Class before, optional for plural, not possessed}
		D' = (Dem Class) D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 8aplDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDpossCLo - demonstratives before Class final, optional for plural, not possessed}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8aplDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8aplDpossCLoOpt - demonstratives before Class final, optional for plural, not possessed}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8aplDpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8bD - demonstratives after, optional}
D' = D'' (Dem)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8bD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8bplD - demonstratives after, optional for plural}
D' = D'' (Dem)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
        	&lt;D'' head type comma&gt; = -
        	&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
        	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8bplD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8bDposs - demonstratives after, optional, not possessed}
D' = D'' (Dem)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 8bDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8bplDposs - demonstratives after, optional for plural, not possessed}
D' = D'' (Dem)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 8bplDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDCL - Class demonstratives after, optional}
		D' = D'' (Class Dem)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDCLf - demonstratives Class after, optional}
		D' = D'' (Dem Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDCLo - Class before demonstratives after, optional}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDCLoOpt - Class before demonstratives after, optional}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8bDCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDCL - Class demonstratives after, optional for plural}
		D' = D'' (Class Dem)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bplDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDCLf - demonstratives Class after, optional for plural}
		D' = D'' (Dem Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bplDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDCLo - Class before demonstratives after, optional for plural}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8bplDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDCLoOpt - Class before demonstratives after, optional for plural}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8bplDCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDpossCL - Class demonstratives after, optional, not possessed}
		D' = D'' (Class Dem)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8bDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDpossCLf - demonstratives Class after, optional, not possessed}
		D' = D'' (Dem Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8bDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDpossCLo - Class before demonstratives after, optional, not possessed}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8bDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bDpossCLoOpt - Class before demonstratives after, optional, not possessed}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8bDpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDpossCL - Class demonstratives after, optional for plural, not possessed}
		D' = D'' (Class Dem)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8bplDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDpossCLf - demonstratives Class after, optional for plural, not possessed}
		D' = D'' (Dem Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8bplDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDpossCLo - Class before demonstratives after, optional for plural, not possessed}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8bplDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8bplDpossCLoOpt - Class before demonstratives after, optional for plural, not possessed}
		D' = D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;D' option&gt; = 8bplDpossCLoOpt
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhI - demonstratives both sides, both optional, wh initial}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhI 
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhF - demonstratives both sides, both optional, wh final}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhagr - demonstratives both sides, both optional, wh agree}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhI - demonstratives both sides, both optional for plural, wh initial}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhF - demonstratives both sides, both optional for plural, wh final}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhagr - demonstratives both sides, both optional for plural, wh agree}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhI - demonstratives both sides, both optional, not possessed, wh initial}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhF - demonstratives both sides, both optional, not possessed, wh final}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhagr - demonstratives both sides, both optional, not possessed, wh agree}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhI - demonstratives both sides, both optional for plural, not possessed, wh initial}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhF - demonstratives both sides, both optional for plural, not possessed, wh final}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhagr - demonstratives both sides, both optional for plural, not possessed, wh agree}
D' = (Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhICLib - demonstratives both sides, both optional, wh initial, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhICLia - demonstratives both sides, both optional, wh initial, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhICLfb - demonstratives both sides, both optional, wh initial, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhICLfa - demonstratives both sides, both optional, wh initial, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhICLibfb - demonstratives both sides, both optional, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhICLiafb - demonstratives both sides, both optional, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhICLibfa - demonstratives both sides, both optional, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhICLiafa - demonstratives both sides, both optional, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhFCLib - demonstratives both sides, both optional, wh final, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhFCLia - demonstratives both sides, both optional, wh final, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhFCLfb - demonstratives both sides, both optional, wh final, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhFCLfa - demonstratives both sides, both optional, wh final, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhFCLibfb - demonstratives both sides, both optional, wh final, Class Dem both}
		D' = (Class_2 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhFCLiafb - demonstratives both sides, both optional, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhFCLibfa - demonstratives both sides, both optional, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhFCLiafa - demonstratives both sides, both optional, wh final, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDwhagrCLib - demonstratives both sides, both optional, wh agree, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cDwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhagrCLia - demonstratives both sides, both optional, wh agree, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhagrCLfb - demonstratives both sides, both optional, wh agree, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDwhagrCLfa - demonstratives both sides, both optional, wh agree, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhagrCLibfb - demonstratives both sides, both optional, wh agree, Class Dem initial both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhagrCLiafb - demonstratives both sides, both optional, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhagrCLibfa - demonstratives both sides, both optional, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDwhagrCLiafa - demonstratives both sides, both optional, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cDwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhICLib - demonstratives both sides, both optional for plural, wh initial, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhICLia - demonstratives both sides, both optional for plural, wh initial, Dem Class final}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhICLfb - demonstratives both sides, both optional for plural, wh initial, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhICLfa - demonstratives both sides, both optional for plural, wh initial, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhICLibfb - demonstratives both sides, both optional for plural, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeBothN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhICLiafb - demonstratives both sides, both optional for plural, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhICLibfa - demonstratives both sides, both optional for plural, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhICLiafa - demonstratives both sides, both optional for plural, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhFCLib - demonstratives both sides, both optional for plural, wh final, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhFCLia - demonstratives both sides, both optional for plural, wh final, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhFCLfb - demonstratives both sides, both optional for plural, wh final, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhFCLfa - demonstratives both sides, both optional for plural, wh final, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhFCLibfb - demonstratives both sides, both optional for plural, wh final, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhFCLiafb - demonstratives both sides, both optional for plural, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhFCLibfa - demonstratives both sides, both optional for plural, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhFCLiafa - demonstratives both sides, both optional for plural, wh final, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDwhagrCLib - demonstratives both sides, both optional for plural, wh agree, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8cplDwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLia - demonstratives both sides, both optional for plural, wh agree, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLfb - demonstratives both sides, both optional for plural, wh agree, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLfa - demonstratives both sides, both optional for plural, wh agree, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLibfb - demonstratives both sides, both optional for plural, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLiafb - demonstratives both sides, both optional for plural, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLibfa - demonstratives both sides, both optional for plural, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDwhagrCLiafa - demonstratives both sides, both optional for plural, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8cplDwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhICLib - demonstratives both sides, both optional, not possessed, wh initial, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhICLia - demonstratives both sides, both optional, not possessed, wh initial, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhICLfb - demonstratives both sides, both optional, not possessed, wh initial, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhICLfa - demonstratives both sides, both optional, not possessed, wh initial, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhICLibfb - demonstratives both sides, both optional, not possessed, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhICLiafb - demonstratives both sides, both optional, not possessed, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhICLibfa - demonstratives both sides, both optional, not possessed, wh initial, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhICLiafa - demonstratives both sides, both optional, not possessed, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhFCLib - demonstratives both sides, both optional, not possessed, wh final, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhFCLia - demonstratives both sides, both optional, not possessed, wh final, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhFCLfb - demonstratives both sides, both optional, not possessed, wh final, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhFCLfa - demonstratives both sides, both optional, not possessed, wh final, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhFCLibfb - demonstratives both sides, both optional, not possessed, wh final, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhFCLiafb - demonstratives both sides, both optional, not possessed, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhFCLibfa - demonstratives both sides, both optional, not possessed, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhFCLiafa - demonstratives both sides, both optional, not possessed, wh final, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cDposswhagrCLib - demonstratives both sides, both optional, not possessed, wh agree, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cDposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLia - demonstratives both sides, both optional, not possessed, wh agree, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLfb - demonstratives both sides, both optional, not possessed, wh agree, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLfa - demonstratives both sides, both optional, not possessed, wh agree, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLibfb - demonstratives both sides, both optional, not possessed, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLiafb - demonstratives both sides, both optional, not possessed, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLibfa - demonstratives both sides, both optional, not possessed, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='no' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cDposswhagrCLiafa - demonstratives both sides, both optional, not possessed, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cDposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhICLib - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhICLia - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhICLfb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhICLfa - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhICLibfb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhICLiafb - demonstratives both sides, both optional for plural, not possessed, wh initial, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhICLibfa - demonstratives both sides, both optional for plural, not possessed, wh initial, Class extenal to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhICLiafa - demonstratives both sides, both optional for plural, not possessed, wh initial, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhFCLib - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLia - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLfb - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLfa - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLibfb - demonstratives both sides, both optional for plural, not possessed, wh final, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLiafb - demonstratives both sides, both optional for plural, not possessed, wh final, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLibfa - demonstratives both sides, both optional for plural, not possessed, wh final, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhFCLiafa - demonstratives both sides, both optional for plural, not possessed, wh final, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8cplDposswhagrCLib - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem initial}
D' = (Class Dem_1) D'' (Dem_2)
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
        	{&lt;D'' head agr number&gt; = plural
        	/&lt;D'' head type mass&gt; = +
        	/&lt;D'' head type proper&gt; = +
        	}
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8cplDposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLia - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class initial}
		D' = (Dem_1 Class) D'' (Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLfb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem final}
		D' = (Dem_1) D'' (Class Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLfa - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class final}
		D' = (Dem_1) D'' (Dem_2 Class)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLibfb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class Dem both}
		D' = (Class_1 Dem_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLiafb - demonstratives both sides, both optional for plural, not possessed, wh agree, Class internal to Dem both}
		D' = (Dem_1 Class_1) D'' (Class_2 Dem_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLibfa - demonstratives both sides, both optional for plural, not possessed, wh agree, Class external to Dem both}
		D' = (Class_1 Dem_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8cplDposswhagrCLiafa - demonstratives both sides, both optional for plural, not possessed, wh agree, Dem Class both}
		D' = (Dem_1 Class_1) D'' (Dem_2 Class_2)
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		{&lt;D'' head agr number&gt; = plural
		/&lt;D'' head type mass&gt; = +
		/&lt;D'' head type proper&gt; = +
		}
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;=&lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8cplDposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8dD - demonstratives before, required}
D' = Dem D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8dD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8dsgD - demonstratives before, required for singular}
D' = Dem D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8dsgD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8dDposs - demonstratives before, required, not possessed}
D' = Dem D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 8dDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8dsgDposs - demonstratives before, required for singular, not possessed}
D' = Dem D''
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem head type comma&gt; = -
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
	&lt;D' option&gt; = 8dsgDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDCL - Class demonstratives before, required}
		D' = Class Dem D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDCLf - demonstratives Class before, required}
		D' = Dem Class D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDCLo - demonstratives before, Class final, required}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDCL - Class demonstratives before, required for singular}
		D' = Class Dem D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dsgDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDCLf - demonstratives Class before, required for singular}
		D' = Dem Class D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dsgDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDCLo - demonstratives before, Class final, required for singular}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8dsgDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDpossCL - Class demonstratives before, required, not possessed}
		D' = Class Dem D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 8dDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDpossCLf - demonstratives Class before, required, not possessed}
		D' = Dem Class D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 8dDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dDpossCLo - demonstratives before, Class final, required, not possessed}
		D' = Dem D'' Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8dDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDpossCL - Class demonstratives before, required for singular, not possessed}
		D' = Class Dem D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' option&gt; = 8dsgDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDpossCLf - demonstratives Class before, required for singular, not possessed}
		D' = Dem Class D''
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' option&gt; = 8dsgDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBefore/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8dsgDpossCLo - demonstratives before, Class final, required for singular, not possessed}
		D' = Dem D'' Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8dsgDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8eD - demonstratives after, required}
D' = D'' Dem
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8eD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8esgD - demonstratives after, required for singular}
D' = D'' Dem
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
	&lt;D' option&gt; = 8esgD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8epossD - demonstratives after, required, not possessed}
D' = D'' Dem
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 8epossD
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8esgDposs - demonstratives after, required for singular, not possessed}
D' = D'' Dem
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
	&lt;D' option&gt; = 8esgDposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8eDCL - Class demonstratives after, required}
		D' = D'' Class Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8eDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8eDCLf - demonstratives Class after, required}
		D' = D'' Dem Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8eDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8eDCLo - Class before, demonstratives after, required}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8eDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDCL - Class demonstratives after, required for singular}
		D' = D'' Class Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8esgDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDCLf - demonstratives Class after, required for singular}
		D' = D'' Dem Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8esgDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDCLo - Class before, demonstratives after, required for singular}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' head demonstrative head type cooccur&gt; &lt;= &lt;Dem head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[type:[cooccur:+]]]]
		&lt;D' option&gt; = 8esgDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8epossDCL - Class demonstratives after, required, not possessed}
		D' = D'' Class Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8epossDCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8epossDCL - demonstratives Class after, required, not possessed}
		D' = D'' Dem Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8epossDCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8epossDCLo - Class before, demonstratives after, required, not possessed}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8epossDCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDpossCL - Class demonstratives after, required for singular, not possessed}
		D' = D'' Class Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8esgDpossCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDpossCLf - demonstratives Class after, required for singular, not possessed}
		D' = D'' Dem Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Dem head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8esgDpossCLf
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemAfter/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8esgDpossCLo - Class before, demonstratives after, required for singular, not possessed}
		D' = Class D'' Dem
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;D'' head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem head type suffix&gt;
		&lt;D' option&gt; = 8esgDpossCLo
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhI - demonstratives both sides, both required, wh initial}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhF - demonstratives both sides, both required, wh final}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagr - demonstratives both sides, both required, wh agree}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhI - demonstratives both sides, both required for singular, wh initial}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhF - demonstratives both sides, both required for singular, wh final}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagr - demonstratives both sides, both required for singular, wh agree}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhI - demonstratives both sides, both required, not possessed, wh initial}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhF - demonstratives both sides, both required, not possessed, wh final}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagr - demonstratives both sides, both required, not possessed, wh agree}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhI - demonstratives both sides, both required for singular, not possessed, wh initial}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhI
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhF - demonstratives both sides, both required for singular, not possessed, wh final}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhF
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)!='yesSpecific' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='yes' or normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagr - demonstratives both sides, both required for singular, not possessed, wh agree}
D' = Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhagr
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	

	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhICLib - demonstratives both sides, both required, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhICLia - demonstratives both sides, both required, wh initial, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhICLfb - demonstratives both sides, both required, wh initial, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhICLfa - demonstratives both sides, both required, wh initial, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhICLibfb - demonstratives both sides, both required, wh initial, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhICLiafb - demonstratives both sides, both required, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhICLibfa - demonstratives both sides, both required, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhICLiafa - demonstratives both sides, both required, wh initial, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhFCLib - demonstratives both sides, both required, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhFCLia - demonstratives both sides, both required, wh final, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhFCLfb - demonstratives both sides, both required, wh final, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhFCLfa - demonstratives both sides, both required, wh final, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhFCLibfb - demonstratives both sides, both required, wh final, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhFCLiafb - demonstratives both sides, both required, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhFCLibfa - demonstratives both sides, both required, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhFCLiafa - demonstratives both sides, both required, wh final, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDwhagrCLib - demonstratives both sides, both required, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fDwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhagrCLia - demonstratives both sides, both required, wh agree, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhagrCLfb - demonstratives both sides, both required, wh agree, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDwhagrCLfa - demonstratives both sides, both required, wh agree, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhagrCLibfb - demonstratives both sides, both required, wh agree, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhagrCLiafb - demonstratives both sides, both required, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhagrCLibfa - demonstratives both sides, both required, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDwhagrCLiafa - demonstratives both sides, both required, wh agree, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fDwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhICLib - demonstratives both sides, both required for singular, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhICLia - demonstratives both sides, both required for singular, wh initial, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhICLfb - demonstratives both sides, both required for singular, wh initial, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhICLfa - demonstratives both sides, both required for singular, wh initial, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhICLibfb - demonstratives both sides, both required for singular, wh initial, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhICLiafb - demonstratives both sides, both required for singular, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhICLibfa - demonstratives both sides, both required for singular, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhICLiafa - demonstratives both sides, both required for singular, wh initial, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhFCLib - demonstratives both sides, both required for singular, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLia - demonstratives both sides, both required for singular, wh final, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLfb - demonstratives both sides, both required for singular, wh final, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLfa - demonstratives both sides, both required for singular, wh final, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLibfb - demonstratives both sides, both required for singular, wh final, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLiafb - demonstratives both sides, both required for singular, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLibfa - demonstratives both sides, both required for singular, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhFCLiafa - demonstratives both sides, both required for singular, wh final, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDwhagrCLib - demonstratives both sides, both required for singular, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
	&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
	&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
	                                      final:[type:[cooccur:+]]]]]
	&lt;D' option&gt; = 8fsgDwhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLia - demonstratives both sides, both required for singular, wh agree, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLfb - demonstratives both sides, both required for singular, wh agree, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLfa - demonstratives both sides, both required for singular, wh agree, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLibfb - demonstratives both sides, both required for singular, wh agree, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLiafb - demonstratives both sides, both required for singular, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLibfa - demonstratives both sides, both required for singular, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)!='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDwhagrCLiafa - demonstratives both sides, both required for singular, wh agree, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' head demonstrative head initial type cooccur&gt; &lt;= &lt;Dem_1 head type cooccur&gt;
		&lt;D' head demonstrative head final type cooccur&gt; &lt;= &lt;Dem_2 head type cooccur&gt;
		&lt;D' head&gt; == [type:[possessed:+]] -&gt; [demonstrative:[head:[initial:[type:[cooccur:+]]
		final:[type:[cooccur:+]]]]]
		&lt;D' option&gt; = 8fsgDwhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhICLib - demonstratives both sides, both required, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhICLia - demonstratives both sides, both required, not possessed, wh initial, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhICLfb - demonstratives both sides, both required, not possessed, wh initial, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhICLfa - demonstratives both sides, both required, not possessed, wh initial, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhICLibfb - demonstratives both sides, both required, not possessed, wh initial, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhICLiafb - demonstratives both sides, both required, not possessed, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhICLibfa - demonstratives both sides, both required, not possessed, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhICLiafa - demonstratives both sides, both required, not possessed, wh initial, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhFCLib - demonstratives both sides, both required, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhFCLia - demonstratives both sides, both required, not possessed, wh final, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhFCLfb - demonstratives both sides, both required, not possessed, wh final, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhFCLfa - demonstratives both sides, both required, not possessed, wh final, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhFCLibfb - demonstratives both sides, both required, not possessed, wh final, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhFCLiafb - demonstratives both sides, both required, not possessed, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhFCLibfa - demonstratives both sides, both required, not possessed, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhFCLiafa - demonstratives both sides, both required, not possessed, wh final, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fDposswhagrCLib - demonstratives both sides, both required, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fDposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLia - demonstratives both sides, both required, not possessed, wh agree, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLfb - demonstratives both sides, both required, not possessed, wh agree, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLfa - demonstratives both sides, both required, not possessed, wh agree, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLibfb - demonstratives both sides, both required, not possessed, wh agree, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLiafb - demonstratives both sides, both required, not possessed, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLibfa - demonstratives both sides, both required, not possessed, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='yes' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fDposswhagrCLiafa - demonstratives both sides, both required, not possessed, wh agree, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fDposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhICLib - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhICLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLia - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLfb - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLfa - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLibfb - demonstratives both sides, both required for singular, not possessed, wh initial, Class Dem initial both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLiafb - demonstratives both sides, both required for singular, not possessed, wh initial, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLibfa - demonstratives both sides, both required for singular, not possessed, wh initial, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='before' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhICLiafa - demonstratives both sides, both required for singular, not possessed, wh initial, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhICLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhFCLib - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhFCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLia - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLfb - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLfa - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLibfb - demonstratives both sides, both required for singular, not possessed, wh final, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLiafb - demonstratives both sides, both required for singular, not possessed, wh final, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLibfa - demonstratives both sides, both required for singular, not possessed, wh final, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='after' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhFCLiafa - demonstratives both sides, both required for singular, not possessed, wh final, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_2 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhFCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
rule {DBar option 8fsgDposswhagrCLib - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem initial}
D' = Class Dem_1 D'' Dem_2
	&lt;D' head&gt; = &lt;D'' head&gt;
	&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
	&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
	&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
	&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
	&lt;D'' head agr number&gt; = singular
	&lt;D'' head type mass&gt; = -
	&lt;D'' head type proper&gt; = -
	&lt;D'' head type possessed&gt; = -       
	&lt;Dem_1 head type DP-initial&gt; = +
	&lt;Dem_2 head type DP-final&gt;   = +
	&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
	&lt;Dem_1 head type comma&gt; = -
	&lt;Class head type comma&gt; = -
	&lt;D'' head type comma&gt; = -
	&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
	&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
	&lt;D' head type prefix&gt; &lt;= &lt;Class head type prefix&gt;
	&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
	&lt;D' option&gt; = 8fsgDposswhagrCLib
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLia - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class initial}
		D' = Dem_1 Class D'' Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLia
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLfb - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem final}
		D' = Dem_1 D'' Class Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='no'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLfa - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class final}
		D' = Dem_1 D'' Dem_2 Class 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLibfb - demonstratives both sides, both required for singular, not possessed, wh agree, Class Dem both}
		D' = Class_1 Dem_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLibfb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterNBeforeDem/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLiafb - demonstratives both sides, both required for singular, not possessed, wh agree, Class internal to Dem both}
		D' = Dem_1 Class_1 D'' Class_2 Dem_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;Class_2 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Dem_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Dem_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLiafb
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosBeforeBoth/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLibfa - demonstratives both sides, both required for singular, not possessed, wh agree, Class external to Dem both}
		D' = Class_1 Dem_1 D'' Dem_2 Class_2
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Class_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLibfa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtDemBoth/@checked)='yes' and normalize-space(//np/@demAndArtDemRequired)='mass' and normalize-space(//np/@possCooccur)='no' and normalize-space(//q/@whDemPos)='agree' and normalize-space(//typology/@classifier)='yesSpecific' and normalize-space(//np/@classifierPresentDemBoth)!='no' and normalize-space(//np/classifierSpecificDemBothPosAfterDemBeforeN/@checked)='yes' and normalize-space(//np/classifierSpecificDemBothPosAfterBoth/@checked)='yes'">
<xsl:text>
		rule {DBar option 8fsgDposswhagrCLiafa - demonstratives both sides, both required for singular, not possessed, wh agree, Dem Class both}
		D' = Dem_1 Class_1 D'' Dem_2 Class_2 
		&lt;D' head&gt; = &lt;D'' head&gt;
		&lt;Dem_1 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_1 head agr class&gt; =  &lt;Class_1 head agr class&gt;
		&lt;Dem_1 head case&gt; =  &lt;D' head case&gt;
		&lt;Dem_2 head agr&gt; =  &lt;D' head agr&gt;
		&lt;Dem_2 head agr class&gt; =  &lt;Class_2 head agr class&gt;
		&lt;Dem_2 head case&gt; =  &lt;D' head case&gt;
		&lt;D'' head agr number&gt; = singular
		&lt;D'' head type mass&gt; = -
		&lt;D'' head type proper&gt; = -
		&lt;D'' head type possessed&gt; = -       
		&lt;Dem_1 head type DP-initial&gt; = +
		&lt;Dem_2 head type DP-final&gt;   = +
		&lt;Dem_1 head type wh&gt; = &lt;Dem_2 head type wh&gt;
		&lt;Dem_1 head type comma&gt; = -
		&lt;Dem_2 head type comma&gt; = -
		&lt;Class_1 head type comma&gt; = -
		&lt;D'' head type comma&gt; = -
		&lt;D' head type comma&gt; &lt;= &lt;Class_2 head type comma&gt;
		&lt;D' head type wh&gt; &lt;= &lt;Dem_1 head type wh&gt;
		&lt;D' head type prefix&gt; &lt;= &lt;Dem_1 head type prefix&gt;
		&lt;D' head type suffix&gt; &lt;= &lt;Class_2 head type suffix&gt;
		&lt;D' option&gt; = 8fsgDposswhagrCLiafa
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	


	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8aA - articles before, optional}
D'' = (Art) NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8aA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8aplA - articles before, optional for plural}
D'' = (Art) NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;Art head type comma&gt; = -
        	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8aplA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8aAposs - articles before, optional, not possessed}
D'' = (Art) NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' option&gt; = 8aAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8apAposs - articles before, optional for plural, not possessed}
D'' = (Art) NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' option&gt; = 8apAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8bA - articles after, optional}
D'' = NP (Art)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8bA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8bplA - articles after, optional for plural}
D'' = NP (Art)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
        	&lt;NP head type comma&gt; = -
        	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
        	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8bplA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8bAposs - articles after, optional, not possessed}
D'' = NP (Art)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' option&gt; = 8bAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8bplAposs - articles after, optional for plural, not possessed}
D'' = NP (Art)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' option&gt; = 8bplAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8cA - articles both sides, both optional}
D'' = (Art_1) NP (Art_2)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D'' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                        final:[type:[cooccur:+]]]]]
	&lt;D'' option&gt; = 8cA 
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8cplA - articles both sides, both optional for plural}
D'' = (Art_1) NP (Art_2)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D'' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	final:[type:[cooccur:+]]]]]
	&lt;D'' option&gt; = 8cplA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='no' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8cAposs - articles both sides, both optional, not possessed}
D'' = (Art_1) NP (Art_2)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' option&gt; = 8cAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8cplAposs - articles both sides, both optional for plural, not possessed}
D'' = (Art_1) NP (Art_2)
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
        	{&lt;NP head agr number&gt; = plural
        	/&lt;NP head type mass&gt; = +
        	/&lt;NP head type proper&gt; = +
        	}
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' option&gt; = 8cplAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8dA - articles before, required}
D'' = Art NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8dA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8dsgA - articles before, required for singular}
D'' = Art NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8dsgA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8dAposs - articles before, required, not possessed}
D'' = Art NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' option&gt; = 8dAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBefore/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8dsgAposs - articles before, required for singular, not possessed}
D'' = Art NP
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art head type comma&gt; = -
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art head type prefix&gt;
	&lt;D'' option&gt; = 8dsgAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8eA - articles after, required}
D'' = NP Art
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8eA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8esgA - articles after, required for singular}
D'' = NP Art
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' head article head type cooccur&gt; &lt;= &lt;Art head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[type:[cooccur:+]]]]
	&lt;D'' option&gt; = 8esgA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8eAposs - articles after, required, not possessed}
D'' = NP Art
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' option&gt; = 8eAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtAfter/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8esgAposs - articles after, required for singular, not possessed}
D'' = NP Art
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art head type comma&gt;
	&lt;D'' head type wh&gt; &lt;= &lt;Art head type wh&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art head type suffix&gt;
	&lt;D'' option&gt; = 8esgAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8fA - articles both sides, both required}
D'' = Art_1 NP Art_2
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D'' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D'' option&gt; = 8fA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)!='no'">
<xsl:text>
rule {DBarBar option 8fsgA - articles both sides, both required for singular}
D'' = Art_1 NP Art_2
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' head article head initial type cooccur&gt; &lt;= &lt;Art_1 head type cooccur&gt;
	&lt;D'' head article head final type cooccur&gt; &lt;= &lt;Art_2 head type cooccur&gt;
	&lt;D'' head&gt; == [type:[possessed:+]] -&gt; [article:[head:[initial:[type:[cooccur:+]]
	                       final:[type:[cooccur:+]]]]]
	&lt;D'' option&gt; = 8fsgA
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='yes' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8fAposs - articles both sides, both required, not possessed}
D'' = Art_1 NP Art_2
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' option&gt; = 8fAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//np/@artAndDem)='both' and normalize-space(//np/@artBothCooccur)='yes' and normalize-space(//np/demAndArtArtBoth/@checked)='yes' and normalize-space(//np/@demAndArtArtRequired)='mass' and normalize-space(//np/@possCooccur)='no'">
<xsl:text>
rule {DBarBar option 8fsgAposs - articles both sides, both required for singular, not possessed}
D'' = Art_1 NP Art_2
	&lt;D'' head&gt; = &lt;NP head&gt;
	&lt;Art_1 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_1 head case&gt; = &lt;D'' head case&gt;
	&lt;Art_2 head agr&gt; = &lt;D'' head agr&gt;
	&lt;Art_2 head case&gt; = &lt;D'' head case&gt;
	&lt;NP head agr number&gt; = singular
	&lt;NP head type mass&gt; = -
	&lt;NP head type proper&gt; = -
	&lt;NP head type possessed&gt; = -       
	&lt;Art_1 head type DP-initial&gt; = +
	&lt;Art_2 head type DP-final&gt;   = +
	&lt;Art_1 head type comma&gt; = -
	&lt;NP head type comma&gt; = -
	&lt;D'' head type comma&gt; &lt;= &lt;Art_2 head type comma&gt;
	&lt;D'' head type prefix&gt; &lt;= &lt;Art_1 head type prefix&gt;
	&lt;D'' head type suffix&gt; &lt;= &lt;Art_2 head type suffix&gt;
	&lt;D'' option&gt; = 8fsgAposs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	

</xsl:template>
</xsl:stylesheet>

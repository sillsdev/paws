<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="/" mode="vpvsoaux">
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11a - Aux Subject V for VSO languages, not passive}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
        	{&lt;V' head type transitive&gt; = -
        	/&lt;V' head type transitive&gt; = +
 	&lt;V' head object head type reflexive&gt; = -
	}
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
	   
		
		
		
		
		
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option 11aNegSubjVerbRequired - Aux Subject V for VSO languages, not passive}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
        	{&lt;V' head type transitive&gt; = -
        	/&lt;V' head type transitive&gt; = +
 	&lt;V' head object head type reflexive&gt; = -
	}
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11aNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
	   
		
		
		
		
		
	   
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11arefl - Aux Subject V for VSO languages, not passive, reflexive object}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;V' head type transitive&gt; = +
	&lt;V' head object head type reflexive&gt; = +
	&lt;VP head object head agr&gt; = &lt;VP head subject head agr&gt;
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
          &lt;VP head infl&gt; == ~[valence:passive]
         &lt;VP option&gt; = 11arefl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option11areflNegSubjVerbRequired - Aux Subject V for VSO languages, not passive, reflexive object}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;V' head type transitive&gt; = +
	&lt;V' head object head type reflexive&gt; = +
	&lt;VP head object head agr&gt; = &lt;VP head subject head agr&gt;
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11areflNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11b - Aux Subject V for VSO languages, passive}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head object&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head infl valence&gt; = passive
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
	&lt;VP option&gt; = 11b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option 11bNegSubjVerbRequired - Aux Subject V for VSO languages, passive}
VP = DP V'
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head object&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head infl valence&gt; = passive
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
	&lt;VP option&gt; = 11bNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11c - V Subject Aux for OSV languages, not passive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
        	{&lt;V' head type transitive&gt; = -
        	/&lt;V' head type transitive&gt; = +
 	&lt;V' head object head type reflexive&gt; = -
	}
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option 11cNegSubjVerbRequired - V Subject Aux for OSV languages, not passive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
        	{&lt;V' head type transitive&gt; = -
        	/&lt;V' head type transitive&gt; = +
 	&lt;V' head object head type reflexive&gt; = -
	}
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11cNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11crefl - V Subject Aux for OSV languages, not passive, reflexive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;V' head type transitive&gt; = +
	&lt;V' head object head type reflexive&gt; = +
	&lt;VP head object head agr&gt; = &lt;VP head subject head agr&gt;
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11crefl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//pron/@refl)='yes' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option 11creflNegSubjVerbRequired - V Subject Aux for OSV languages, not passive, reflexive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head subject&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;V' head type transitive&gt; = +
	&lt;V' head object head type reflexive&gt; = +
	&lt;VP head object head agr&gt; = &lt;VP head subject head agr&gt;
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head type motion&gt; = -
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;VP head&gt; == [type:[reciprocal:+]] -&gt; 
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [object:[head:[type:[reciprocal:+]]]] -&gt;
                     [subject:[head:[agr:[number:plural]]]]
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
 	&lt;VP head infl&gt; == ~[valence:passive]
 	&lt;VP option&gt; = 11creflNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ipn/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='no'">
<xsl:text>
rule {VP option 11d - V Subject Aux for OSV languages, passive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head object&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head infl valence&gt; = passive
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
	&lt;VP option&gt; = 11d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ipn/@passive)='yes' and normalize-space(//neg/@subjVerbRequired)='yes'">
<xsl:text>
rule {VP option 11dNegSubjVerbRequired - V Subject Aux for OSV languages, passive}
VP = V' DP
	&lt;VP head&gt; = &lt;V' head&gt;
	&lt;V' head object&gt; = &lt;DP&gt;
	&lt;VP head type pro-drop&gt; = -
	&lt;VP head type auxiliary&gt; = +
	&lt;VP head infl valence&gt; = passive
	&lt;DP head type possessive&gt; = -  		|subject not possessive
	&lt;DP head type reflexive&gt; = -		|subject not reflexive
	&lt;DP head type reciprocal&gt; = -		|subject not reciprocal
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head type comma&gt; = -
	&lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, VP must be 
                     [infl:[polarity:negative]]
 	&lt;VP head fronted&gt; == ~[cat:FocusP]
 	&lt;VP head fronted&gt; == ~[cat:DP]
	&lt;VP option&gt; = 11dNegSubjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/existWord/@checked)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/existWord/@checked)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/existWord/@checked)='yes'">
<xsl:text>
      rule {VP option 12aexist - existential Adv initial}
VP = AdvP I'
      &lt;VP head&gt; = &lt;V' head&gt;
      &lt;VP head type existential&gt; = +
      &lt;AdvP head type existential&gt; = +
      &lt;VP head infl valence&gt; = active
      &lt;AdvP head type comma&gt; = -
      &lt;VP head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
      &lt;VP option&gt; = 12aexist
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
   	
   	
      
      
      
      
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/existWord/@checked)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/existWord/@checked)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/existWord/@checked)='yes'">
<xsl:text>
      rule {VP option 12bexist - existential Adv final} 
VP = V' AdvP
      &lt;VP head&gt; = &lt;V' head&gt;
      &lt;VP head type existential&gt; = +
      &lt;AdvP head type existential&gt; = +
      &lt;VP head infl valence&gt; = active
      &lt;V'  head type comma&gt; = -
      &lt;VP head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
      &lt;VP head type suffix&gt; &lt;= &lt;AdvP head type suffix&gt;
      &lt;VP option&gt; = 12bexist
   </xsl:text>
</xsl:if>
   
      
      
      
      
   	
   	
      
      
      
      
   	
   	
      
      
      
      
   	
   
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
rule {VBar option 1 - V initial/final, intransitive}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head type transitive&gt; = -
	&lt;V head type copular&gt; = -
	&lt;V head infl valence&gt; = active
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 1
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
rule {VBar option 2a - V initial, motion intransitive}
V' = V {PP / AdvP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;PP head type locative&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;AdvP head type locative&gt; = +
	&lt;V head type transitive&gt; = -
	&lt;V head type copular&gt; = -
	&lt;V head type motion&gt; = +
	&lt;V head infl valence&gt; = active
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;AdvP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 2a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
rule {VBar option 2b - V final, motion intransitive}
V' = {PP / AdvP} V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;PP head type locative&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;AdvP head type locative&gt; = +
	&lt;V head type transitive&gt; = -
	&lt;V head type copular&gt; = -
	&lt;V head type motion&gt; = +
	&lt;V head infl valence&gt; = active
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;AdvP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 2b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@objVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@objVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@objVerbRequired)='no'">
<xsl:text>
rule {VBar option 3a - V initial, copular}
V' = V {PP / AdjP / DP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head type copular&gt; = +
	&lt;V' head type transitive&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;AdjP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 3a
</xsl:text>
</xsl:if>
	

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no'">
<xsl:text>
rule {VBar option 3aNegObjVerbRequired - V initial, copular}
V' = V {PP / AdjP / DP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head type copular&gt; = +
	&lt;V' head type transitive&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;AdjP head type suffix copular&gt; = -
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 3aNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {VBar option 3aperc - V initial, perception}
      V' = V  AdjP
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = +
      &lt;V' head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type auxiliary&gt; = +
      &lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
      &lt;AdjP head type suffix copular&gt; = -
      &lt;V head type comma&gt; = -
      &lt;V' head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3aperc
   </xsl:text>
</xsl:if>
   
          
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxOtherOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3aexist - VSO order, existential verb}
      V' = V DP (AdvP / PP / DP_1)
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type existential&gt; = +
      &lt;V head object&gt; = &lt;DP&gt;
      &lt;V head agr number&gt; = &lt;DP head agr number&gt;     
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdvP head type locative&gt; = +
      &lt;PP head type locative&gt; = +
      &lt;DP_1 head type locative&gt; = +
      &lt;V head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
      &lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
      &lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;AdvP head type suffix&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3aexist
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
   	
   	
      
      
      
      
   	
   	
      
   
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@objVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@objVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@objVerbRequired)='no'">
<xsl:text>
      rule {VBar option 3b - V final, copular}
V' = {PP / AdjP / DP} V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head type copular&gt; = +
	&lt;V' head type transitive&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;AdjP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;AdvP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;AdjP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 3b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//neg/@objVerbRequired)!='no'">
<xsl:text>
rule {VBar option 3bNegObjVerbRequired - V final, copular}
V' = {PP / AdjP / DP} V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head type copular&gt; = +
	&lt;V' head type transitive&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;AdjP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;AdvP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;AdjP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 3bNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {VBar option 3bperc - V final, perception}
      V' = AdjP V
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = +
      &lt;V' head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type auxiliary&gt; = +
      &lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
      &lt;AdjP head type suffix copular&gt; = -
      &lt;AdvP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP head type prefix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3bperc
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='yes' and normalize-space(//ip/@auxOtherOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existPosition/@checked)='yes' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3bexist - OSV order, existential verb}
      V' = (AdvP / PP / DP_1) DP V
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type existential&gt; = +
      &lt;V head object&gt; = &lt;DP&gt;
      &lt;V head agr number&gt; = &lt;DP head agr number&gt;     
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdvP head type locative&gt; = +
      &lt;PP head type locative&gt; = +
      &lt;DP_1 head type locative&gt; = +
      &lt;DP head type comma&gt; = -
      &lt;AdvP head type comma&gt; = -
      &lt;PP head type comma&gt; = -
      &lt;DP_1 head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
      &lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
      &lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3bexist
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
   	
   	
      
      
      
      
   	
   	
      
 
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@copular)!='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@copular)!='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@copular)!='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@copular)!='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@copular)!='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@copular)!='yes'">
<xsl:text>
rule {VBar option 3c - copular sentence, no verb}
V' = {PP / AdjP / DP}
	&lt;V' head&gt; = &lt;PP head&gt;
	&lt;V' head&gt; = &lt;AdjP head&gt;
	&lt;V' head&gt; = &lt;DP head&gt;
	&lt;V' head type verbheaded&gt; = -             | to restrict recursion
	&lt;V' head type transitive&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;DP head type pronoun&gt; = -		 | to restrict pronouns
	&lt;DP head type quantifier&gt; = -		 | to restrict quantifiers
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;AdjP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;AdjP head type suffix copular&gt; = -
	&lt;V' head type copular&gt; &lt;= +
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 3c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3cexist - VSO order, existential, no verb}
      V' = DP (AdvP / PP / DP_1)
      &lt;V' head&gt; = &lt;DP head&gt;
      &lt;V head type existential&gt; = +
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdvP head type locative&gt; = +
      &lt;PP head type locative&gt; = +
      &lt;DP_1 head type locative&gt; = +
      &lt;V' head type comma&gt; &lt;= &lt;AdvP head type comma&gt;
      &lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
      &lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;AdvP head type suffix&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3cexist
   </xsl:text>
</xsl:if>
   
      
      
      	
   	
   	
   	
      
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/existVerb/@checked)='no' and normalize-space(//ip/existPosition/@checked)='no' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3dexist - OSV order, existential, no verb}
      V' = (AdvP / PP / DP_1) DP
      &lt;V' head&gt; = &lt;DP head&gt;
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdvP head type locative&gt; = +
      &lt;PP head type locative&gt; = +
      &lt;DP_1 head type locative&gt; = +
      &lt;AdvP head type comma&gt; = -
      &lt;PP head type comma&gt; = -
      &lt;DP_1 head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
      &lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
      &lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 3dexist
   </xsl:text>
</xsl:if>
   
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
   
  
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes'">
<xsl:text>
      rule {V' option 3la - V initial, comparative of equal nouns}
      V' = V (Art) Deg N Conj DP (Aux / V_1)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type equalN&gt; = +
      &lt;Conj head type compareN&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;N head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
      &lt;V' option&gt; = 3la
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes'">
<xsl:text>
		rule {V' option 3laCL - V initial, comparative of equal nouns, Deg clitic on N}
		V' = V (Art) N Conj DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;N head type equalN&gt; = +
		&lt;Conj head type compareN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3laCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no'">
<xsl:text>
		rule {V' option 3laNoConj - V initial, comparative of equal nouns, w/o Conj}
		V' = V (Art) Deg N DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;Deg head type equalN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3laNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no'">
<xsl:text>
		rule {V' option 3laCLNoConj - V initial, comparative of equal nouns, Deg clitic on N, w/o Conj}
		V' = V (Art) N DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;N head type equalN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3laCLNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes'">
<xsl:text>
      rule {V' option 3lb - V initial, comparative of equal adjectives}
V' = V Deg AdjP Conj DP (Aux / V_1)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type equalAdj&gt; = +
      &lt;Conj head type compareAdj&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
      &lt;V' option&gt; = 3lb
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes'">
<xsl:text>
		rule {V' option 3lbNoDeg - V initial, comparative of equal adjectives, w/o Deg}
		V' = V AdjP Conj DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Conj head type compareAdj&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lbNoDeg
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no'">
<xsl:text>
		rule {V' option 3lbNoConj - V initial, comparative of equal adjectives, w/o Conj}
		V' = V Deg AdjP DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type equalAdj&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lbNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no'">
<xsl:text>
		rule {V' option 3lbNoDegNoConj - V initial, comparative of equal adjectives, w/o Deg, w/o Conj}
		V' = V AdjP DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lbNoDegNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3lc1 - V initial, comparative Adj with degree words}
V' = V Deg AdjP Conj DP
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
      &lt;V' option&gt; = 3lc1
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3lc2 - V initial, comparative Adj with degree affix}
 V' = V AdjP Conj DP
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
      &lt;V' option&gt; = 3lc2
   </xsl:text>
</xsl:if>
         
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3lc1NoConj - V initial, comparative Adj with degree words, w/o Conj}
		V' = V Deg AdjP DP
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lc1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3lc2NoConj - V initial, comparative Adj with degree affix, w/o Conj}
		V' = V AdjP DP
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;AdjP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lc2NoConj
	</xsl:text>
</xsl:if>
	      
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3lc3 - V initial, comparative N}
V' = V (Art) {Deg/AdjP} N Conj DP (Aux / V_1)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;N head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
      &lt;V' option&gt; = 3lc3
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
      
      
      
   	
   	
   	
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3lc3NoConj - V initial, comparative N, w/o Conj}
		V' = V (Art) {Deg/AdjP} N DP (Aux / V_1)
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
		&lt;V' option&gt; = 3lc3NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes'">
<xsl:text>
      rule {V' option 3ld1 - V initial, superlative Adj with degree words}
V' = V (Art) Deg AdjP (PP)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type superlative&gt; = +
      &lt;Deg head type comma&gt; = -
      &lt;Art head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
      &lt;V' option&gt; = 3ld1
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no'">
<xsl:text>
      rule {V' option 3ld2 - V initial, superlative Adj with degree affix}
 V' = V (Art) AdjP (PP)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;AdjP head type superlative&gt; = +
      &lt;Art head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
      &lt;V' option&gt; = 3ld2
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3ld3 - V initial, superlative N}
V' = V (Art) {Deg/AdjP} N (PP)
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type superlative&gt; = +
      &lt;AdjP head type superlative&gt; = +
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP head type suffix&gt;
      &lt;V' option&gt; = 3ld3
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
   
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3le1 - V initial, long comparative Adj with degree words}
 V' = V Deg AdjP Conj DP {Aux / V_1} AdjP_1
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
      &lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
      &lt;V' option&gt; = 3le1
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3le1Gap - V initial, long comparative Adj with degree words, w/ gap}
		V' = V Deg AdjP Conj DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3le1Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3le2 - V initial, long comparative Adj with degree affix}
 V' = V AdjP Conj DP {Aux / V_1} AdjP_1
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
      &lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
      &lt;V' option&gt; = 3le2
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3le2Gap - V initial, long comparative Adj with degree affix, w/ gap}
		V' = V AdjP Conj DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3le2Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3le1NoConj - V initial, long comparative Adj with degree words, w/o Conj}
		V' = V Deg AdjP DP {Aux / V_1} AdjP_1
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
		&lt;V' option&gt; = 3le1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3le1GapNoConj - V initial, long comparative Adj with degree words, w/ gap, w/o Conj}
		V' = V Deg AdjP DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3le1GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3le2NoConj - V initial, long comparative Adj with degree affix, w/o Conj}
		V' = V AdjP DP {Aux / V_1} AdjP_1
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
		&lt;V' option&gt; = 3le2NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3le2GapNoConj - V initial, long comparative Adj with degree affix, w/ gap, w/o Conj}
		V' = V AdjP DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3le2GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3lf1 - V initial, long comparative Adj with degree words, noncopular verb}
V' = V Deg AdjP Conj DP {Aux / V_1} AdjP_1
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
      &lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
      &lt;V' option&gt; = 3lf1
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3lf1Gap - V initial, long comparative Adj with degree words, noncopular verb, w/ gap}
		V' = V Deg AdjP Conj DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3lf1Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3lf2 - V initial, long comparative Adj with degree affix, noncopular verb}
V' = V AdjP Conj DP {Aux / V_1} AdjP_1 
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
      &lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
      &lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
      &lt;V' option&gt; = 3lf2
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3lf2Gap - V initial, long comparative Adj with degree affix, noncopular verb, w/ gap}
		V' = V AdjP Conj DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3lf2Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3lf1NoConj - V initial, long comparative Adj with degree words, noncopular verb, w/o Conj}
		V' = V Deg AdjP DP {Aux / V_1} AdjP_1
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
		&lt;V' option&gt; = 3lf1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3lf1GapNoConj - V initial, long comparative Adj with degree words, noncopular verb, w/ gap, w/o Conj}
		V' = V Deg AdjP DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3lf1GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3lf2NoConj - V initial, long comparative Adj with degree affix, noncopular verb, w/o Conj}
		V' = V AdjP DP {Aux / V_1} AdjP_1 
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;AdjP_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;AdjP_1 head type comma&gt;
		&lt;V' option&gt; = 3lf2NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3lf2GapNoConj - V initial, long comparative Adj with degree affix, noncopular verb, w/ gap, w/o Conj}
		V' = V AdjP DP {Aux / V_1}
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type suffix&gt; &lt;= &lt;Aux head type suffix&gt;
		&lt;V' head type suffix&gt; &lt;= &lt;V_1 head type suffix&gt;
		&lt;V' head type comma&gt; &lt;= &lt;Aux head type comma&gt;
		&lt;V' head type comma&gt; &lt;= &lt;V_1 head type comma&gt;
		&lt;V' option&gt; = 3lf2GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='yes'">
<xsl:text>
      rule {V' option 3ma - V final, comparative of equal nouns}
V' = (Aux / V_1) DP Conj N Deg (Art) V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type equalN&gt; = +
      &lt;Conj head type compareN&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;N head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
      &lt;V' option&gt; = 3ma
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='yes'">
<xsl:text>
		rule {V' option 3maCL - V final, comparative of equal nouns, Deg clitic on N}
		V' = (Aux / V_1) DP Conj N (Art) V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;N head type equalN&gt; = +
		&lt;Conj head type compareN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3maCL
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)='yes' and normalize-space(//ip/@compareN)='no'">
<xsl:text>
		rule {V' option 3maNoConj - V final, comparative of equal nouns, w/o Conj}
		V' = (Aux / V_1) DP N Deg (Art) V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;Deg head type equalN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3maNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@same)!='yes' and normalize-space(//ip/@compareN)='no'">
<xsl:text>
		rule {V' option 3maCLNoConj - V final, comparative of equal nouns, Deg clitic on N, w/o Conj}
		V' = (Aux / V_1) DP N (Art) V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = +
		&lt;N head type equalN&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3maCLNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='yes'">
<xsl:text>
      rule {V' option 3mb - V final, comparative of equal adjectives}
V' = (Aux / V_1) DP Conj AdjP Deg V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type equalAdj&gt; = +
      &lt;Conj head type compareAdj&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
      &lt;V' option&gt; = 3mb
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='yes'">
<xsl:text>
		rule {V' option 3mbNoDeg - V final, comparative of equal adjectives, w/o Deg}
		V' = (Aux / V_1) DP Conj AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Conj head type compareAdj&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mbNoDeg
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='yes' and normalize-space(//ip/@compareAdj)='no'">
<xsl:text>
		rule {V' option 3mbNoConj - V final, comparative of equal adjectives, w/o Conj}
		V' = (Aux / V_1) DP AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type equalAdj&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mbNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@as)='no' and normalize-space(//ip/@compareAdj)='no'">
<xsl:text>
		rule {V' option 3mbNoDegNoConj - V final, comparative of equal adjectives, w/o Deg, w/o Conj}
		V' = (Aux / V_1) DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mbNoDegNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3mc1 - V final, comparative Adj with degree words}
 V' = DP Conj AdjP Deg V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
      &lt;V' option&gt; = 3mc1
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3mc2 - V final, comparative Adj with degree affix}
V' = DP Conj AdjP V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;AdjP head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
      &lt;V' option&gt; = 3mc2
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   	
      
      
      
   	
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3mc1NoConj - V final, comparative Adj with degree words, w/o Conj}
		V' = DP AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mc1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3mc2NoConj - V final, comparative Adj with degree affix, w/o Conj}
		V' = DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mc2NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3mc3 - V final, comparative N}
V' = (Aux / V_1) DP Conj N {Deg/AdjP} (Art) V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;N head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
      &lt;V' option&gt; = 3mc3
   </xsl:text>
</xsl:if>
   
      
      
      
   	
   	
   	
      
      
      
   	
   	
   	
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3mc3NoConj - V final, comparative N, w/o Conj}
		V' = (Aux / V_1) DP N {Deg/AdjP} (Art) V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Art head type definite&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Art head type comma&gt; = -
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;N head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
		&lt;V' option&gt; = 3mc3NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes'">
<xsl:text>
      rule {V' option 3md1 - V final, superlative Adj with degree words}
V' = (PP) AdjP Deg (Art) V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type superlative&gt; = +
      &lt;Deg head type comma&gt; = -
      &lt;Art head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP head type prefix&gt;
      &lt;V' option&gt; = 3md1
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no'">
<xsl:text>
      rule {V' option 3md2 - V final, superlative Adj with degree affix}
V' = (PP) AdjP (Art) V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;AdjP head type superlative&gt; = +
      &lt;Art head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP head type prefix&gt;
      &lt;V' option&gt; = 3md2
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no'">
<xsl:text>
      rule {V' option 3md3 - V final, superlative N}
V' = (PP) N {Deg/AdjP} (Art) V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Art head type definite&gt; = +
      &lt;Deg head type superlative&gt; = +
      &lt;AdjP head type superlative&gt; = +
      &lt;Art head type comma&gt; = -
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;N head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;N head type prefix&gt;
      &lt;V' option&gt; = 3md3
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
   
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3me1 - V final, long comparative Adj with degree words}
V' = AdjP_1 {Aux / V_1} DP Conj AdjP Deg V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;AdjP_1 head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
    &lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
      &lt;V' option&gt; = 3me1
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3me1Gap - V final, long comparative Adj with degree words, w/ gap}
		V' = {Aux / V_1} DP Conj AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3me1Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3me2 - V final, long comparative Adj with degree affix}
V' =  AdjP_1 {Aux / V_1} DP Conj AdjP V
      &lt;V' head&gt; = &lt;V head&gt;
      {&lt;V head type copular&gt; = +
      / &lt;V head type perception&gt; = +}
      &lt;V head type transitive&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;V' head type motion&gt; = -
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;AdjP_1 head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;Aux head type comma&gt; = -
      &lt;V_1 head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
      &lt;V' option&gt; = 3me2
   </xsl:text>
</xsl:if>
   
      
      
      
      
   	
   	
   	
   	
      
      
      
      
   	
   	
   	
   	
      
      
      
      
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3me2Gap - V final, long comparative Adj with degree affix, w/ gap}
		V' =  {Aux / V_1} DP Conj AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3me2Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3me1NoConj - V final, long comparative Adj with degree words, w/o Conj}
		V' = AdjP_1 {Aux / V_1} DP AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;Conj head type comparativhead lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;AdjP_1 head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
		&lt;V' option&gt; = 3me1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3me1GapNoConj - V final, long comparative Adj with degree words, w/ gap, w/o Conj}
		V' = {Aux / V_1} DP Conj AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3me1GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3me2NoConj - V final, long comparative Adj with degree affix, w/o Conj}
		V' =  AdjP_1 {Aux / V_1} DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;AdjP_1 head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
		&lt;V' option&gt; = 3me2NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3me2GapNoConj - V final, long comparative Adj with degree affix, w/ gap, w/o Conj}
		V' =  {Aux / V_1} DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		{&lt;V head type copular&gt; = +
		/ &lt;V head type perception&gt; = +}
		&lt;V head type transitive&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;V' head type motion&gt; = -
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;Aux head type comma&gt; = -
		&lt;V_1 head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3me2GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3mf1 - V final, long comparative Adj with degree words, noncopular verb}
V' = AdjP_1 {Aux / V_1}  DP Conj AdjP Deg V
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;Deg head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;Deg head type comma&gt; = -
      &lt;AdjP head type comma&gt; = -
      &lt;AdjP_1 head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
      &lt;V' option&gt; = 3mf1
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   	
      
      
      
      
      
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3mf1Gap - V final, long comparative Adj with degree words, noncopular verb,w/ gap}
		V' = {Aux / V_1}  DP Conj AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf1Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes'">
<xsl:text>
      rule {V' option 3mf2 - V final, long comparative Adj with degree affix, noncopular verb}
V' = AdjP_1 {Aux / V_1} DP Conj AdjP V
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V head type copular&gt; = -
      &lt;V head type perception&gt; = -
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type question&gt; = -
      &lt;V' head infl valence&gt; = active
      &lt;AdjP head type comparative&gt; = +
      &lt;Conj head type comparative&gt; = +
      &lt;V head lex&gt; = &lt;V_1 head lex&gt;
      {&lt;V_1 head type copular&gt; = +
      / &lt;V_1 head type perception&gt; = +}
      &lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
      &lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
      &lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
      &lt;AdjP head type comma&gt; = -
      &lt;AdjP_1 head type comma&gt; = -
      &lt;Conj head type comma&gt; = -
      &lt;DP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
      &lt;V' option&gt; = 3mf2
   </xsl:text>
</xsl:if>
   
      
      
      
      
   	
   	
   	
   	
      
      
      
      
   	
   	
   	
   	
      
      
      
      
   	
   	
   	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='yes' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3mf2Gap - V final, long comparative Adj with degree affix, noncopular verb, w/ gap}
		V' = {Aux / V_1} DP Conj AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;Conj head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;Conj head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf2Gap
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3mf1NoConj - V final, long comparative Adj with degree words, noncopular verb, w/o Conj}
		V' = AdjP_1 {Aux / V_1}  DP AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;AdjP_1 head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf1NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='yes' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3mf1GapNoConj - V final, long comparative Adj with degree words, noncopular verb,w/ gap, w/o Conj}
		V' = {Aux / V_1}  DP AdjP Deg V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;Deg head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;Deg head type comma&gt; = -
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf1GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no'">
<xsl:text>
		rule {V' option 3mf2NoConj - V final, long comparative Adj with degree affix, noncopular verb, w/o Conj}
		V' = AdjP_1 {Aux / V_1} DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;AdjP head lex&gt; = &lt;AdjP_1 head lex&gt;
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;AdjP_1 head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;AdjP_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf2NoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@comparativeAdj)!='no' and normalize-space(//ip/@comparative)='no' and normalize-space(//ip/@gap)='yes'">
<xsl:text>
		rule {V' option 3mf2GapNoConj - V final, long comparative Adj with degree affix, noncopular verb, w/ gap, w/o Conj}
		V' = {Aux / V_1} DP AdjP V
		&lt;V' head&gt; = &lt;V head&gt;
		&lt;V head type copular&gt; = -
		&lt;V head type perception&gt; = -
		&lt;V' head type pro-drop&gt; = -
		&lt;V' head type question&gt; = -
		&lt;V' head infl valence&gt; = active
		&lt;AdjP head type comparative&gt; = +
		&lt;V head lex&gt; = &lt;V_1 head lex&gt;
		{&lt;V_1 head type copular&gt; = +
		/ &lt;V_1 head type perception&gt; = +}
		&lt;DP head agr number&gt; = &lt;V_1 head subject head agr number&gt;
		&lt;DP head agr number&gt; = &lt;Aux head subject head agr number&gt;
		&lt;AdjP head type comma&gt; = -
		&lt;DP head type comma&gt; = -
		&lt;V' head type prefix&gt; &lt;= &lt;Aux head type prefix&gt;
		&lt;V' head type prefix&gt; &lt;= &lt;V_1 head type prefix&gt;
		&lt;V' option&gt; = 3mf2GapNoConj
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4a - V initial, transitive (accusative case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4aNegObjVerbRequired - V initial, transitive (accusative case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4b - V initial, transitive (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4bNegObjVerbRequired - V initial, transitive (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	

		<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4aAppl - V initial, applicative (accusative case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4aNegObjVerbRequiredAppl - V initial, applicative (accusative case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aNegObjVerbRequiredAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4bAppl - V initial, applicative (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4bNegObjVerbRequiredAppl - V initial, applicative (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bNegObjVerbRequiredAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	


	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4c - V final, transitive (accusative case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4cNegObjVerbRequired - V final, transitive (accusative case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4d - V final, transitive (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 4dNegObjVerbRequired - V final, transitive (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	

		<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4cAppl - V final, applicative (accusative case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4cNegObjVerbRequiredAppl - V final, applicative (accusative case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cNegObjVerbRequiredAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4dAppl - V final, applicative (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4dNegObjVerbRequiredAppl - V final, applicative (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dNegObjVerbRequiredAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
	   
	    
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		 
	


	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5a - V initial, ditransitive with PP (accusative object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | onl  in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5aNegObjVerbRequired - V initial, ditransitive with PP (accusative object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5aNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5b - V initial, ditransitive with PP (absolutive object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5bNegObjVerbRequired - V initial, ditransitive with PP (absolutive object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5bNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5c - V final, ditransitive with PP (accusative object)}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5cNegObjVerbRequired - V final, ditransitive with PP (accusative object)}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5cNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5d - V final, ditransitive with PP (absolutive object)}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 5dNegObjVerbRequired - V final, ditransitive with PP (absolutive object)}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5dNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6a - V initial, ditransitive with DP (accusative object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
	&lt;DP_2 head&gt; == ~[case:nominative]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6aNegObjVerbRequired - V initial, ditransitive with DP (accusative object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
	&lt;DP_2 head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6aNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6b - V initial, ditransitive with DP (absolutive object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = absolutive
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6bNegObjVerbRequired - V initial, ditransitive with DP (absolutive object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = absolutive
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6bNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6c - V final, ditransitive with DP (accusative object)}
V' = DP_1 DP_2 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_2 head&gt; == ~[case:nominative]
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6cNegObjVerbRequired - V final, ditransitive with DP (accusative object)}
V' = DP_1 DP_2 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = accusative
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;DP_2 head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6cNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6d - V final, ditransitive with DP (absolutive object)}
V' = DP_2 DP_1 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = absolutive
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 6dNegObjVerbRequired - V final, ditransitive with DP (absolutive object)}
V' = DP_2 DP_1 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	&lt;DP_1 head case&gt; = absolutive
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6dNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
   
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes'">
<xsl:text>
rule {VBar option 7a - V initial/final, passive, no ditrans, no Agent phrase}
V' = V 
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7a
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7b - V initial, passive, with PP Agent phrase, no ditrans}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7b
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7bNegSubj - V initial, passive, with PP Agent phrase, no ditrans}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7bNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7bPP - V initial, passive, with PP Agent phrase, PP ditrans}
V' = V PP PP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7bPP
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)='no' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7bPPNegSubj - V initial, passive, with PP Agent phrase, PP ditrans}
V' = V PP PP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7bPPNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7bPPNegObj - V initial, passive, with PP Agent phrase, PP ditrans}
V' = V PP PP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7bPPNegObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negObjVerbRequired)!='no' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7bPPNegSubjorObj - V initial, passive, with PP Agent phrase, PP ditrans}
V' = V PP PP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V head type comma&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7bPPNegSubjorObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7c - V initial, passive, with DP Agent phrase, no ditrans}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7cNegSubj - V initial, passive, with DP Agent phrase, no ditrans}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7cNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7cDP - V initial, passive, with DP Agent phrase, DP ditrans}
V' = V DP DP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7cDP
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7cDPNegSubj - V initial, passive, with DP Agent phrase, DP ditrans}
V' = V DP DP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7cDPNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7cDPNegObj - V initial, passive, with DP Agent phrase, DP ditrans}
V' = V DP DP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7cDPNegObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7cDPNegSubjorObj - V initial, passive, with DP Agent phrase, DP ditrans}
V' = V DP DP_1
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7cDPNegSubjorObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7d - V final, passive, with PP Agent phrase, no ditrans}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7dNegSubj - V final, passive, with PP Agent phrase, no ditrans}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7dNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7dPP - V final, passive, with PP Agent phrase, PP ditrans}
V' = PP_1 PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;PP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7dPP
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7dPPNegSubj - V final, passive, with PP Agent phrase, PP ditrans}
V' = PP_1 PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;PP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7dPPNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7dPPNegObj - V final, passive, with PP Agent phrase, PP ditrans}
V' = PP_1 PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;PP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7dPPNegObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7dPPNegSubjorObj - V final, passive, with PP Agent phrase, PP ditrans}
V' = PP_1 PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;PP head object&gt;
	&lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head infl valence&gt; = passive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;PP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
 	&lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7dPPNegSubjorObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7e - V final, passive, with DP Agent phrase, no ditrans}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7e
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes'">
<xsl:text>
rule {VBar option 7eNegSubj - V final, passive, with DP Agent phrase, no ditrans}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7eNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7eDP - V final, passive, with DP Agent phrase, DP ditrans}
V' = DP_1 DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7eDP
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)='no'">
<xsl:text>
rule {VBar option 7eDPNegSubj - V final, passive, with DP Agent phrase, DP ditrans}
V' = DP_1 DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7eDPNegSubj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='no' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7eDPNegObj - V final, passive, with DP Agent phrase, DP ditrans}
V' = DP_1 DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 7eDPNegObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@negSubjVerbRequired)='yes' and normalize-space(//neg/@negObjVerbRequired)!='no'">
<xsl:text>
rule {VBar option 7eDPNegSubjorObj - V final, passive, with DP Agent phrase, DP ditrans}
V' = DP_1 DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head infl valence&gt; = passive
	&lt;V head subject&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;DP_1&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;  | if subject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 7eDPNegSubjorObj
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
   
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8a - V initial, sentential complement}
V' = V {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V head type motion&gt; = -
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8a
</xsl:text>
</xsl:if>
	
		
		
		
	   
	    
	   
		
		
		
	   
	    
	   
		
		
		
	   
	    

		
		
		
		
		 
		
		 
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8aoacc - V initial, accusative object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = accusative
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoacc
</xsl:text>
</xsl:if>
	
	   
		
		
		
		
		
		
	   
	    
	   
	   
		
		
		
		
		
		
	   
	    
	   
	   
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8aoaccNegObjVerbRequired - V initial, accusative object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = accusative
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoaccNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {V' option 8aoabs - V initial, absolutive object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = absolutive
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoabs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {V' option 8aoabsNegObjVerbRequired - V initial, absolutive object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = absolutive
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoabNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8b - V final, sentential complement}
V' = {CP / IP} V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8b
</xsl:text>
</xsl:if>
	
		
		
		
	   
	    
	   
		
		
		
	   
	    
	   
		
		
		
	   
	    

		
		
		
		
		 
		
		 
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8boacc - V final, accusative object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = accusative
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boacc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8boaccNegObjVerbRequired - V final, accusative object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = accusative
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boaccNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8boabs - V final, absolutive object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = absolutive
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boabs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 8boabsNegObjVerbRequired - V final, absolutive object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head case&gt; = absolutive
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boabsNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9a - V initial/final, object questioned (accusative object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted head case&gt; = accusative
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head type question&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9a
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9aFoc - V initial/final, object focused (accusative object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted head case&gt; = accusative
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head type question&gt; = -
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9aFoc
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9b - V initial/final, object questioned (absolutive object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head type question&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9b
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9bFoc - V initial/final, object focused (absolutive object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V' head fronted head type wh&gt; = -
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head type question&gt; = -
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9bFoc
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
	    
	   
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9c - V initial, ditransitive with PP, accusative object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9c
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9cFoc - V initial, ditransitive with PP, accusative object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9cFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9cNegObjVerbRequired - V initial, ditransitive with PP, accusative object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9cNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9cNegObjVerbRequiredFoc - V initial, ditransitive with PP, accusative object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9cNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9d - V initial, ditransitive with PP, absolutive object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9d
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9dFoc - V initial, ditransitive with PP, absolutive object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9dFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9dNegObjVerbRequired - V initial, ditransitive with PP, absolutive object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9dNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9dNegObjVerbRequiredFoc - V initial, ditransitive with PP, absolutive object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9dNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9e - V final, ditransitive with PP, accusative object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9e
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9eFoc - V final, ditransitive with PP, accusative object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9eFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9eNegObjVerbRequired - V final, ditransitive with PP, accusative object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9eNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9eNegObjVerbRequiredFoc - V final, ditransitive with PP, accusative object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9eNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9f - V final, ditransitive with PP, absolutive object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9f
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9fFoc - V final, ditransitive with PP, absolutive object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9fFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9fNegObjVerbRequired - V final, ditransitive with PP, absolutive object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9fNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9fNegObjVerbRequiredFoc - V final, ditransitive with PP, absolutive object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9fNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9g - V initial, ditransitive with DP, accusative object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9g
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9gFoc - V initial, ditransitive with DP, accusative object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9gFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9gNegObjVerbRequired - V initial, ditransitive with DP, accusative object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9gNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9gNegObjVerbRequiredFoc - V initial, ditransitive with DP, accusative object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9gNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9h - V initial, ditransitive with DP, absolutive object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9h
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9hFoc - V initial, ditransitive with DP, absolutive object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9hFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9hNegObjVerbRequired - V initial, ditransitive with DP, absolutive object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9hNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9hNegObjVerbRequiredFoc - V initial, ditransitive with DP, absolutive object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9hNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9i - V final, ditransitive with DP, accusative object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9i
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9iFoc - V final, ditransitive with DP, accusative object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9iFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9iNegObjVerbRequired - V final, ditransitive with DP, accusative object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9iNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9iNegObjVerbRequiredFoc - V final, ditransitive with DP, accusative object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = accusative
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9iNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9j - V final, ditransitive with DP, absolutive object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9j
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9jFoc - V final, ditransitive with DP, absolutive object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9jFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9jNegObjVerbRequired - V final, ditransitive with DP, absolutive object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9jNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9jNegObjVerbRequiredFoc - V final, ditransitive with DP, absolutive object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	&lt;V' head fronted head case&gt; = absolutive
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9jNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9k - V initial, ditransitive with PP (accusative object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9k
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9kFoc - V initial, ditransitive with PP (accusative object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9kFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9kNegObjVerbRequired - V initial, ditransitive with PP (accusative object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9kNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9kNegObjVerbRequiredFoc - V initial, ditransitive with PP (accusative object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9kNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9l - V initial, ditransitive with PP (absolutive object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9ld
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9lFoc - V initial, ditransitive with PP (absolutive object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9ldFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9lNegObjVerbRequired - V initial, ditransitive with PP (absolutive object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9lNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9lNegObjVerbRequiredFoc - V initial, ditransitive with PP (absolutive object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9lNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9m - V final, ditransitive with PP (accusative object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9m
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9mFoc - V final, ditransitive with PP (accusative object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9mFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9mNegObjVerbRequired - V final, ditransitive with PP (accusative object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9mNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9mNegObjVerbRequiredFoc - V final, ditransitive with PP (accusative object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9mNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9n - V final, ditransitive with PP (absolutive object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9n
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
                      
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9nFoc - V final, ditransitive with PP (absolutive object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9nFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9nNegObjVerbRequired - V final, ditransitive with PP (absolutive object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9nNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9nNegObjVerbRequiredFoc - V final, ditransitive with PP (absolutive object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9nNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9o - V initial, ditransitive with PP questioned (accusative object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  accusative
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9o
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9oNegObjVerbRequired - V initial, ditransitive with PP questioned (accusative object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  accusative
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9oNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9p - V initial, ditransitive with PP questioned (absolutive object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  absolutive
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9p
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9pNegObjVerbRequired - V initial, ditransitive with PP questioned (absolutive object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  absolutive
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9pNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9q - V final, ditransitive with PP questioned (accusative object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  accusative
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9q
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9qNegObjVerbRequired - V final, ditransitive with PP questioned (accusative object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  accusative
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9qNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9r - V final, ditransitive with PP questioned (absolutive object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  absolutive
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9r
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9rNegObjVerbRequired - V final, ditransitive with PP questioned (absolutive object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	&lt;DP head case&gt; =  absolutive
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9rNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9s - V initial, ditransitive with DP (accusative object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9s
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9sFoc - V initial, ditransitive with DP (accusative object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9sFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9sNegObjVerbRequired - V initial, ditransitive with DP (accusative object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9sNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9sNegObjVerbRequiredFoc - V initial, ditransitive with DP (accusative object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9sNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9t - V initial, ditransitive with DP (absolutive object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9t
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9tFoc - V initial, ditransitive with DP (absolutive object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9tFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9tNegObjVerbRequired - V initial, ditransitive with DP (absolutive object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9tNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9tNegObjVerbRequiredFoc - V initial, ditransitive with DP (absolutive object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9tNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9u - V final, ditransitive with DP (accusative object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9u
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
				
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9uFoc - V final, ditransitive with DP (accusative object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' option&gt; = 9uFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9uNegObjVerbRequired - V final, ditransitive with DP (accusative object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9uNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9uNegObjVerbRequiredFoc - V final, ditransitive with DP (accusative object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = accusative
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;DP head&gt; == ~[case:nominative]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9uNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9v - V final, ditransitive with DP (absolutive object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9v
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9vFoc - V final, ditransitive with DP (absolutive object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9vFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9vNegObjVerbRequired - V final, ditransitive with DP (absolutive object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9vNegObjVerbRequired
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VBar option 9vNegObjVerbRequiredFoc - V final, ditransitive with DP (absolutive object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head fronted head case&gt; = absolutive
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9vNegObjVerbRequiredFoc
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	    

		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
		
		
		
		
		
		
		
		
		
		
		
		 
		
		 
	

   
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4aVNom - V initial, transitive}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4aNegObjVerbRequiredVNom - V initial, transitive}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4bVAbs - V initial, transitive (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4bNegObjVerbRequiredVAbs - V initial, transitive (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4cVNom - V final, transitive}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4cNegObjVerbRequiredVNom - V final, transitive}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4dVAbs - V final, transitive (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 4dNegObjVerbRequiredVAbs - V final, transitive (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	{&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = active
	/&lt;V head type transitive&gt; = -
	&lt;V head infl valence&gt; = causative
	}
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	

	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4aVNomAppl - V initial, applicative}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aVNomAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4aNegObjVerbRequiredVNomAppl - V initial, applicative}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4aNegObjVerbRequiredVNomAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4bVAbsAppl - V initial, applicative (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bVAbsAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4bNegObjVerbRequiredVAbsAppl - V initial, applicative (absolutive case object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4bNegObjVerbRequiredVAbsAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4cVNomAppl - V final, applicative}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cVNomAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4cNegObjVerbRequiredVNomAppl - V final, applicative}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4cNegObjVerbRequiredVNomAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4dVAbsAppl - V final, applicative (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dVAbsAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@applicative)='yes'">
<xsl:text>
rule {VBar option 4dNegObjVerbRequiredVAbsAppl - V final, applcative (absolutive case object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head infl valence&gt; = applicative
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head type motion&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 4dNegObjVerbRequiredVAbsAppl
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
	

	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5aVNom - V initial, ditransitive with PP}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | onl  in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5aVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5aNegObjVerbRequiredVNom - V initial, ditransitive with PP (accusative object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5aNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5bVAbs - V initial, ditransitive with PP (absolutive object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5bVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5bNegObjVerbRequiredVAbs - V initial, ditransitive with PP (absolutive object)}
V' = V DP PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5bNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5cVNom - V final, ditransitive with PP}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5cVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5cNegObjVerbRequiredVNom - V final, ditransitive with PP}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5cNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5dVAbs - V final, ditransitive with PP (absolutive object)}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5dVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 5dNegObjVerbRequiredVAbs - V final, ditransitive with PP}
V' = PP DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 5dNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6aVNom - V initial, ditransitive with DP}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = nominative
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6aVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6aNegObjVerbRequiredVNom - V initial, ditransitive with DP}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = nominative
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6aNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6bVAbs - V initial, ditransitive with DP (absolutive object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = absolutive
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = absolutive
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6bVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6bNegObjVerbRequiredVAbs - V initial, ditransitive with DP (absolutive object)}
V' = V DP_1 DP_2
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = absolutive
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = absolutive
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP_2 head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP_2 head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6bNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6cVNom - V final, ditransitive with DP}
V' = DP_1 DP_2 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = nominative
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6cVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6cNegObjVerbRequiredVNom - V final, ditransitive with DP}
V' = DP_1 DP_2 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = nominative
	&lt;DP_2 head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP_1 head case&gt; = genitive
	&lt;DP_2 head case&gt; = nominative
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6cNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6dVAbs - V final, ditransitive with DP (absolutive object)}
V' = DP_2 DP_1 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = absolutive
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = absolutive
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6dVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 6dNegObjVerbRequiredVAbs - V final, ditransitive with DP (absolutive object)}
V' = DP_2 DP_1 V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP_1&gt;
	&lt;V head indirectobject&gt; = &lt;DP_2&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V head type copular&gt; = -
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = absolutive
	&lt;DP_2 head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP_1 head case&gt; = ergative
	&lt;DP_2 head case&gt; = absolutive
	}
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_1 head type prefix poss&gt; = -
	&lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
	&lt;DP_2 head type prefix poss&gt; = -
	&lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_1 head type suffix copular&gt; = -
	&lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP_2 head type suffix copular&gt; = -
	&lt;DP_1 head type comma&gt; = -
	&lt;DP_2 head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 6dNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	

   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8aVNom - V initial, sentential complement}
V' = V {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V head type motion&gt; = -
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aVNom
</xsl:text>
</xsl:if>
	
		
		
		
	   
	   
	   
	   
	   
		
		
		
	   
	   
	   
	   
	   
		
		
		
	   
	   
	   
	   
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
      rule {VBar option 8aVAbs - V initial, sentential complement}
      V' = V {CP / IP}
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V embedded&gt; = &lt;CP&gt;
      &lt;V embedded&gt; = &lt;IP&gt;
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type auxiliary&gt; = +
      {&lt;V head infl voice&gt; = actor
      &lt;V head subject head case&gt; = absolutive
      /&lt;V head infl voice&gt; = {object dative locative instrumental goal}
      &lt;V head subject head case&gt; = ergative
      }
      &lt;CP head type root&gt; = -
      &lt;CP head type relative&gt; = -
      &lt;IP head type relative&gt; = -
      &lt;IP head fronted&gt; = none
      &lt;IP head type root&gt; = -
      &lt;IP head type question&gt; = -
      &lt;V head type sentential&gt; = +
      &lt;V head type transitive&gt; = +
      &lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
      &lt;V head type comma&gt; = -
      &lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
      &lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
      &lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
      &lt;V head type motion&gt; = -
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 8aVAbs
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8aoaccVNom - V initial, object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoaccVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8aoaccNegObjVerbRequiredVNom - V initial, object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoaccNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {V' option 8aoabsVAbs - V initial, absolutive object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoabsVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {V' option 8aoabsNegObjVerbRequiredVAbs - V initial, absolutive object with sentential complement}
V' = V DP {CP / IP}
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;V head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;CP head type comma&gt;
	&lt;V' head type comma&gt; &lt;= &lt;IP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8aoabNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8bVNom - V final, sentential complement}
V' = {CP / IP} V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8bVNom
</xsl:text>
</xsl:if>
	
		
		
		
	   
	   
	   
	   
	   
		
		
		
	   
	   
	   
	   
	   
		
		
		
	   
	   
	   
	   
	
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
      rule {VBar option 8bVAbs - V final, sentential complement}
      V' = {CP / IP} V
      &lt;V' head&gt; = &lt;V head&gt;
      &lt;V embedded&gt; = &lt;CP&gt;
      &lt;V embedded&gt; = &lt;IP&gt;
      &lt;V' head type pro-drop&gt; = -
      &lt;V' head type auxiliary&gt; = +
      {&lt;V head infl voice&gt; = actor
      &lt;V head subject head case&gt; = absolutive
      /&lt;V head infl voice&gt; = {object dative locative instrumental goal}
      &lt;V head subject head case&gt; = ergative
      }
      &lt;CP head type root&gt; = -
      &lt;CP head type relative&gt; = -
      &lt;IP head type relative&gt; = -
      &lt;IP head fronted&gt; = none
      &lt;IP head type root&gt; = -
      &lt;IP head type question&gt; = -
      &lt;V head type sentential&gt; = +
      &lt;V head type transitive&gt; = +
      &lt;V head object head type reflexive&gt; = -	| to eliminate ambiguity
      &lt;V head type motion&gt; = -
      &lt;CP head type comma&gt; = -
      &lt;IP head type comma&gt; = -
      &lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
      &lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
      &lt;V' head fronted&gt; == ~[cat:FocusP]
      &lt;V' option&gt; = 8bVAbs
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8boaccVNom - V final, object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;VP head fronted head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;VP head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boaccVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8boaccNegObjVerbRequiredVNom - V final, object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;VP head fronted head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;VP head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boaccNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8boabsVAbs - V final, absolutive object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boabsVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 8boabsNegObjVerbRequiredVAbs - V final, absolutive object with sentential complement}
V' = {CP / IP} DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V embedded&gt; = &lt;CP&gt;
	&lt;V embedded&gt; = &lt;IP&gt;
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;CP head type root&gt; = -
	&lt;CP head type relative&gt; = -
	&lt;IP head type relative&gt; = -
	&lt;IP head fronted&gt; = none
	&lt;IP head type root&gt; = -
	&lt;IP head type question&gt; = -
	&lt;V head type sentential_with_object&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type motion&gt; = -
	&lt;CP head type comma&gt; = -
	&lt;IP head type comma&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
	&lt;V' head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
 	 &lt;V' head fronted&gt; == ~[cat:FocusP]
	&lt;V' option&gt; = 8boabsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
   
   
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9aVNom - V initial/final, object questioned}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head type question&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9aVNom
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)!='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9aFocVNom - V initial/final, object focused}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head type question&gt; = -
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9aFocVNom
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//typology/@case)='split' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9bVAbs - V initial/final, object questioned (absolutive object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V' head fronted head type wh&gt; = +
	&lt;V' head fronted cat&gt; = DP
	&lt;V' head type question&gt; = +
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9bVAbs
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='ergative' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//typology/@case)='split' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9bFocVAbs - V initial/final, object focused (absolutive object)}
V' = V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V' head fronted head type wh&gt; = -
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V' head type question&gt; = -
	&lt;V head infl valence&gt; = {active causative applicative}
	&lt;V head type motion&gt; = -
	&lt;V' option&gt; = 9bFocVAbs
	</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
	   
	   
	   
	   
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9cVNom - V initial, ditransitive with PP, object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9cVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9cFocVNom - V initial, ditransitive with PP, object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9cFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9cNegObjVerbRequiredVNom - V initial, ditransitive with PP, object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9cNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9cNegObjVerbRequiredFocVNom - V initial, ditransitive with PP, object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9cNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9dVAbs - V initial, ditransitive with PP, absolutive object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9dVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9dFocVAbs - V initial, ditransitive with PP, absolutive object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9dFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9dNegObjVerbRequiredVAbs - V initial, ditransitive with PP, absolutive object questioned}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9dNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9dNegObjVerbRequiredFocVAbs - V initial, ditransitive with PP, absolutive object focused}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9dNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9eVNom - V final, ditransitive with PP, object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9eVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9eFocVNom - V final, ditransitive with PP, object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9eFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9eNegObjVerbRequiredVNom - V final, ditransitive with PP, object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9eNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9eNegObjVerbRequiredFocVNom - V final, ditransitive with PP, object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9eNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9fVAbs - V final, ditransitive with PP, absolutive object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9fVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9fFocVAbs - V final, ditransitive with PP, absolutive object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9fFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9fNegObjVerbRequiredVAbs - V final, ditransitive with PP, absolutive object questioned}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9fNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9fNegObjVerbRequiredFocVAbs - V final, ditransitive with PP, absolutive object focused}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9fNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9gVNom - V initial, ditransitive with DP, object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9gVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9gFocVNom - V initial, ditransitive with DP, object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9gFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9gNegObjVerbRequiredVNom - V initial, ditransitive with DP, object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9gNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9gNegObjVerbRequiredFocVNom - V initial, ditransitive with DP, object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9gNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9hVAbs - V initial, ditransitive with DP, absolutive object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9hVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9hFocVAbs - V initial, ditransitive with DP, absolutive object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9hFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9hNegObjVerbRequiredVAbs - V initial, ditransitive with DP, absolutive object questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9hNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9hNegObjVerbRequiredFocVAbs - V initial, ditransitive with DP, absolutive object focused}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9hNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9iVNom - V final, ditransitive with DP, object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9iVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9iFocVNom - V final, ditransitive with DP, object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9iFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9iNegObjVerbRequiredVNom - V final, ditransitive with DP, object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9iNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9iNegObjVerbRequiredFocVNom - V final, ditransitive with DP, object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9iNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9jVAbs - V final, ditransitive with DP, absolutive object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9jVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9jFocVAbs - V final, ditransitive with DP, absolutive object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9jFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9jNegObjVerbRequiredVAbs - V final, ditransitive with DP, absolutive object questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = DP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = +
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9jNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9jNegObjVerbRequiredFocVAbs - V final, ditransitive with DP, absolutive object focused}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head fronted cat&gt; = FocusP 
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V' head type question&gt; = -
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9jNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9kVNom - V initial, ditransitive with PP (object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9kVnom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9kFocVNom - V initial, ditransitive with PP (object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9kFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9kNegObjVerbRequiredVNom - V initial, ditransitive with PP (object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9kNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9kNegObjVerbRequiredFocVNom - V initial, ditransitive with PP (object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9kNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9lVAbs - V initial, ditransitive with PP (absolutive object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9ldVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9lFocVAbs - V initial, ditransitive with PP (absolutive object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' option&gt; = 9ldFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9lNegObjVerbRequiredVAbs - V initial, ditransitive with PP (absolutive object questioned)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9lNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9lNegObjVerbRequiredFocVAbs - V initial, ditransitive with PP (absolutive object focused)}
V' = V PP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;PP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9lNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9mVNom - V final, ditransitive with PP (object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9mVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9mFocVNom - V final, ditransitive with PP (object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9mFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9mNegObjVerbRequiredVNom - V final, ditransitive with PP (object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9mNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9mNegObjVerbRequiredFocVNom - V final, ditransitive with PP (object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9mNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9nVAbs - V final, ditransitive with PP (absolutive object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9nVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
                      
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9nFocVAbs - V final, ditransitive with PP (absolutive object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' option&gt; = 9nFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9nNegObjVerbRequiredVAbs - V final, ditransitive with PP (absolutive object questioned)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = +
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9nNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9nNegObjVerbRequiredFocVAbs - V final, ditransitive with PP (absolutive object focused)}
V' = PP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	&lt;V head indirectobject&gt; = &lt;PP head object&gt;
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject  head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	}
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;V' head type question&gt; = -
	&lt;PP head type sentential&gt; = -
	&lt;PP head type suffix poss&gt; = -         | only in possessor position
	&lt;PP head type prefix poss&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;PP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9nNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9oVNom - V initial, ditransitive with PP questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9oVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9oNegObjVerbRequiredVNom - V initial, ditransitive with PP questioned}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9oNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9pVAbs - V initial, ditransitive with PP questioned (absolutive object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9pVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9pNegObjVerbRequiredVAbs - V initial, ditransitive with PP questioned (absolutive object)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9pNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9qVNom - V final, ditransitive with PP questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9qVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9qNegObjVerbRequiredVNom - V final, ditransitive with PP questioned}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;DP head case&gt; = genitive
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9qNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9rVAbs - V final, ditransitive with PP questioned (absolutive object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9rVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='pp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9rNegObjVerbRequiredVAbs - V final, ditransitive with PP questioned (absolutive object)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;DP&gt;
	&lt;V' head fronted cat&gt; = PP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;DP head case&gt; = ergative
	/&lt;V head infl voice&gt; = {object dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V' head type question&gt; = +
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;  | if object negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9rNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9sVNom - V initial, ditransitive with DP (object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9sVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9sFocVNom - V initial, ditransitive with DP (object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9sFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9sNegObjVerbRequiredVNom - V initial, ditransitive with DP (object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9sNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9sNegObjVerbRequiredFocVNom - V initial, ditransitive with DP (object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9sNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9tVAbs - V initial, ditransitive with DP (absolutive object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9tVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9tFocVAbs - V initial, ditransitive with DP (absolutive object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' option&gt; = 9tFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9tNegObjVerbRequiredVAbs - V initial, ditransitive with DP (absolutive object questioned)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9tNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9tNegObjVerbRequiredFocVAbs - V initial, ditransitive with DP (absolutive object focused)}
V' = V DP
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;V head type comma&gt; = -
	&lt;V' head type comma&gt; &lt;= &lt;DP head type comma&gt;
	&lt;V' head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9tNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9uVNom - V final, ditransitive with DP (object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9uVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9uFocVNom - V final, ditransitive with DP (object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9uFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9uNegObjVerbRequiredVNom - V final, ditransitive with DP (object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9uNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9uNegObjVerbRequiredFocVNom - V final, ditransitive with DP (object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = nominative
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = nominative
	&lt;DP head case&gt; = {genitive dative}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = genitive
	&lt;V head fronted head case&gt; = genitive
	&lt;DP head case&gt; = nominative
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9uNegObjVerbRequiredFocVNom
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9vVAbs - V final, ditransitive with DP (absolutive object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9vVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9vFocVAbs - V final, ditransitive with DP (absolutive object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' option&gt; = 9vFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9vNegObjVerbRequiredVAbs - V final, ditransitive with DP (absolutive object questioned)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = DP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = +
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9vNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	
	<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxNonfiniteOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/@auxOtherOrder)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//focus/@focus)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VBar option 9vNegObjVerbRequiredFocVAbs - V final, ditransitive with DP (absolutive object focused)}
V' = DP V
	&lt;V' head&gt; = &lt;V head&gt;
	&lt;V head object&gt; = &lt;V' head fronted&gt;
	&lt;V' head fronted cat&gt; = FocusP
	{&lt;V head infl voice&gt; = actor
	&lt;V head subject head case&gt; = absolutive
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = object
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = absolutive
	&lt;DP head case&gt; = {dative oblique}
	/&lt;V head infl voice&gt; = {dative locative instrumental goal}
	&lt;V head subject head case&gt; = ergative
	&lt;V head fronted head case&gt; = ergative
	&lt;DP head case&gt; = absolutive
	}
	&lt;V head indirectobject&gt; = &lt;DP&gt;
	&lt;V head type ditransitive&gt; = +
	&lt;V head type transitive&gt; = +
	&lt;V head type copular&gt; = -
	&lt;V' head type question&gt; = -
	&lt;V' head type pro-drop&gt; = -
	&lt;V' head type auxiliary&gt; = +
	&lt;DP head type suffix poss&gt; = -         | only in possessor position
	&lt;DP head type prefix poss&gt; = -
	&lt;DP head type prefix copular&gt; = -    | only in no V/Aux copulars
	&lt;DP head type suffix copular&gt; = -
	&lt;V' head infl valence&gt; = {active causative applicative}
	&lt;DP head type comma&gt; = -
	&lt;V' head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
	&lt;V' head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  | if indirectobject negative, V' must be 
                     [infl:[polarity:negative]]
	&lt;V' option&gt; = 9vNegObjVerbRequiredFocVAbs
</xsl:text>
</xsl:if>
	
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	   
		
		
		
		
		
		
		
		
		
		
		
	   
	   
	   
	   
	


</xsl:template>
</xsl:stylesheet>

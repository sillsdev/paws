<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="/" mode="vpsentpass">
  
  <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8a - V initial, sentential complement}
VP = V {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8a
</xsl:text>
</xsl:if>
  
    
    
    
    
     

    
    
    
    
       
       
       
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8b - V final, sentential complement}
VP = {CP / IP} V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8b
</xsl:text>
</xsl:if>
  
    
    
     
  
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bQSubj - V final, sentential complement, subject questioned}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                  | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -               | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
     
  
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bQAdvP - V final, sentential complement, AdvP questioned}
VP = {CP / IP} AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
     
  
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aoacc - V initial, accusative object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aoacc
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     

    
    
    
    
     
    
     
  
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aoaccNegObjVerbRequired - V initial, accusative object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aoaccNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aoabs - V initial, absolutive object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aoabs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     

    
    
    
    
     
    
     

    
    
    
    
     
    
     

    
    
    
    
     
    
     
  
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aoabsNegObjVerbRequired - V initial, absolutive object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aoabsNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     

    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boacc - V final, accusative object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boacc
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     

    
    
    
    
     
    
     
  
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boaccNegObjVerbRequired - V final, accusative object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boaccQSubj - V final, sentential complement with accusative object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boaccQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boaccQSubjNegObjVerbRequired - V final, sentential complement with accusative object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boaccQAdvP - V final, sentential complement with accusative object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boaccQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boaccQAdvPNegObjVerbRequired - V final, sentential complement with accusative object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabs - V final, absolutive object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     

    
    
    
    
     
    
     

    
    
    
    
     
    
     

    
    
    
    
     
    
     
  
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabsNegObjVerbRequired - V final, absolutive object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     

    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabsQSubj - V final, sentential complement with absolutive object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabsQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabsQSubjNegObjVerbRequired - V final, sentential complement with absolutive object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabsQAdvP - V final, sentential complement with absolutive object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabsQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8boabsQAdvPNegObjVerbRequired - V final, sentential complement with absolutive object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aCaus - V initial, causative, accusative object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aCausNegObjVerbRequired - V initial, causative, accusative object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aCausAbs - V initial, causative, absolutive object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         

      
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8CausAbsNegObjVerbRequired - V initial, causative, absolutive object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausAbsNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         

      
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         

  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bCaus - V final, causative, accusative object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bCausNegObjVerbRequired - V final, causative, accusative object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bCausAbs - V final, causative, absolutive object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         

      
    
    
    
     
    
     
    
     

    
    
    
    
     
    
     
    
     
  
    
    
    
    
     
    
     
    
    
    
    
    
    
    
    
    
     
    
     
    
     
     
         

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bCausAbsNegObjVerbRequired - V final, causative, absolutive object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausAbsNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         

      
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
         

  
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechPPIP - V initial, speech verb with PP and IP complement}
VP = V PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
     

        
    
     

    
    
     
     
         

        
    
     
     
         
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechIP - V initial, speech_PP verb with IP complement}
VP = V IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechPPCP - V initial, speech verb with PP and CP +/-root complement}
VP = V PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechCP - V initial, speech_PP verb with CP +/-root complement}
VP = V CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechPPGreet - V initial, speech verb with PP and Greet complement}
VP = V PP Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechGreet - V initial, speech_PP verb with Greet complement}
VP = V Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechPPExcl - V initial, speech verb with PP and Excl complement}
VP = V PP (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechExcl - V initial, speech_PP verb with Excl complement}
VP = V (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechPPIntj - V initial, speech verb with PP and Intj complement}
VP = V PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechIntj - V initial, speech_PP verb with Intj complement}
VP = V Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPIP - V initial, indirect speech verb with accusative DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPIPNegObjVerbRequired - V initial, indirect speech verb with accusative DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPIPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
     

    
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPIPAbs - V initial, indirect speech verb with absolutive DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechDPIPAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     

      
    
    
    
     
    
     
    
    
    
    
    
     
    
     

    
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     

      
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPIPAbsNegObjVerbRequired - V initial, indirect speech verb with absolutive DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPIPAbsNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
     

      
    
    
    
    
    
     
    
    
    
    
    
    
    
     

    
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPCP - V initial, indirect speech verb with accusative DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8aSpeechDPCP
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPCPNegObjVerbRequired - V initial, indirect speech verb with accusative DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPCPAbs - V initial, indirect speech verb with absolutive DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8aSpeechDPCPAbs
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8aSpeechDPCPAbsNegObjVerbRequired - V initial, indirect speech verb with absolutive DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPCPAbsNegObjVerbRequired
</xsl:text>
</xsl:if>

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechPPIP - V final, speech verb with PP and IP complement}
VP = IP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
     

        
    
     

    
    
     
     
         

        
    
     
     
         
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechIP - V final, speech_PP verb with IP complement}
VP = IP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechPPCP - V final, speech verb with PP and CP +/-root complement}
VP = CP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechCP - V final, speech_PP verb with CP +/-root complement}
VP = CP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechPPGreet - V final, speech verb with PP and Greet complement}
VP = (DP) Greet PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechGreet - V final, speech_PP verb with Greet complement}
VP = (DP) Greet V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechPPExcl - V final, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP) PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechExcl - V final, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechPPIntj - V final, speech verb with PP and Intj complement}
VP = Intj PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechIntj - V final, speech_PP verb with Intj complement}
VP = Intj V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPIP - V final, indirect speech verb with accusative DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPIPNegObjVerbRequired - V final, indirect speech verb with accusative DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPIPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
     

    
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPIPAbs - V final, indirect speech verb with absolutive DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechDPIPAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    
    
    
    
    
     
    
     

      
    
    
    
     
    
     
    
    
    
    
    
     
    
     

    
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     

      
    
    
    
     
    
     
     
     
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPIPAbsNegObjVerbRequired - V final, indirect speech verb with absolutive DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPIPAbsNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
     

      
    
    
    
    
    
     
    
    
    
    
    
    
    
     

    
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
     
     
     
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPCP - V final, indirect speech verb with accusative DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8bSpeechDPCP
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPCPNegObjVerbRequired - V final, indirect speech verb with accusative DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = accusative
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPCPAbs - V final, indirect speech verb with absolutive DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8bSpeechDPCPAbs
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8bSpeechDPCPAbsNegObjVerbRequired - V final, indirect speech verb with absolutive DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP head case&gt; = absolutive
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPCPAbsNegObjVerbRequired
</xsl:text>
</xsl:if>
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8c - VSO with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8c
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cNegSubjVerbRequired - VSO with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes'">
<xsl:text>
rule {VP option 8ci - VSO with sentential complement, imperative}
VP = V {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8ci
</xsl:text>
</xsl:if>
  
    
    
    
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes'">
<xsl:text>
rule {VP option 8cp - VSO with sentential complement, pro-drop}
VP = V {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type verbheaded&gt; = +
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8cp
</xsl:text>
</xsl:if>
  
    
    
    

    
    
    
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8co - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8co
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8coNegSubjVerbRequired - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8coNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8coNegObjVerbRequired - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8coNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8coNegSubjorObjVerbRequired - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8coNegSubjorObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cIO - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cIO
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cIONegSubjVerbRequired - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cIONegSubjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cIONegObjVerbRequired - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8cIONegObjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cIONegSubjOrObjVerbRequired - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8cIONegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cio - VSO object with sentential complement, imperative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cio
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cioNegObjVerbRequired - VSO object with sentential complement, imperative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cioNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cpo - VSO object with sentential complement, pro-drop}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8cpo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cpoNegObjVerbRequired - VSO object with sentential complement, pro-drop}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]]  | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8cpoNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8d - OSV with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8d
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dNegSubjVerbRequired - OSV with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes'">
<xsl:text>
rule {VP option 8di - OSV with sentential complement, imperative}
VP = {CP / IP} V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8di
</xsl:text>
</xsl:if>
  
    
    
    
  
    
    
    
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes'">
<xsl:text>
rule {VP option 8dp - OSV with sentential complement, pro-drop}
VP = {CP / IP} V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type verbheaded&gt; = +
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8dp
</xsl:text>
</xsl:if>
  
    
    
    

    
    
    
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8do - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8do
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8doNegSubjVerbRequired - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8doNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8doNegObjVerbRequired - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8doNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8doNegSubjorObjVerbRequired - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = accusative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8doNegSubjorObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dIO - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dIO
</xsl:text>
</xsl:if>
  
    
    
    
    
    
  
  
  
  
    
     
  
    
    
    
    
    
  
  
  
  
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dIONegSubjVerbRequired - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dIONegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dIONegObjVerbRequired - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8dIONegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dIONegSubjOrObjVerbRequired - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8dIONegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dio - OSV object with sentential complement, imperative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dio
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dioNegObjVerbRequired - OSV object with sentential complement, imperative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dioNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dpo - OSV object with sentential complement, pro-drop}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8dpo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dpoNegObjVerbRequired - OSV object with sentential complement, pro-drop}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8dpoNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8e - VSO with sentential complement, ergative}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8e
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eNegSubjVerbRequired - VSO with sentential complement, ergative}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eo - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eoNegSubjVerbRequired - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eoNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eoNegObjVerbRequired - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eoNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eoNegSubjorObjVerbRequired - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eoNegSubjorObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eIO - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
|         &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eIO
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eIONegSubjVerbRequired - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
|         &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eIONegSubjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

    
    
    
    
    
    
     
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eIONegObjVerbRequired - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
|         &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8eIONegObjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eIONegSubjOrObjVerbRequired - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
|         &lt;DP_1 head case&gt; = dative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8eIONegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

    
    
    
    
    
    
    
       
        

  
  
  
  
  
  
  
  
  
  
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eio - VSO object with sentential complement, imperative, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eio
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eioNegObjVerbRequired - VSO object with sentential complement, imperative, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eioNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8epo - VSO object with sentential complement, pro-drop, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8epo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8epoNegObjVerbRequired - VSO object with sentential complement, pro-drop, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8epoNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
  
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8f - OSV with sentential complement, ergative}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative                     | assume like transitive
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8f
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fNegSubjVerbRequired - OSV with sentential complement, ergative}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative                     | assume like transitive
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fo - OSV object with sentential complement, ergative}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative     
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8foNegSubjVerbRequired - OSV object with sentential complement, ergative}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative     
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8foNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8foNegObjVerbRequired - OSV object with sentential complement, ergative}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative     
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8foNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8foNegSubjorObjVerbRequired - OSV object with sentential complement, ergative}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative     
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8foNegSubjorObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fIO - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fIO
</xsl:text>
</xsl:if>
  
    
    
    
    
    
  
  
  
  
    
     
  
    
    
    
    
    
  
  
  
  
    
     
     
     

      
    
    
    
    
  
  
  
  
    
     
  
    
    
    
    
    
  
  
  
  
    
     
     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fIONegSubjVerbRequired - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fIONegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
     
     
     

      
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
     
     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fIONegObjVerbRequired - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8fIONegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fIONegSubjOrObjVerbRequired - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8fIONegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
     
     
     


  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fio - OSV object with sentential complement, imperative, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fio
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fioNegObjVerbRequired - OSV object with sentential complement, imperative, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fioNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fpo - OSV object with sentential complement, pro-drop, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8fpo
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     

    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
    
     
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fpoNegObjVerbRequired - OSV object with sentential complement, pro-drop, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8fpoNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
   

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cCaus - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8cCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cCausNegSubjVerbRequired - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cCausNegSubjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cCausNegObjVerbRequired - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cCausNegSubjOrObjVerbRequired - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cCausNegSubjOrObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dCaus - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8dCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dCausNegSubjVerbRequired - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dCausNegSubjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dCausNegObjVerbRequired - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dCausNegSubjOrObjVerbRequired - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = nominative
          &lt;DP head case&gt; = accusative
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dCausNegSubjOrObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eCaus - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8eCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

      
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eCausNegSubjVerbRequired - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eCausNegSubjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

      
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eCausNegObjVerbRequired - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eCausNegSubjOrObjVerbRequired - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eCausNegSubjOrObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    


  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fCaus - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8fCaus 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

      
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fCausNegSubjVerbRequired - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fCausNegSubjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

      
    
    
    
    
    
     
    
     
    
     
  
    
    
    
    
    
    
     
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fCausNegObjVerbRequired - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fCausNegObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fCausNegSubjOrObjVerbRequired - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
          &lt;DP_1 head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fCausNegSubjOrObjVerbRequired 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
    
    
     
    
    
    
    



<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPIP - VSO, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPIPNegSubjVerbRequired - VSO, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechIP - VSO, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechIPNegSubjVerbRequired - VSO, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPCP - VSO, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPCPNegSubjVerbRequired - VSO, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechCP - VSO, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechCPNegSubjVerbRequired - VSO, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPGreet - VSO, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPGreetNegSubjVerbRequired - VSO, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechGreet - VSO, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechGreetNegSubjVerbRequired - VSO, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPExcl - VSO, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPExclNegSubjVerbRequired - VSO, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechExcl - VSO, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechExclNegSubjVerbRequired - VSO, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPIntj - VSO, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechPPIntjNegSubjVerbRequired - VSO, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechIntj - VSO, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechIntjNegSubjVerbRequired - VSO, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPIP - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegSubjVerbRequired - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegObjVerbRequired - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegSubjOrObjVerbRequired - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPCP - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8cSpeechDPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegSubjVerbRequired - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegObjVerbRequired - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegSubjOrObjVerbRequired - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPIP - OSV, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPIPNegSubjVerbRequired - OSV, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechIP - OSV, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechIPNegSubjVerbRequired - OSV, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPCP - OSV, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPCPNegSubjVerbRequired - OSV, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechCP - OSV, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechCPNegSubjVerbRequired - OSV, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPGreet - OSV, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPGreetNegSubjVerbRequired - OSV, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechGreet - OSV, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechGreetNegSubjVerbRequired - OSV, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPExcl - OSV, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPExclNegSubjVerbRequired - OSV, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechExcl - OSV, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechExclNegSubjVerbRequired - OSV, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPIntj - OSV, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPIntjNegSubjVerbRequired - OSV, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechIntj - OSV, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechIntjNegSubjVerbRequired - OSV, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPIP - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegSubjVerbRequired - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegObjVerbRequired - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegSubjOrObjVerbRequired - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     
  

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPCP - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8dSpeechDPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegSubjVerbRequired - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegObjVerbRequired - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegSubjOrObjVerbRequired - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = accusative
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = nominative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPIP - VSO, ergative, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPIPNegSubjVerbRequired - VSO, ergative, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechIP - VSO, ergative, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechIPNegSubjVerbRequired - VSO, ergative, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPCP - VSO, ergative, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPCPNegSubjVerbRequired - VSO, ergative, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechCP - VSO, ergative, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]    
          &lt;VP option&gt; = 8eSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechCPNegSubjVerbRequired - VSO, ergative, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]    
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPGreet - VSO, ergative, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPGreetNegSubjVerbRequired - VSO, ergative, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechGreet - VSO, ergative, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechGreetNegSubjVerbRequired - VSO, ergative, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPExcl - VSO, ergative, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPExclNegSubjVerbRequired - VSO, ergative, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechExcl - VSO, ergative, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechExclNegSubjVerbRequired - VSO, ergative, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPIntj - VSO, ergative, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechPPIntjNegSubjVerbRequired - VSO, ergative, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechIntj - VSO, ergative, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechIntjNegSubjVerbRequired - VSO, ergative, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPIP - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

      
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegSubjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

      
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegObjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegSubjOrObjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     


<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPCP - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8eSpeechDPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegSubjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegObjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegSubjOrObjVerbRequired - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPIP - OSV, ergative, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechPPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPIPNegSubjVerbRequired - OSV, ergative, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
     
  
    
    
    
    
    
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechIP - OSV, ergative, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechIP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechIPNegSubjVerbRequired - OSV, ergative, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8dSpeechPPCP - OSV, ergative, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fSpeechPPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPCPNegSubjVerbRequired - OSV, ergative, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechCP - OSV, ergative, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fSpeechCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechCPNegSubjVerbRequired - OSV, ergative, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPGreet - OSV, ergative, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPGreetNegSubjVerbRequired - OSV, ergative, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechGreet - OSV, ergative, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechGreet
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechGreetNegSubjVerbRequired - OSV, ergative, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechGreetNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPExcl - OSV, ergative, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPExclNegSubjVerbRequired - OSV, ergative, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechExcl - OSV, ergative, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechExcl
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechExclNegSubjVerbRequired - OSV, ergative, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechExclNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPIntj - OSV, ergative, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechPPIntjNegSubjVerbRequired - OSV, ergative, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechIntj - OSV, ergtaive, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechIntj
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechIntjNegSubjVerbRequired - OSV, ergative, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechIntjNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPIP - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechDPIP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

      
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegSubjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

      
    
    
    
    
    
     
    
     
  
    
    
    
    
    
    
     
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegObjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegSubjOrObjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     

      
    
    
    
    
    
    
    
     
  
    
    
    
    
    
    
    
    
     
     
     


<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPCP - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8fSpeechDPCP
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegSubjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegSubjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegObjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegObjVerbRequired
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='no'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegSubjOrObjVerbRequired - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
          &lt;DP_1 head case&gt; = absolutive
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head case&gt; = ergative
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegSubjOrObjVerbRequired
</xsl:text>
</xsl:if>
  
  
  <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aVNom - V initial, sentential complement}
VP = V {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aVNom
</xsl:text>
</xsl:if>
  
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aVAbs - V initial, sentential complement}
VP = V {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aVAbs
</xsl:text>
</xsl:if>
   
      
      
      
      
      
     
     
   
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bVNom - V final, sentential complement}
VP = {CP / IP} V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bVNom
   </xsl:text>
</xsl:if>
   
      
      
      
     
     
      
      
      
      
     
     
      
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bVAbs - V final, sentential complement}
VP = {CP / IP} V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bVAbs
</xsl:text>
</xsl:if>
  
    
    

     
     

    


     
     
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bQSubjVNom - V final, sentential complement, subject questioned}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                  | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -               | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQSubjVNom
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
     
     
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bQSubjVAbs - V final, sentential complement, subject questioned}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                  | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -               | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQSubjVAbs
</xsl:text>
</xsl:if>
  
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bQAdvPVNom - V final, sentential complement, AdvP questioned}
VP = {CP / IP} AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQAdvPVNom
</xsl:text>
</xsl:if>
  
    
    
    


     
     
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bQAdvPVAbs - V final, sentential complement, AdvP questioned}
VP = {CP / IP} AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head object head type reflexive&gt; = -         | to eliminate ambiguity
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bQAdvPVAbs
   </xsl:text>
</xsl:if>
   
      
      
      
      
      
     
     
   
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aoaccVNom - V initial, object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aoaccVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
     


     
     

    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aoaccNegObjVerbRequiredVNom - V initial, object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aoaccNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aoabsVAbs - V initial, object with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aoabsVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    

     
     

    
    
    
    
     
    

     
     

    
    
    
    
     
    

     
     

    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aoabsNegObjVerbRequiredVAbs - V initial, object with sentential complement}
VP = V DP {CP / IP}
         &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aoabsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    
    

     
     

    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccVNom - V final, object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boaccVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
     


     
     

    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccNegObjVerbRequiredVNom - V final, object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;       | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccQSubjVNom - V final, sentential complement with object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boaccQSubjVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccQSubjNegObjVerbRequiredVNom - V final, sentential complement with object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccQSubjNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccQAdvPVNom - V final, sentential complement with object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boaccQAdvPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boaccQAdvPNegObjVerbRequiredVNom - V final, sentential complement with object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boaccQAdvPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsVAbs - V final, object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabsVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    

     
     

    
    
    
    
     
    

     
     

    
    
    
    
     
    

     
     

    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsNegObjVerbRequiredVAbs - V final, object with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                     | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                     | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                  | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt;     | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    
    

     
     

    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsQSubjVAbs - V final, sentential complement with object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabsQSubjVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsQSubjNegObjVerbRequiredVAbs - V final, sentential complement with object, subject questioned}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type prefix comp&gt; = -                        | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
         {&lt;DP_1 head type reflexive&gt; = -
         /&lt;DP_1 head type reflexive&gt; = +
          &lt;DP_1 head agr gender&gt; = &lt;DP head agr gender&gt;
          &lt;DP_1 head agr animacy&gt; = &lt;DP head agr animacy&gt;
          &lt;DP_1 head agr class&gt; = &lt;DP head agr class&gt;
         }
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsQSubjNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsQAdvPVAbs - V final, sentential complement with object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8boabsQAdvPVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8boabsQAdvPNegObjVerbRequiredVAbs - V final, sentential complement with object, AdvP questioned}
VP = {CP / IP} DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                  | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8boabsQAdvPNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  

  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aCausVNom - V initial, causative, accusative object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     


     
     

    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cCausNegObjVerbRequiredVNom - V initial, causative, accusative object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausNegObjVerbRequiredVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aCausVAbs - V initial, causative, absolutive object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausVAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    

     
     

    
    
    
    
     
    
     
    

     
     

      
    
    
    
     
    
     
    

     
     

    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8CausAbsNegObjVerbRequiredVAbs - V initial, causative, absolutive object with nonfinite complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8aCausAbsNegObjVerbRequiredVAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bCausVNom - V final, causative, accusative object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     


     
     

    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bCausNegObjVerbRequiredVNom - V final, causative, accusative object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausNegObjVerbRequiredVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bCausVAbs - V final, causative, absolutive object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausVAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
     
    
     
    

     
     

    
    
    
    
     
    
     
    

     
     

      
    
    
    
     
    
     
    

     
     

    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bCausAbsNegObjVerbRequiredVAbs - V final, causative, absolutive object with nonfinite complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                             |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP head type suffix poss&gt; = -                       | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                    | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8bCausAbsNegObjVerbRequiredVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

  
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPIPVNom - V initial, speech verb with PP and IP complement}
VP = V PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechPPIPVNom
</xsl:text>
</xsl:if>
  
    
      
      
     
     

        
      
      
     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPIPVAbs - V initial, speech verb with PP and IP complement}
VP = V PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechPPIPVAbs
</xsl:text>
</xsl:if>
  
    
      
      
     
     

        
      
      
     
     
  
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechIPVNom - V initial, speech_PP verb with IP complement}
VP = V IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechIPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechIPVAbs - V initial, speech_PP verb with IP complement}
VP = V IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechIPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPCPVNom - V initial, speech verb with PP and CP +/-root complement}
VP = V PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechPPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPCPVAbs - V initial, speech verb with PP and CP +/-root complement}
VP = V PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechPPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechCPVNom - V initial, speech_PP verb with CP +/-root complement}
VP = V CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechCPVAbs - V initial, speech_PP verb with CP +/-root complement}
VP = V CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8aSpeechCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPGreetVNom - V initial, speech verb with PP and Greet complement}
VP = V PP Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPGreetVAbs - V initial, speech verb with PP and Greet complement}
VP = V PP Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechGreetVNom - V initial, speech_PP verb with Greet complement}
VP = V Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechGreetVAbs - V initial, speech_PP verb with Greet complement}
VP = V Greet (DP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPExclVNom - V initial, speech verb with PP and Excl complement}
VP = V PP (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPExclVAbs - V initial, speech verb with PP and Excl complement}
VP = V PP (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechExclVNom - V initial, speech_PP verb with Excl complement}
VP = V (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechExclVAbs - V initial, speech_PP verb with Excl complement}
VP = V (DP) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Excl head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Excl head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPIntjVNom - V initial, speech verb with PP and Intj complement}
VP = V PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechPPIntjVAbs - V initial, speech verb with PP and Intj complement}
VP = V PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechPPIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechIntjVNom - V initial, speech_PP verb with Intj complement}
VP = V Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechIntjVAbs - V initial, speech_PP verb with Intj complement}
VP = V Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8aSpeechIntjVAbs
</xsl:text>
</xsl:if>
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPIPVNom - V initial, indirect speech verb with accusative DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechDPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
     


     
     
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPIPNegObjVerbRequiredVNom - V initial, indirect speech verb with accusative DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPIPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPIPAbsVAbs - V initial, indirect speech verb with absolutive DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8aSpeechDPIPAbsVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    

     
     
    
    
    
    
    
     
    

     
     

      
    
    
    
     
    

     
     
    
    
    
    
    
     
    

     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPIPAbsNegObjVerbRequiredVAbs - V initial, indirect speech verb with absolutive DP, IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPIPAbsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    

     
     
    
    
    
    
    
    
    

     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPCPVNom - V initial, indirect speech verb with accusative DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8aSpeechDPCPVNom
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPCPNegObjVerbRequiredVNom - V initial, indirect speech verb with accusative DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPCPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPCPAbsVAbs - V initial, indirect speech verb with absolutive DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8aSpeechDPCPAbsVAbs
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8aSpeechDPCPAbsNegObjVerbRequiredVAbs - V initial, indirect speech verb with absolutive DP, CP complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8aSpeechDPCPAbsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPIPVNom - V final, speech verb with PP and IP complement}
VP = IP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechPPIPVNom
</xsl:text>
</xsl:if>
  
    
      
      
     
     

        
      
      
     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPIPVAbs - V final, speech verb with PP and IP complement}
VP = IP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechPPIPVAbs
</xsl:text>
</xsl:if>
  
    
      
      
     
     

        
      
      
     
     
  
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechIPVNom - V final, speech_PP verb with IP complement}
VP = IP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechIPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechIPVAbs - V final, speech_PP verb with IP complement}
VP = IP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;IP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechIPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPCPVNom - V final, speech verb with PP and CP +/-root complement}
VP = CP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechPPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPCPVAbs - V final, speech verb with PP and CP +/-root complement}
VP = CP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechPPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechCPVNom - V final, speech_PP verb with CP +/-root complement}
VP = CP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;CP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechCPVAbs - V final, speech_PP verb with CP +/-root complement}
VP = CP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;CP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8bSpeechCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPGreetVNom - V final, speech verb with PP and Greet complement}
VP = (DP) Greet PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPGreetVAbs - V final, speech verb with PP and Greet complement}
VP = (DP) Greet PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechGreetVNom - V final, speech_PP verb with Greet complement}
VP = (DP) Greet V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Greet head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechGreetVAbs - V final, speech_PP verb with Greet complement}
VP = (DP) Greet V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Greet head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPExclVNom - V final, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP) PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPExclVAbs - V final, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP) PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechExclVNom - V final, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechExclVAbs - V final, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPIntjVNom - V final, speech verb with PP and Intj complement}
VP = Intj PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechPPIntjVAbs - V final, speech verb with PP and Intj complement}
VP = Intj PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechPPIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechIntjVNom - V final, speech_PP verb with Intj complement}
VP = Intj V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;Intj head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechIntjVAbs - V final, speech_PP verb with Intj complement}
VP = Intj V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;Intj head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8bSpeechIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPIPVNom - V final, indirect speech verb with accusative DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechDPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
     


     
     
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPIPNegObjVerbRequiredVNom - V final, indirect speech verb with accusative DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPIPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPIPAbsVAbs - V final, indirect speech verb with absolutive DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8bSpeechDPIPAbsVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
     
    

     
     
    
    
    
    
    
     
    

     
     

      
    
    
    
     
    

     
     
    
    
    
    
    
     
    

     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPIPAbsNegObjVerbRequiredVAbs - V final, indirect speech verb with absolutive DP, IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPIPAbsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    

     
     
    
    
    
    
    
    
    

     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPCPVNom - V final, indirect speech verb with accusative DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8bSpeechDPCPVNom
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPCPNegObjVerbRequiredVNom - V final, indirect speech verb with accusative DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
          &lt;DP head case&gt; = nominative
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPCPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPCPAbsVAbs - V final, indirect speech verb with absolutive DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8bSpeechDPCPAbsVAbs
</xsl:text>
</xsl:if>
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8bSpeechDPCPAbsNegObjVerbRequiredVAbs - V final, indirect speech verb with absolutive DP, CP complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
          &lt;DP head case&gt; = absolutive
         }
          &lt;DP head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8bSpeechDPCPAbsNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cVNom - VSO with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cNegSubjVerbRequiredVNom - VSO with sentential complement}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8coVNom - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8coVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8coNegSubjVerbRequiredVNom - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8coNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8coNegObjVerbRequiredVNom - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8coNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8coNegSubjorObjVerbRequiredVNom - VSO object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8coNegSubjorObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cIOVNom - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cIOVNom
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
   
   
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cIONegSubjVerbRequiredVNom - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cIONegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     
   
   
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cIONegObjVerbRequiredVNom - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8cIONegObjVerbRequiredVNom
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
   
   
     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cIONegSubjOrObjVerbRequiredVNom - VSO indirect object with sentential complement}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8cIONegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    
   
   
     
     


  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cioVNom - VSO object with sentential complement, imperative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cioVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cioNegObjVerbRequiredVNom - VSO object with sentential complement, imperative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]]    | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cioNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cpoVNom - VSO object with sentential complement, pro-drop}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8cpoVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cpoNegObjVerbRequiredVNom - VSO object with sentential complement, pro-drop}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]]  | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8cpoNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     

    
    
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dVNom - OSV with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dNegSubjVerbRequiredVNom - OSV with sentential complement}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8doVNom - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8doVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8doNegSubjVerbRequiredVNom - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8doNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8doNegObjVerbRequiredVNom - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8doNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8doNegSubjorObjVerbRequiredVNom - OSV object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8doNegSubjorObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voice)='yes' and normalize-space(//ip/@voiceCase)='yesNom'">
<xsl:text>
rule {VP option 8dIOVNom - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dIOVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
  
  
  
  
    
     
   
   
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dIONegSubjVerbRequiredVNom - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dIONegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
      
      
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dIONegObjVerbRequiredVNom - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8dIONegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
      
      
     
     
   
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dIONegSubjOrObjVerbRequiredVNom - OSV indirect object with sentential complement}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = dative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8dIONegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
      
      
     
     
   
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dioVNom - OSV object with sentential complement, imperative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dioVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dioNegObjVerbRequiredVNom - OSV object with sentential complement, imperative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dioNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dpoVNom - OSV object with sentential complement, pro-drop}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8dpoVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dpoNegObjVerbRequiredVNom - OSV object with sentential complement, pro-drop}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8dpoNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eVAbs - VSO with sentential complement, ergative}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eNegSubjVerbRequiredVAbs - VSO with sentential complement, ergative}
VP = V DP {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eoVAbs - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eoVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eoNegSubjVerbRequiredVAbs - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eoNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eoNegObjVerbRequiredVAbs - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eoNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eoNegSubjorObjVerbRequiredVAbs - VSO object with sentential complement, ergative}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eoNegSubjorObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eIOVAbs - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eIOVAbs
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eIONegSubjVerbRequiredVAbs - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eIONegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>

    
    
    
    
    
    
     


     
     

    
    
    
    
    
    
     


     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eIONegObjVerbRequiredVAbs - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8eIONegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    


     
     

    
    
    
    
    
    
    


     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eIONegSubjOrObjVerbRequiredVAbs - VSO indirect object with sentential complement, ergative subj}
VP = V DP DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8eIONegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>

    
    
    
    
    
    
    


     
     

    
    
    
    
    
    
    


     
     
  
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eioVAbs - VSO object with sentential complement, imperative, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eioVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eioNegObjVerbRequiredVAbs - VSO object with sentential complement, imperative, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eioNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8epoVAbs - VSO object with sentential complement, pro-drop, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8epoVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8epoNegObjVerbRequiredVAbs - VSO object with sentential complement, pro-drop, ergative}
VP = V DP_1 {CP / IP}
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8epoNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fVAbs - OSV with sentential complement, ergative}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fNegSubjVerbRequiredVAbs - OSV with sentential complement, ergative}
VP = {CP / IP} DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;V head type sentential&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head type question&gt; &lt;= &lt;IP head type question&gt;
          &lt;VP head fronted&gt; &lt;= &lt;IP head fronted&gt; | long distance fronting
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8foVAbs - OSV object with sentential complement, ergative}
VP = {CP / IP} DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8foVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8foNegSubjVerbRequiredVAbs - OSV object with sentential complement, ergative}
VP = {CP / IP} DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8foNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8foNegObjVerbRequiredVAbs - OSV object with sentential complement, ergative}
VP = {CP / IP} DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8foNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='yes' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8foNegSubjorObjVerbRequiredVAbs - OSV object with sentential complement, ergative}
VP = {CP / IP} DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8foNegSubjorObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fIOVAbs - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fIOVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
  
  
  
  
    

     
     

      
    
    
    
    
  
  
  
  
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fIONegSubjVerbRequiredVAbs - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fIONegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
    
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fIONegObjVerbRequiredVAbs - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8fIONegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    
    
    
    
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fIONegSubjOrObjVerbRequiredVAbs - OSV indirect object with sentential complement, ergative subj}
VP = {CP / IP} DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
          &lt;VP head type pro-drop&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP head type possessive&gt; = -                         | subject not possessive
          &lt;DP head type reflexive&gt; = -                          | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                         | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;CP head infl&gt; == ~[mood:imperative]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 8fIONegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    
    
    
    
    

     
     


 <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fioVAbs - OSV object with sentential complement, imperative, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fioVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropImp/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fioNegObjVerbRequiredVAbs - OSV object with sentential complement, imperative, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head infl mood&gt; = imperative
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;VP head type question&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fioNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fpoVAbs - OSV object with sentential complement, pro-drop, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -           | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -        | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8fpoVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     
    

     
     

    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropYes/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//ip/proDropClitic/@checked)='yes' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fpoNegObjVerbRequiredVAbs - OSV object with sentential complement, pro-drop, ergative}
VP = {CP / IP} DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;VP head type pro-drop&gt; = +
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;CP head type root&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;IP head type relative&gt; = -
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = - | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;V head type sentential_with_object&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head fronted&gt; == ~[cat:DP]
          &lt;VP option&gt; = 8fpoNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    
    

     
     

    
    
    
    
    
    
    


     
     
       


  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cCausVNom - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8cCausVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cCausNegSubjVerbRequiredVNom - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cCausNegSubjVerbRequiredVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cCausNegObjVerbRequiredVNom - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cCausNegObjVerbRequiredVNom 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cCausNegSubjOrObjVerbRequiredVNom - VSO, causative, accusative object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cCausNegSubjOrObjVerbRequiredVNom 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     


     
     
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dCausVNom - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8dCausVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dCausNegSubjVerbRequiredVNom - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dCausNegSubjVerbRequiredVNom 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dCausNegObjVerbRequiredVNom - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dCausNegObjVerbRequiredVNom 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     


     
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dCausNegSubjOrObjVerbRequiredVNom - OSV, causative, accusative object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dCausNegSubjOrObjVerbRequiredVNom
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     


     
     
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eCausVAbs - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8eCausVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    

     
     

      
    
    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eCausNegSubjVerbRequiredVAbs - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eCausNegSubjVerbRequiredVAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    

     
     

      
    
    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eCausNegObjVerbRequiredVAbs - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eCausNegObjVerbRequiredVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
    
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eCausNegSubjOrObjVerbRequiredVAbs - VSO, causative, absolutive object with nonfinite complement}
VP = V DP_1 DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eCausNegSubjOrObjVerbRequiredVAbs
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
    
    
     
    

     
     


  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fCausVAbs - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP option&gt; = 8fCausVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    

     
     

      
    
    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fCausNegSubjVerbRequiredVAbs - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fCausNegSubjVerbRequiredVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
     
    

     
     

      
    
    
    
    
    
     
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fCausNegObjVerbRequiredVAbs - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fCausNegObjVerbRequiredVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
    
    
     
    

     
     

  <xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/causativeMake/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fCausNegSubjOrObjVerbRequiredVAbs - OSV, causative, absolutive object with nonfinite complement}
VP = IP DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_1&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;VP head infl valence&gt; = causative
          &lt;V head type causative_syntax&gt; = +    
|         &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;IP head type pro-drop&gt; = +
          &lt;IP head type verbheaded&gt; = +  
|         &lt;IP head infl finite&gt; = -                            |*doesn't work where not marked in grammar
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -    
          &lt;IP head fronted&gt; = none
          &lt;IP head type comp&gt; = -
          &lt;IP head type prefix comp&gt; = -                       | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;IP head type question&gt; = -
          &lt;DP_1 head type possessive&gt; = -                       | subject not possessive
          &lt;DP_1 head type reflexive&gt; = -                        | subject not reflexive
          &lt;DP_1 head type reciprocal&gt; = -                       | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                        | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -                      | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -                     | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -                   | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head infl&gt; == ~[mood:imperative]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fCausNegSubjOrObjVerbRequiredVAbs 
  </xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
    
    
     
    

     
     



<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPIPVNom - VSO, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechPPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPIPNegSubjVerbRequiredVNom - VSO, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechIPVNom - VSO, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechIPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechIPNegSubjVerbRequiredVNom - VSO, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPCPVNom - VSO, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cSpeechPPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPCPNegSubjVerbRequiredVNom - VSO, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechCPVNom - VSO, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8cSpeechCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechCPNegSubjVerbRequiredVNom - VSO, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPGreetVNom - VSO, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPGreetNegSubjVerbRequiredVNom - VSO, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPGreetNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechGreetVNom - VSO, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechGreetNegSubjVerbRequiredVNom - VSO, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechGreetNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPExclVNom - VSO, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPExclNegSubjVerbRequiredVNom - VSO, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPExclNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechExclVNom - VSO, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechExclNegSubjVerbRequiredVNom - VSO, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechExclNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPIntjVNom - VSO, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechPPIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechPPIntjNegSubjVerbRequiredVNom - VSO, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechPPIntjNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechIntjVNom - VSO, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8cSpeechIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechIntjNegSubjVerbRequiredVNom - VSO, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechIntjNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPIPVNom - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8cSpeechDPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegSubjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegObjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPIPNegSubjOrObjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPIPNegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPCPVNom - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8cSpeechDPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegSubjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegObjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8cSpeechDPCPNegSubjOrObjVerbRequiredVNom - VSO, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8cSpeechDPCPNegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPIPVNom - OSV, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechPPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPIPNegSubjVerbRequiredVNom - OSV, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechIPVNom - OSV, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechIPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechIPNegSubjVerbRequiredVNom - OSV, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPCPVNom - OSV, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dSpeechPPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPCPNegSubjVerbRequiredVNom - OSV, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechCPVNom - OSV, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8dSpeechCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechCPNegSubjVerbRequiredVNom - OSV, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPGreetVNom - OSV, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPGreetNegSubjVerbRequiredVNom - OSV, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPGreetNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechGreetVNom - OSV, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechGreetVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechGreetNegSubjVerbRequiredVNom - OSV, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechGreetNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPExclVNom - OSV, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPExclNegSubjVerbRequiredVNom - OSV, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPExclNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechExclVNom - OSV, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechExclVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechExclNegSubjVerbRequiredVNom - OSV, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechExclNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPIntjVNom - OSV, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechPPIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPIntjNegSubjVerbRequiredVNom - OSV, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechPPIntjNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechIntjVNom - OSV, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8dSpeechIntjVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechIntjNegSubjVerbRequiredVNom - OSV, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechIntjNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPIPVNom - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8dSpeechDPIPVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegSubjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegObjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPIPNegSubjOrObjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPIPNegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    


     
     
  

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPCPVNom - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8dSpeechDPCPVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegSubjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegSubjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegObjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegObjVerbRequiredVNom
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)!='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechDPCPNegSubjOrObjVerbRequiredVNom - OSV, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = nominative
          &lt;DP_1 head case&gt; = genitive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = genitive
          &lt;DP_1 head case&gt; = nominative
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8dSpeechDPCPNegSubjOrObjVerbRequiredVNom
</xsl:text>
</xsl:if>

  <xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPIPVAbs - VSO, ergative, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechPPIPVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

    
    
    
    
    
    

     
     
  
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPIPNegSubjVerbRequiredVAbs - VSO, ergative, speech verb with PP and IP complement}
VP = V DP PP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    

     
     

      
    
    
    
    
    

     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechIPVAbs - VSO, ergative, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechIPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechIPNegSubjVerbRequiredVAbs - VSO, ergative, speech_PP verb with IP complement}
VP = V DP IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPCPVAbs - VSO, ergative, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eSpeechPPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPCPNegSubjVerbRequiredVAbs - VSO, ergative, speech verb with PP and CP +/-root complement}
VP = V DP PP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechCPVAbs - VSO, ergative, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8eSpeechCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechCPNegSubjVerbRequiredVAbs - VSO, ergative, speech_PP verb with CP +/-root complement}
VP = V DP CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPGreetVabs - VSO, ergative, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPGreetNegSubjVerbRequiredVAbs - VSO, ergative, speech verb with PP and Greet complement}
VP = V DP PP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPGreetNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechGreetVAbs - VSO, ergative, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechGreetNegSubjVerbRequiredVAbs - VSO, ergative, speech_PP verb with Greet complement}
VP = V DP Greet (DP_1)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Greet head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Greet head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechGreetNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPExclVAbs - VSO, ergative, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPExclNegSubjVerbRequiredVAbs - VSO, ergative, speech verb with PP and Excl complement}
VP = V DP PP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPExclNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechExclVAbs - VSO, ergative, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechExclNegSubjVerbRequiredVAbs - VSO, ergative, speech_PP verb with Excl complement}
VP = V DP (DP_1) Excl Adj (IP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Adj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Adj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechExclNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPIntjVAbs - VSO, ergative, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechPPIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechPPIntjNegSubjVerbRequiredVAbs - VSO, ergative, speech verb with PP and Intj complement}
VP = V DP PP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechPPIntjNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechIntjVAbs - VSO, ergative, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8eSpeechIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechIntjNegSubjVerbRequiredVAbs - VSO, ergative, speech_PP verb with Intj complement}
VP = V DP Intj
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;Intj head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;Intj head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechIntjNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPIPVAbs - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8eSpeechDPIPVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
     
    

     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegSubjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    

     
     

      
    
    
    
    
    
     
    

     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegObjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    
    
    

     
     

<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPIPNegSubjOrObjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, IP complement}
VP = V DP DP_1 IP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;IP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;IP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPIPNegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    

     
     

      
    
    
    
    
    
    
    

     
     


<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPCPVAbs - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8eSpeechDPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegSubjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegObjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VSO' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8eSpeechDPCPNegSubjOrObjVerbRequiredVAbs - VSO, ergative, indirect speech verb with accusative DP, CP complement}
VP = V DP DP_1 CP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;CP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;CP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8eSpeechDPCPNegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPIPVAbs - OSV, ergative, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechPPIPVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPIPNegSubjVerbRequiredVAbs - OSV, ergative, speech verb with PP and IP complement}
VP = IP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = - 
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechIPVAbs - OSV, ergative, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechIPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechIPNegSubjVerbRequiredVAbs - OSV, ergative, speech_PP verb with IP complement}
VP = IP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;IP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8dSpeechPPCPVAbs - OSV, ergative, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fSpeechPPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPCPNegSubjVerbRequiredVAbs - OSV, ergative, speech verb with PP and CP +/-root complement}
VP = CP PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+]
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechCPVAbs - OSV, ergative, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP option&gt; = 8fSpeechCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechCPNegSubjVerbRequiredVAbs - OSV, ergative, speech_PP verb with CP +/-root complement}
VP = CP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;CP head subject head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-
                                                          auxiliary-I':-]]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPGreetVAbs - OSV, ergative, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPGreetNegSubjVerbRequiredVAbs - OSV, ergative, speech verb with PP and Greet complement}
VP = (DP_1) Greet PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPGreetNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechGreetVAbs - OSV, ergative, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechGreetVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechGreetNegSubjVerbRequiredVAbs - OSV, ergative, speech_PP verb with Greet complement}
VP = (DP_1) Greet DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Greet&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Greet head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Greet head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechGreetNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPExclVAbs - OSV, ergative, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPExclNegSubjVerbRequiredVAbs - OSV, ergative, speech verb with PP and Excl complement}
VP = (IP) Adj Excl (DP_1) PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;IP head fronted&gt; = &lt;Adj&gt; 
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -      
          &lt;PP head type stand-alone&gt; = -     
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPExclNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechExclVAbs - OSV, ergative, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechExclVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechExclNegSubjVerbRequiredVAbs - OSV, ergative, speech_PP verb with Excl complement}
VP = (IP) Adj Excl (DP_1) DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Excl&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = &lt;Adj&gt;
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Adj head type comma&gt; = -
          &lt;Excl head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Adj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechExclNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPIntjVAbs - OSV, ergative, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechPPIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechPPIntjNegSubjVerbRequiredVAbs - OSV, ergative, speech verb with PP and Intj complement}
VP = Intj PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;PP head case&gt; = dative
          &lt;PP head type locative&gt; = -  
          &lt;PP head type stand-alone&gt; = -    
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechPPIntjNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechIntjVAbs - OSV, ergtaive, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 8fSpeechIntjVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechIntjNegSubjVerbRequiredVAbs - OSV, ergative, speech_PP verb with Intj complement}
VP = Intj DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head embedded&gt; = &lt;Intj&gt;
          &lt;V head type speech_PP&gt; = +
          &lt;V head type motion&gt; = -
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
         }
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;Intj head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;Intj head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechIntjNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPIPVAbs - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP option&gt; = 8fSpeechDPIPVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
     
    
    
    
    

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegSubjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
     
    
    
    
    

      
    
    
    
    
    
     
    
    
    
    

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegObjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    

<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPIPNegSubjOrObjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, IP complement}
VP = IP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;IP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;V head type motion&gt; = -
          &lt;IP head fronted&gt; = none 
          &lt;IP head type relative&gt; = -
          &lt;IP head type auxiliary-C'&gt; = -
          &lt;IP head type verbheaded&gt; = +  
          &lt;IP head type prefix comp&gt; = -             | uses CP
          &lt;IP head type suffix comp&gt; = -
          &lt;IP head type root&gt; = -
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;IP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;IP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+]  
          &lt;IP head&gt; == [type:[auxiliary-VP:+]] -&gt; [type:[auxiliary-I':+]] 
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPIPNegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    


<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPCPVAbs - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP option&gt; = 8fSpeechDPCPVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegSubjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegSubjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegObjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegObjVerbRequiredVAbs
</xsl:text>
</xsl:if>
<xsl:if test="normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='ergative' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OSV' and normalize-space(//typology/@case)='split' and normalize-space(//neg/@subjVerbRequired)!='no' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 8fSpeechDPCPNegSubjOrObjVerbRequiredVAbs - OSV, ergative, indirect speech verb with accusative DP, CP complement}
VP = CP DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head embedded&gt; = &lt;CP&gt;
          &lt;V head type speech_DP&gt; = +
         {&lt;V head infl voice&gt; = actor
          &lt;DP head case&gt; = absolutive
          &lt;DP_1 head case&gt; = ergative
         /&lt;V head infl voice&gt; = objective
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = dative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = locative
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = instrumental
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         /&lt;V head infl voice&gt; = goal
          &lt;DP head case&gt; = ergative
          &lt;DP_1 head case&gt; = absolutive
         }
          &lt;DP_1 head type relative&gt; = -  
          &lt;V head type motion&gt; = -
          &lt;CP head type relative&gt; = -
          &lt;CP head type root&gt; = -    
          &lt;CP head type verbheaded&gt; = + 
          &lt;DP head type possessive&gt; = -                 | subject not possessive
          &lt;DP head type reflexive&gt; = -                  | subject not reflexive
          &lt;DP head type reciprocal&gt; = -                 | subject not reciprocal
          &lt;DP head type suffix poss&gt; = -                | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -             | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;CP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;CP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;DP head type&gt; == [noN:+] -&gt; [pronoun:+] 
          &lt;CP head&gt; == [type:[auxiliary-VP:+]] -&gt; ~[type:[auxiliary-C':-  
                                                          auxiliary-I':-]]  
          &lt;VP head&gt; == [subject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if subject negative, VP must be
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 8fSpeechDPCPNegSubjOrObjVerbRequiredVAbs
</xsl:text>
</xsl:if>

   
      <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no'">
<xsl:text>
rule {VP option 9a - V initial/final, passive, no Agent phrase, no passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9a
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9aPP - V initial, passive, with PP Agent, not ditrans, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aPP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9aPPNegObjVerbRequired - V initial, passive, with PP Agent, not ditrans, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9aPPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9aPPf - V final, passive, with PP Agent, not ditrans, no passive Aux}
VP =  PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aPPf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9aPPfNegObjVerbRequired - V final, passive, with PP Agent, not ditrans, no passive Aux}
VP =  PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9aPPfNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9aDP - V initial, passive, with DP Agent phrase, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9aDPNegObjVerbRequired - V initial, passive, with DP Agent phrase, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9aDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9aDPf - V final, passive, with DP Agent phrase, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aDPf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9aDPfNegObjVerbRequired - V final, passive, with DP Agent phrase, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9aDPfNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

 <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp'">
<xsl:text>
rule {VP option 9aAgentDPQ - V initial/final, passive, DP Agent phrase questioned, no passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted&gt; = &lt;VP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9aAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp'">
<xsl:text>
rule {VP option 9aAgentDPQSOV - V final, passive, DP Agent phrase questioned, no passive aux}
VP = DP V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = DP
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;DP head type wh&gt; = +
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aAgentDPQSOV
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp'">
<xsl:text>
rule {VP option 9aAgentPPQ - V initial/final, passive, PP Agent phrase questioned, no passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9aAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9aAgentInitPQ - V initial, passive, PP Agent phrase questioned, stranded, no passive aux}
VP = V P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP option&gt; = 9aInitAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9aAgentFinPQ - V final, passive, PP Agent phrase questioned, stranded, no passive aux}
VP = P V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;P head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP option&gt; = 9aFinAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//q/@contFront)='after'">
<xsl:text>
rule {VP option 9aQSubj - V final, passive, no Agent no ditrans, no passive aux, subject questioned}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//q/@contFront)='after'">
<xsl:text>
rule {VP option 9aQAdvP - V final, passive, no Agent, no ditrans, no passive aux, AdvP questioned}
VP = AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9aQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9b - V initial, passive, no Agent but PP ditrans, no passive aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9b
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9bNegObjVerbRequired - V initial, passive, no Agent but PP ditrans, no passive aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]]  | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9bNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9bDP - V initial, passive, no Agent but DP ditrans, no passive aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9bDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9bDPNegObjVerbRequired - V initial, passive, no Agent but DP ditrans, no passive aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]]  | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9bDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9bDitransPPQ - V initial, passive, no Agent, PP ditrans questioned, no passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9bDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9bDitransPQ - V initial, passive, no Agent, PP ditrans questioned, stranded, no passive aux}
VP = V P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;P head type locative&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9bDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9bDitransDPQ - V initial, passive, no Agent, DP ditrans questioned, no passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9bDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9c - V final, passive, no Agent but PP ditrans, no passive aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9c
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cNegObjVerbRequired - V final, passive, no Agent but PP ditrans, no passive aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9cDP - V final, passive, no Agent but DP ditrans, no passive aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, no passive aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9cDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9cQSubj - V final, passive, no Agent but PP ditrans, no passive aux, subject questioned}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cQSubjNegObjVerbRequired - V final, passive, no Agent but PP ditrans, no passive aux, subject questioned}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9cQSubjDP - V final, passive, no Agent but DP ditrans, no passive aux, subject questioned}
VP = DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQSubjDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cQSubjDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, no passive aux, subject questioned}
VP = DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQSubjDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9cQAdvP - V final, passive, no Agent but PP ditrans, no passive aux, AdvP questioned}
VP = PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cQAdvPNegObjVerbRequired - V final, passive, no Agent but PP ditrans, no passive aux, AdvP questioned}
VP = PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9cQAdvPDP - V final, passive, no Agent but DP ditrans, no passive aux, AdvP questioned}
VP = DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQAdvPDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9cQAdvPDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, no passive aux, AdvP questioned}
VP = DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head infl valence&gt; = active
          &lt;DP head type sentential&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9cQAdvPDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9cDitransPPQ - V final, passive, no Agent, PP ditrans questioned, no passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9cDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9cDitransPQ - V final, passive, no Agent, PP ditrans questioned, stranded, no passive aux}
VP = P V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;P head type locative&gt; = -
          &lt;P head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9cDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9cDitransDPQ - V final, passive, no Agent, DP ditrans questioned, no passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9cDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


 <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes'">
<xsl:text>
rule {VP option 9d - V initial/final, passive, no Agent phrase, passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9d
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9dPP - V initial, passive, with PP Agent, not ditrans, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dPP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9dPPNegObjVerbRequired - V initial, passive, with PP Agent, not ditrans, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9dPPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9dPPf - V final, passive, with PP Agent, not ditrans, passive Aux}
VP =  PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dPPf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9dPPfNegObjVerbRequired - V final, passive, with PP Agent, not ditrans, passive Aux}
VP =  PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type sentential&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9dPPfNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9dDP - V initial, passive, with DP Agent phrase, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; &lt;= +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9dDPNegObjVerbRequired - V initial, passive, with DP Agent phrase, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; &lt;= +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                             [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9dDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9dDPf - V final, passive, with DP Agent phrase, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; &lt;= +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dDPf
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9dDPfNegObjVerbRequired - V final, passive, with DP Agent phrase, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head type ditransitive&gt; = -
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; &lt;= +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9dDPfNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


 <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp'">
<xsl:text>
rule {VP option 9dAgentDPQ - V initial/final, passive, DP Agent phrase questioned, passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9dAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='after' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp'">
<xsl:text>
rule {VP option 9dAgentDPQSOV - V final, passive, DP Agent phrase questioned, passive aux}
VP = DP V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head object&gt; = DP
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;DP head type wh&gt; = +
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dAgentDPQSOV
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)!='VSO' and normalize-space(//typology/@wordOrder)!='OSV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp'">
<xsl:text>
rule {VP option 9dAgentPPQ - V initial/final, passive, PP Agent phrase questioned, passive aux}
VP = V 
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9dAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9dInitAgentPQ - V initial, passive, PP Agent phrase questioned, stranded, passive aux}
VP = V P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP option&gt; = 9dInitAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9dAgentFinPQ - V final, passive, PP Agent phrase questioned, stranded, passive aux}
VP = P V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;P head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP option&gt; = 9dFinAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//q/@contFront)='after'">
<xsl:text>
rule {VP option 9dQSubj - V final, passive, no Agent no ditrans, passive aux, subject questioned}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = -
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//q/@contFront)='after'">
<xsl:text>
rule {VP option 9dQAdvP - V final, passive, no Agent, no ditrans, passive aux, AdvP questioned}
VP = AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;AdvP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9dQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9e - V initial, passive, no Agent but PP ditrans, passive aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9e
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9eNegObjVerbRequired - V initial, passive, no Agent but PP ditrans, passive aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9eNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9eDP - V initial, passive, no Agent but DP ditrans, passive aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9eDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9eDPNegObjVerbRequired - V initial, passive, no Agent but DP ditrans, passive aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]]  | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9eDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9eDitransPPQ - V initial, passive, no Agent, PP ditrans questioned, passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9eDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9eDitransPQ - V initial, passive, no Agent, PP ditrans questioned, stranded, passive aux}
VP = V P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;P head type locative&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9eDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9eDitransDPQ - V initial, passive, no Agent, DP ditrans questioned, passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9eDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9f - V final, passive, no Agent but PP ditrans, passive aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9f
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fNegObjVerbRequired - V final, passive, no Agent but PP ditrans, passive aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9fDP - V final, passive, no Agent but DP ditrans, passive aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, passive aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9fDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9fQSubj - V final, passive, no Agent but PP ditrans, passive aux, subject questioned}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fQSubjNegObjVerbRequired - V final, passive, no Agent but PP ditrans, passive aux, subject questioned}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt;  = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9fQSubjDP - V final, passive, no Agent but DP ditrans, passive aux, subject questioned}
VP = DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQSubjDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fQSubjDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, passive aux, subject questioned}
VP = DP_1 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQSubjDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9fQAdvP - V final, passive, no Agent but PP ditrans, passive aux, AdvP questioned}
VP = PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fQAdvPNegObjVerbRequired - V final, passive, no Agent but PP ditrans, passive aux, AdvP questioned}
VP = PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9fQAdvPDP - V final, passive, no Agent but DP ditrans, passive aux, AdvP questioned}
VP = DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQAdvPDP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9fQAdvPDPNegObjVerbRequired - V final, passive, no Agent but DP ditrans, passive aux, AdvP questioned}
VP = DP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9fQAdvPDPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9fDitransPPQ - V final, passive, no Agent, PP ditrans questioned, passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9fDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9fDitransPQ - V final, passive, no Agent, PP ditrans questioned, stranded, passive aux}
VP = P V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;P head type locative&gt; = -
          &lt;P head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9fDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both'">
<xsl:text>
rule {VP option 9fDitransDPQ - V final, passive, no Agent, DP ditrans questioned, passive aux}
VP = V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;V head fronted&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9fDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ginit - V initial, passive, with PP Agent, PP ditrans, no passive Aux}
VP = V PP_1 PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ginit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ginitNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans, no passive Aux}
VP = V PP_1 PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ginitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9gfin - V initial, passive, with PP Agent, PP ditrans, no passive Aux}
VP = V PP PP_2
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_2 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_2 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9gfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9gfinNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans, no passive Aux}
VP = V PP PP_2
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_2 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_2 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9gfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9gAgentPPQ - V initial, passive, with PP Agent questioned, PP ditrans, no passive Aux}
VP = V PP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9gAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9gAgentPPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, PP ditrans, no passive Aux}
VP = V PP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9gAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9gAgentPQ - V initial, passive, with PP Agent questioned, stranded, PP ditrans, no passive Aux}
VP = V PP_1 P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9gAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9gAgentPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, stranded, PP ditrans, no passive Aux}
VP = V PP_1 P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9gAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9gDitransPPQ - V initial, passive, with PP Agent, PP ditrans questioned, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9gDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9gDitransPPQNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans questioned, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9gDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9gDitransPQ - V initial, passive, with PP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = V PP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9gDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9gDitransPQNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = V PP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9gDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hinit - V final, passive, with PP Agent, PP ditrans, no passive Aux}
VP =  PP_1 PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hinitNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans, no passive Aux}
VP =  PP_1 PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hfin - V final, passive, with PP Agent, PP ditrans, no passive Aux}
VP =  PP PP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hfinNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans, no passive Aux}
VP =  PP PP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hAgentPPQ - V final, passive, with PP Agent questioned, PP ditrans, no passive Aux}
VP = PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9hAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hAgentPPQNegObjVerbRequired - V final, passive, with PP Agent questioned, PP ditrans, no passive Aux}
VP = PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9hAgentPQ - V final, passive, with PP Agent questioned, stranded, PP ditrans, no passive Aux}
VP = P PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP option&gt; = 9hAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9hAgentPQNegObjVerbRequired - V final, passive, with PP Agent questioned, stranded, PP ditrans, no passive Aux}
VP = P PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hDitransPPQ - V final, passive, with PP Agent, PP ditrans questioned, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9hDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hDitransPPQNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans questioned, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9hDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hDitransPQ - V final, passive, with PP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = P PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;P head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9hDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hDitransPQNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = P PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;P head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9hDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hinitQSubj - V final, passive, PP Agent, PP ditrans, no passive aux, subject questioned}
VP = PP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hinitQSubjNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, no passive aux, subject questioned}
VP = PP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hfinQSubj - V final, passive, PP Agent, PP ditrans, no passive aux, subject questioned}
VP = PP PP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hfinQSubjNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, no passive aux, subject questioned}
VP = PP PP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hinitQAdvP - V final, passive, PP Agent, PP ditrans, no passive aux, AdvP questioned}
VP = PP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hinitQAdvPNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, no passive aux, AdvP questioned}
VP = PP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9hfinQAdvP - V final, passive, PP Agent, PP ditrans, no passive aux, AdvP questioned}
VP = PP PP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9hfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9hfinQAdvPNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, no passive aux, AdvP questioned}
VP = PP PP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9hfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9iinit - V initial, passive, with PP Agent, PP ditrans, passive Aux}
VP = V PP_1 PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9iinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9iinitNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans, passive Aux}
VP = V PP_1 PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9iinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ifin - V initial, passive, with PP Agent, PP ditrans, passive Aux}
VP = V PP PP_2
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_2 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_2 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ifin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ifinNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans, passive Aux}
VP = V PP PP_2
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_2 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_2 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ifinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9iAgentPPQ - V initial, passive, with PP Agent questioned, PP ditrans, passive Aux}
VP = V PP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9iAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9iAgentPPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, PP ditrans, passive Aux}
VP = V PP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP_1 head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9iAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9iAgentPQ - V initial, passive, with PP Agent questioned, stranded, PP ditrans, passive Aux}
VP = V PP_1 P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9iAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9iAgentPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, stranded, PP ditrans, passive Aux}
VP = V PP_1 P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9iAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9iDitransPPQ - V initial, passive, with PP Agent, PP ditrans questioned, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9iDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9iDitransPPQNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans questioned, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9iDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9iDitransPQ - V initial, passive, with PP Agent, PP ditrans questioned, stranded, passive Aux}
VP = V PP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9iDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9iDitransPQNegObjVerbRequired - V initial, passive, with PP Agent, PP ditrans questioned, stranded, passive Aux}
VP = V PP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9iDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jinit - V final, passive, with PP Agent, PP ditrans, passive Aux}
VP =  PP_1 PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jinitNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans, passive Aux}
VP =  PP_1 PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jfin - V final, passive, with PP Agent, PP ditrans, passive Aux}
VP =  PP PP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jfinNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans, passive Aux}
VP =  PP PP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jAgentPPQ - V final, passive, with PP Agent questioned, PP ditrans, passive Aux}
VP = PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9jAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jAgentPPQNegObjVerbRequired - V final, passive, with PP Agent questioned, PP ditrans, passive Aux}
VP = PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9jAgentPQ - V final, passive, with PP Agent questioned, stranded, PP ditrans, passive Aux}
VP = P PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP option&gt; = 9jAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9jAgentPQNegObjVerbRequired - V final, passive, with PP Agent questioned, stranded, PP ditrans, passive Aux}
VP = P PP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jDitransPPQ - V final, passive, with PP Agent, PP ditrans questioned, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9jDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jDitransPPQNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans questioned, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9jDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jDitransPQ - V final, passive, with PP Agent, PP ditrans questioned, stranded, passive Aux}
VP = P PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;P head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9jDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jDitransPQNegObjVerbRequired - V final, passive, with PP Agent, PP ditrans questioned, stranded, passive Aux}
VP = P PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;P head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9jDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jinitQSubj - V final, passive, PP Agent, PP ditrans, passive aux, subject questioned}
VP = PP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jinitQSubjNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, passive aux, subject questioned}
VP = PP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jfinQSubj - V final, passive, PP Agent, PP ditrans, passive aux, subject questioned}
VP = PP PP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jfinQSubjNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, passive aux, subject questioned}
VP = PP PP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jinitQAdvP - V final, passive, PP Agent, PP ditrans, passive aux, AdvP questioned}
VP = PP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jinitQAdvPNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, passive aux, AdvP questioned}
VP = PP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_1 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_1 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_1 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_1 head type locative&gt; = -
          &lt;PP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_1 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9jfinQAdvP - V final, passive, PP Agent, PP ditrans, passive aux, AdvP questioned}
VP = PP PP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9jfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9jfinQAdvPNegObjVerbRequired - V final, passive, PP Agent, PP ditrans, passive aux, AdvP questioned}
VP = PP PP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;PP_2 head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP_2 head infl valence&gt; = active
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP_2 head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP_2 head type locative&gt; = -
          &lt;PP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;PP_2 head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;PP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9jfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9kinit - V initial, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9kinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9kinitNegObjVerbRequired - V initial, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9kinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9kfin - V initial, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9kfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9kfinNegObjVerbRequired - V initial, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9kfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9kAgentDPQ - V initial, passive, with DP Agent questioned, DP ditrans, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9kAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9kAgentDPQNegObjVerbRequired - V initial, passive, with DP Agent questioned, DP ditrans, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9kAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9kDitransDPQ - V initial, passive, with DP Agent, DP ditrans questioned, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9kDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9kDitransDPQNegObjVerbRequired - V initial, passive, with DP Agent, DP ditrans questioned, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9kDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9linit - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9linit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9linitNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9linitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9lfin - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9lfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//neg/@subjVerbRequired)='no' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9lfinNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9lfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9lAgentDPQ - V final, passive, with DP Agent questioned, DP ditrans, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9lAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9lAgentDPQNegObjVerbRequired - V final, passive, with DP Agent questioned, DP ditrans, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9lAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9lDitransDPQ - V final, passive, with DP Agent, DP ditrans questioned, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9lDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9lDitransDPQNegObjVerbRequired - V final, passive, with DP Agent, DP ditrans questioned, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9lDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  


 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9linitQSubj - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9linitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9linitQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9linitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9lfinQSubj - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9lfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9lfinQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9lfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9linitQAdvP - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9linitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9linitQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9linitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9lfinQAdvP - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9lfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9lfinQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, no passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9lfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9minit - V initial, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9minit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9minitNegObjVerbRequired - V initial, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9minitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9mfin - V initial, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9mfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='nyes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9mfinNegObjVerbRequired - V initial, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = V DP DP_1
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP_1 head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP_1 head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9mfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9mAgentDPQ - V initial, passive, with DP Agent questioned, DP ditrans, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9mAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9mAgentDPQNegObjVerbRequired - V initial, passive, with DP Agent questioned, DP ditrans, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9mAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9mDitransDPQ - V initial, passive, with DP Agent, DP ditrans questioned, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9mDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9mDitransDPQNegObjVerbRequired - V initial, passive, with DP Agent, DP ditrans questioned, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9mDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ninit - V final, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ninit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ninitNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ninitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9nfin - V final, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9nfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9nfinNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux}
VP = DP DP_1 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9nfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9nAgentDPQ - V final, passive, with DP Agent questioned, DP ditrans, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9nAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9nAgentDPQNegObjVerbRequired - V final, passive, with DP Agent questioned, DP ditrans, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9nAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9nDitransDPQ - V final, passive, with DP Agent, DP ditrans questioned, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9nDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9nDitransDPQNegObjVerbRequired - V final, passive, with DP Agent, DP ditrans questioned, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9nDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  


 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ninitQSubj - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ninitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ninitQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ninitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9nfinQSubj - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9nfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9nfinQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, subject questioned}
VP = DP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9nfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ninitQAdvP - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ninitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ninitQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ninitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9nfinQAdvP - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9nfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9nfinQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, DP ditrans, passive Aux, AdvP questioned}
VP = DP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9nfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9oinit - V initial, passive, with PP Agent, DP ditrans, no passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9oinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9oinitNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans, no passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9oinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ofin - V initial, passive, with PP Agent, DP ditrans, no passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ofin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ofinNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans, no passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ofinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9oAgentPPQ - V initial, passive, with PP Agent questioned, DP ditrans, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9oAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9oAgentPPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, DP ditrans, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9oAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9oAgentPQ - V initial, passive, with PP Agent questioned, stranded, DP ditrans, no passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9oAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9oAgentPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, stranded, DP ditrans, no passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9oAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9oDitransDPQ - V initial, passive, with PP Agent, DP ditrans questioned, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9oDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9oDitransDPQNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans questioned, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9oDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pinit - V final, passive, with PP Agent, DP ditrans, no passive Aux}
VP =  DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pinitNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans, no passive Aux}
VP =  DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pfin - V final, passive, with PP Agent, DP ditrans, no passive Aux}
VP =  PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pfinNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans, no passive Aux}
VP =  PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pAgentPPQ - V final, passive, with PP Agent questioned, DP ditrans, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9pAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pAgentPPQNegObjVerbRequired - V final, passive, with PP Agent questioned, DP ditrans, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9pAgentPQ - V final, passive, with PP Agent questioned, stranded, DP ditrans, no passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP option&gt; = 9pAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9pAgentPQNegObjVerbRequired - V final, passive, with PP Agent questioned, stranded, DP ditrans, no passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pDitransDPQ - V final, passive, with PP Agent, DP ditrans questioned, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9pDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pDitransDPQNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans questioned, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9pDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pinitQSubj - V final, passive, PP Agent, DP ditrans, no passive aux, subject questioned}
VP = DP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pinitQSubjNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, no passive aux, subject questioned}
VP = DP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pfinQSubj - V final, passive, PP Agent, DP ditrans, no passive aux, subject questioned}
VP = PP DP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pfinQSubjNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, no passive aux, subject questioned}
VP = PP DP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pinitQAdvP - V final, passive, PP Agent, DP ditrans, no passive aux, AdvP questioned}
VP = DP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pinitQAdvPNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, no passive aux, AdvP questioned}
VP = DP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9pfinQAdvP - V final, passive, PP Agent, DP ditrans, no passive aux, AdvP questioned}
VP = PP DP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9pfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9pfinQAdvPNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, no passive aux, AdvP questioned}
VP = PP DP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9pfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9qinit - V initial, passive, with PP Agent, DP ditrans, passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9qinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9qinitNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans, passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9qinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9qfin - V initial, passive, with PP Agent, DP ditrans, passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9qfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9qfinNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans, passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9qfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9qAgentPPQ - V initial, passive, with PP Agent questioned, DP ditrans, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9qAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9qAgentPPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, DP ditrans, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9qAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9qAgentPQ - V initial, passive, with PP Agent questioned, stranded, DP ditrans, passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9qAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9qAgentPQNegObjVerbRequired - V initial, passive, with PP Agent questioned, stranded, DP ditrans, passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9qAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9qDitransDPQ - V initial, passive, with PP Agent, DP ditrans questioned, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9qDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9qDitransDPQNegObjVerbRequired - V initial, passive, with PP Agent, DP ditrans questioned, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9qDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rinit - V final, passive, with PP Agent, DP ditrans, passive Aux}
VP =  DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rinitNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans, passive Aux}
VP =  DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rfin - V final, passive, with PP Agent, DP ditrans, passive Aux}
VP =  PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rfinNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans, passive Aux}
VP =  PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rAgentPPQ - V final, passive, with PP Agent questioned, DP ditrans, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9rAgentPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rAgentPPQNegObjVerbRequired - V final, passive, with PP Agent questioned, DP ditrans, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;V head fronted head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rAgentPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9rAgentPQ - V final, passive, with PP Agent questioned, stranded, DP ditrans, passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP option&gt; = 9rAgentPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//pp/@alone)='yes'">
<xsl:text>
rule {VP option 9rAgentPQNegObjVerbRequired - V final, passive, with PP Agent questioned, stranded, DP ditrans, passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;DP&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rAgentPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rDitransDPQ - V final, passive, with PP Agent, DP ditrans questioned, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9rDitransDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rDitransDPQNegObjVerbRequired - V final, passive, with PP Agent, DP ditrans questioned, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -       | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9rDitransDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rinitQSubj - V final, passive, PP Agent, DP ditrans, passive aux, subject questioned}
VP = DP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rinitQSubjNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, passive aux, subject questioned}
VP = DP_1 PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rfinQSubj - V final, passive, PP Agent, DP ditrans, passive aux, subject questioned}
VP = PP DP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rfinQSubjNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, passive aux, subject questioned}
VP = PP DP_2 DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rinitQAdvP - V final, passive, PP Agent, DP ditrans, passive aux, AdvP questioned}
VP = DP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rinitQAdvPNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, passive aux, AdvP questioned}
VP = DP_1 PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_1&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP_1 head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9rfinQAdvP - V final, passive, PP Agent, DP ditrans, passive aux, AdvP questioned}
VP = PP DP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9rfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9rfinQAdvPNegObjVerbRequired - V final, passive, PP Agent, DP ditrans, passive aux, AdvP questioned}
VP = PP DP_2 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;PP head object&gt;
          &lt;V head indirectobject&gt; = &lt;DP_2&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = passive
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;AdvP head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -         | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;  
                             [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9rfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
 
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9sinit - V initial, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9sinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9sinitNegObjVerbRequired - V initial, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9sinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9sfin - V initial, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9sfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9sfinNegObjVerbRequired - V initial, passive, with PP Agent phrase, DP ditrans, no passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9sfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9sAgentDPQ - V initial, passive, with DP Agent questioned, PP ditrans, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head bject&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9sAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9sAgentDPQNegObjVerbRequired - V initial, passive, with DP Agent questioned, PP ditrans, no passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head bject&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9sAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9sDitransPPQ - V initial, passive, with DP Agent, PP ditrans questioned, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9sDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9sDitransPPQNegObjVerbRequired - V initial, passive, with DP Agent, PP ditrans questioned, no passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9sDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9sDitransPQ - V initial, passive, with DP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9sDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9sDitransPQNegObjVerbRequired - V initial, passive, with DP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9sDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tinit - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tinitNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tfin - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tfinNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tAgentDPQ - V final, passive, with DP Agent questioned, PP ditrans, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9tAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tAgentDPQNegObjVerbRequired - V final, passive, with DP Agent questioned, PP ditrans, no passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tDitransPPQ - V final, passive, with DP Agent, PP ditrans questioned, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9tDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tDitransPPQNegObjVerbRequired - V final, passive, with DP Agent, PP ditrans questioned, no passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9tDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tDitransPQ - V final, passive, with DP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9tDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tDitransPQNegObjVerbRequired - V final, passive, with DP Agent, PP ditrans questioned, stranded, no passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9tDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tinitQSubj - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, subject questioned}
VP = DP PP DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tinitQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, subject questioned}
VP = DP PP DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tfinQSubj - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, subject questioned}
VP = PP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tfinQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, subject questioned}
VP = PP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tinitQAdvP - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, AdvP questioned}
VP = DP PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tinitQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, AdvP questioned}
VP = DP PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9tfinQAdvP - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, AdvP questioned}
VP = PP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9tfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='no' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9tfinQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, no passive Aux, AdvP questioned}
VP = PP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9tfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9uinit - V initial, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9uinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9uinitNegObjVerbRequired - V initial, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = V DP PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9uinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9ufin - V initial, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9ufin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='nyes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9ufinNegObjVerbRequired - V initial, passive, with PP Agent phrase, DP ditrans, passive Aux}
VP = V PP DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9ufinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 

  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9uAgentDPQ - V initial, passive, with DP Agent questioned, PP ditrans, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head bject&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9uAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='dp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='pp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9uAgentDPQNegObjVerbRequired - V initial, passive, with DP Agent questioned, PP ditrans, passive Aux}
VP = V PP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head bject&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;PP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;PP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9uAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9uDitransPPQ - V initial, passive, with DP Agent, PP ditrans questioned, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9uDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9uDitransPPQNegObjVerbRequired - V initial, passive, with DP Agent, PP ditrans questioned, passive Aux}
VP = V DP
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;DP head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;DP head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9uDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9uDitransPQ - V initial, passive, with DP Agent, PP ditrans questioned, stranded, passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9uDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9uDitransPQNegObjVerbRequired - V initial, passive, with DP Agent, PP ditrans questioned, stranded, passive Aux}
VP = V DP P
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;P head type locative&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;V head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type comma&gt; &lt;= &lt;P head type comma&gt;
          &lt;VP head type suffix&gt; &lt;= &lt;P head type suffix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9uDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
 
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vinit - V final, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vinit
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vinitNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = DP PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vinitNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vfin - V final, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vfin
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vfinNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux}
VP = PP DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vfinNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vAgentDPQ - V final, passive, with DP Agent questioned, PP ditrans, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9vAgentDPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vAgentDPQNegObjVerbRequired - V final, passive, with DP Agent questioned, PP ditrans, passive Aux}
VP = PP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;VP head fronted&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vAgentDPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vDitransPPQ - V final, passive, with DP Agent, PP ditrans questioned, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP option&gt; = 9vDitransPPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vDitransPPQNegObjVerbRequired - V final, passive, with DP Agent, PP ditrans questioned, passive Aux}
VP = DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = PP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9vDitransPPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vDitransPQ - V final, passive, with DP Agent, PP ditrans questioned, stranded, passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP option&gt; = 9vDitransPQ
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//q/@contFront)='before' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//pp/@alone)='yes' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vDitransPQNegObjVerbRequired - V final, passive, with DP Agent, PP ditrans questioned, stranded, passive Aux}
VP = P DP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;VP head fronted head object&gt;
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;V head infl valence&gt; = passive
          &lt;P head infl valence&gt; = active
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;P head type comma&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;P head type prefix&gt;
          &lt;VP head type question&gt; = +
          &lt;VP head fronted head type wh&gt; = +
          &lt;VP head fronted cat&gt; = DP
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP option&gt; = 9vDitransPQNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

      
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  


 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vinitQSubj - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, subject questioned}
VP = DP PP DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vinitQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vinitQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, subject questioned}
VP = DP PP DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vinitQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vfinQSubj - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, subject questioned}
VP = PP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vfinQSubj
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vfinQSubjNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, subject questioned}
VP = PP DP_1 DP_2 V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head subject&gt; = &lt;DP_2&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;VP head type pro-drop&gt; = -
          &lt;DP_2 head type wh&gt; = +
          &lt;DP_2 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_2 head type prefix poss&gt; = -
          &lt;DP_2 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_2 head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;DP_2 head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vfinQSubjNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

 <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vinitQAdvP - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, AdvP questioned}
VP = DP PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vinitQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vinitQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, AdvP questioned}
VP = DP PP AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;DP head type suffix poss&gt; = -         | only in possessor position
          &lt;DP head type prefix poss&gt; = -
          &lt;DP head type prefix copular&gt; = -      | only in no V/Aux copulars
          &lt;DP head type suffix copular&gt; = -
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP head type comma&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;DP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vinitQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)!='yes'">
<xsl:text>
rule {VP option 9vfinQAdvP - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, AdvP questioned}
VP = PP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9vfinQAdvP
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='pp' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@passive)='yes' and normalize-space(//ip/@passiveAgent)='yes' and normalize-space(//ip/@passiveAgentCat)='dp' and normalize-space(//ip/@passiveAux)='yes' and normalize-space(//ip/@diCat)='both' and normalize-space(//q/@contFront)='after' and normalize-space(//neg/@objVerbRequired)='yes'">
<xsl:text>
rule {VP option 9vfinQAdvPNegObjVerbRequired - V final, passive, with DP Agent phrase, PP ditrans, passive Aux, AdvP questioned}
VP = PP DP_1 AdvP V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head object&gt; = &lt;DP_1&gt;
          &lt;V head indirectobject&gt; = &lt;PP head object&gt;
          &lt;V head infl valence&gt; = passive
          &lt;PP head infl valence&gt; = active
          &lt;VP head type auxiliary_required&gt; = +   | passive Aux required
          &lt;V head type ditransitive&gt; = +
          &lt;VP head type question&gt; = +
          &lt;AdvP head type wh&gt; = +
          &lt;PP head type stand-alone&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;PP head type locative&gt; = -
          &lt;PP head type suffix poss&gt; = -         | only in possessor position
          &lt;PP head type prefix poss&gt; = -
          &lt;DP_1 head type suffix poss&gt; = -       | only in possessor position
          &lt;DP_1 head type prefix poss&gt; = -
          &lt;DP_1 head type prefix copular&gt; = -    | only in no V/Aux copulars
          &lt;DP_1 head type suffix copular&gt; = -
          &lt;PP head type comma&gt; = -
          &lt;DP_1 head type comma&gt; = -
          &lt;AdvP head type comma&gt; = -
          &lt;VP head type prefix&gt; &lt;= &lt;PP head type prefix&gt;
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP head&gt; == [object:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if object negative, VP must be
          &lt;VP head&gt; == [indirectobject:[head:[infl:[polarity:negative]]]] -&gt;   
                       [infl:[polarity:negative]] | if indirectobject negative, VP must be
          &lt;VP option&gt; = 9vfinQAdvPNegObjVerbRequired
</xsl:text>
</xsl:if>
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     

    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  

   
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/@voice)='no'">
<xsl:text>
rule {VP option 9w - V initial, antipassive, with optional PP Theme}
VP = V (PP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9w
   </xsl:text>
</xsl:if>
   
      
      
      
      
       
      
      
      
      
      
       
   
   
<xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/@voice)='no' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/@voice)='no'">
<xsl:text>
rule {VP option 9x - V final, antipassive, with optional PP Theme}
VP = (PP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9x
   </xsl:text>
</xsl:if>
   
      
      
      
      
       
      
      
      
      
      
       
   
   
     
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAgr/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAffix/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAffix/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAgr/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 9wVNom - V initial, antipassive, with optional PP Theme}
VP = V (PP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9wVNom
   </xsl:text>
</xsl:if>
   
      
      
      
     
     
      
      
     
     
 
     
     
     
     
     
     
     
     
     
     
      
      
      
     
     
      
      
     
     
     
     
     
     
     
     
     
     
     
     
   
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAgr/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAffix/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAffix/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveAgr/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesNom' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 9xVNom - V final, antipassive, with optional PP Theme}
VP = (PP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = nominative
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = genitive
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = genitive
         }
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9xVNom
   </xsl:text>
</xsl:if>
   
      
      
      
     
     
      
      
     
     
      
     
     
     
     
     
     
     
     
     
     
      
      
      
     
     
      
      
     
     
     
     
     
     
     
     
     
     
     
     
   
   
   <xsl:if test="normalize-space(//typology/@wordOrder)='SVO' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveErg/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='VOS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveErg/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 9wVAbs - V initial, antipassive, with optional PP Theme}
VP = V (PP)
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9wVAbs
   </xsl:text>
</xsl:if>
   
      
      
      
     
     
      
      
     
     
      
      
      
      
     
     
      
      
     
     
   
  
   <xsl:if test="normalize-space(//typology/@wordOrder)='SOV' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveErg/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes' or normalize-space(//typology/@wordOrder)='OVS' and normalize-space(//ip/@antipassive)!='no' and normalize-space(//ip/antipassiveErg/@checked)='yes' and normalize-space(//ip/@voiceCase)='yesAbs' and normalize-space(//ip/@voice)='yes'">
<xsl:text>
rule {VP option 9xVAbs - V final, antipassive, with optional PP Theme}
VP = (PP) V
          &lt;VP head&gt; = &lt;V head&gt;
          &lt;V head infl valence&gt; &lt;= antipassive
         {&lt;V head infl voice&gt; = actor
          &lt;V head subject head case&gt; = absolutive
         /&lt;V head infl voice&gt; = objective
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = dative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = locative
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = instrumental
          &lt;V head subject head case&gt; = ergative
         /&lt;V head infl voice&gt; = goal
          &lt;V head subject head case&gt; = ergative
         }
          &lt;V head type transitive&gt; = +
          &lt;V head type motion&gt; = -
          &lt;PP head type sentential&gt; = -
          &lt;VP head fronted&gt; == ~[cat:FocusP]
          &lt;VP option&gt; = 9xVAbs
   </xsl:text>
</xsl:if>
   
      
      
      
     
     
      
      
     
     
      
      
      
      
     
     
      
      
     
     
   

</xsl:template>
</xsl:stylesheet>
